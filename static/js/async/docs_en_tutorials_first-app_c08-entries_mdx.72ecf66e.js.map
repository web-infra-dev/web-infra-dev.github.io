{"version":3,"file":"static/js/async/docs_en_tutorials_first-app_c08-entries_mdx.72ecf66e.js","sources":["./docs/en/tutorials/first-app/c08-entries.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Ftutorials%2Ffirst-app%2Fc08-entries.mdx\"] = {\"toc\":[{\"text\":\"New entry\",\"id\":\"new-entry\",\"depth\":2},{\"text\":\"Modify the configuration by entry\",\"id\":\"modify-the-configuration-by-entry\",\"depth\":2},{\"text\":\"Next step\",\"id\":\"next-step\",\"depth\":2}],\"title\":\"Add Application Entry\",\"frontmatter\":{\"title\":\"Add Application Entry\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        code: \"code\",\n        pre: \"pre\",\n        img: \"img\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"add-application-entry\">{\"Add Application Entry\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#add-application-entry\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"In the last chapter, we basically completed the development of the point of contact list application, introduced the usage of some functions in the Modern.js, and recommended best practices.\"}</_components.p>{\"\\n\"}<_components.p>{\"In this chapter, we will describe how to add a new entry to the application.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"new-entry\">{\"New entry\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#new-entry\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"A complete project may require multiple entries, Modern.js supports the automatic creation of new entries, as mentioned in the previous section, \"}<_components.code>{\"pnpm run new\"}</_components.code>{\" can enable optional features.\"}</_components.p>{\"\\n\"}<_components.p>{\"We can also use it to create new project elements and execute \"}<_components.code>{\"pnpm run new\"}</_components.code>{\" in the project root directory:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{'? Please select the operation you want: Create Element\\n? Please select the type of element to create: New \"entry\"\\n? Please fill in the entry name: landing-page\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"When created, the project will look like this:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\".\\n├── README.md\\n├── modern.config.ts\\n├── node_modules\\n├── package.json\\n├── pnpm-lock.yaml\\n├── src\\n│   ├── modern-app-env.d.ts\\n│   ├── landing-page\\n│   │   └── routes\\n│   │       ├── index.css\\n│   │       ├── layout.tsx\\n│   │       └── page.tsx\\n│   └── myapp\\n│       ├── components\\n│       │   ├── Avatar\\n│       │   │   └── index.tsx\\n│       │   └── Item\\n│       │       └── index.tsx\\n│       ├── containers\\n│       │   └── Contacts.tsx\\n│       ├── models\\n│       │   └── contacts.ts\\n│       ├── routes\\n│       │   ├── archives\\n│       │   │   └── page.tsx\\n│       │   ├── layout.tsx\\n│       │   └── page.tsx\\n│       └── styles\\n│           └── utils.css\\n└── tsconfig.json\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"You can see that the files of the contact list application are automatically refactored into \"}<_components.code>{\"src/myapp/\"}</_components.code>{\".\"}</_components.p>{\"\\n\"}<_components.p>{\"At the same time, a new \"}<_components.code>{\"src/landing-page/\"}</_components.code>{\" is created, which also has \"}<_components.code>{\"routes/*\"}</_components.code>{\" (the \"}<_components.code>{\"pnpm run new\"}</_components.code>{\" command only does these things, so you can also easily create new entries or modify entries manually).\"}</_components.p>{\"\\n\"}<_components.p>{\"Execute \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\" to display:\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/nuvjhpqnuvr/modern-website/tutorials/c08-entries-myapp.png\" alt=\"design\"/></_components.p>{\"\\n\"}<_components.p>{\"Access \"}<_components.code>{\"http://localhost:8080/\"}</_components.code>{\" to see the application as before.\"}</_components.p>{\"\\n\"}<_components.p>{\"Visit \"}<_components.code>{\"http://localhost:8080/landing-page\"}</_components.code>{\" to see the landing-page for the new entry you just created (Modern.js automatically generated default page).\"}</_components.p>{\"\\n\"}<_components.p>{\"One of the design principles of the Modern.js framework is [\"}<_components.a href=\"https://en.wikipedia.org/wiki/Convention_over_configuration\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Convention over Configuration\"}</_components.a>{\" ]. In most cases, you can write code directly by convention without any configuration. The directory structure in \"}<_components.code>{\"src/\"}</_components.code>{\" is a convention:\"}</_components.p>{\"\\n\"}<_components.p><_components.code>{\"src/myapp/\"}</_components.code>{\" and \"}<_components.code>{\"src/landing-page/\"}</_components.code>{\" are automatically identified as two application portals: myapp and landing-page.\"}</_components.p>{\"\\n\"}<_components.p>{\"The directory name of \"}<_components.code>{\"src/myapp/\"}</_components.code>{\" is the same as the project name (\"}<_components.code>{\"name\"}</_components.code>{\" in \"}<_components.code>{\"package.json\"}</_components.code>{\"), which will be considered as the main entry of the project, and the root path of the project URL (the default in the development environment is \"}<_components.code>{\"http://localhost:8080/\"}</_components.code>{\") will automatically point to the main entry.\"}</_components.p>{\"\\n\"}<_components.p>{\"The URL of other entries is to append the entry name after the root path, such as \"}<_components.code>{\"http://localhost:8080/landing-page\"}</_components.code>{\".\"}</_components.p>{\"\\n\"}<_components.p>{\"Next, we rename \"}<_components.code>{\"src/myapp/\"}</_components.code>{\" to \"}<_components.code>{\"src/contacts/\"}</_components.code>{\":\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"mv src/myapp src/contacts\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Execute \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\" again, the result becomes:\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/nuvjhpqnuvr/modern-website/tutorials/c08-entries-contacts.png\" alt=\"design\"/></_components.p>{\"\\n\"}<_components.p>{\"There is no longer a main entry, the point of contact list is now a normal entry that needs to be accessed with \"}<_components.code>{\"http://localhost:8080/contacts\"}</_components.code>{\".\"}</_components.p>{\"\\n\"}<_components.h2 id=\"modify-the-configuration-by-entry\">{\"Modify the configuration by entry\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modify-the-configuration-by-entry\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"In the Modern.js configuration file, we can write our own code to control the configuration of the project.\"}</_components.p>{\"\\n\"}<_components.p>{\"Now, modify the \"}<_components.code>{\"modern.config.ts\"}</_components.code>{\" to add something:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"import { appTools, defineConfig } from '@modern-js/app-tools';\\nimport { tailwindcssPlugin } from '@modern-js/plugin-tailwindcss';\\n\\nexport default defineConfig({\\n  runtime: {\\n    router: true,\\n    state: true,\\n  },\\n  server: {\\n    ssr: true,\\n    ssrByEntries: {\\n      'landing-page': false,\\n    },\\n  },\\n  plugins: [appTools(), tailwindcssPlugin()],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Execute \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\", and then open \"}<_components.code>{\"view-source: http://localhost:8080/landing-page\"}</_components.code>{\" with the browser, you can see that the content of the \"}<_components.code>{\"landing-page\"}</_components.code>{\" web page is dynamically loaded through js, and the SSR function of this page is turned off.\"}</_components.p>{\"\\n\"}<_components.p>{\"If \"}<_components.code>{\"ssrByEntries\"}</_components.code>{\" and its value are annotated, the SSR function of landing-page is restored.\"}</_components.p>{\"\\n\"}<_components.p>{\"Other times, you need some more sophisticated logic to do the setup, such as JS variables, expressions, import modules, etc., for example, only in the development environment to enable SSR:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default defineConfig({\\n  server: {\\n    ssrByEntries: {\\n      'landing-page': process.env.NODE_ENV !== 'production',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"So far, the prototype of our point of contact list application is almost complete 👏👏👏.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"next-step\">{\"Next step\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#next-step\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Then you can further refine your application by following more tutorials like \"}<_components.a href=\"/guides/get-started/quick-start\">{\"Guides\"}</_components.a>{\", \"}<_components.a href=\"/configure/app/usage\">{\"configuration\"}</_components.a>{\", and more.\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","code","pre","img","components","id","className","href","src","alt","target","rel","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}