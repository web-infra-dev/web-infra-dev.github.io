{"version":3,"file":"static/js/async/docs_zh_guides_topic-detail_framework-plugin_extend_mdx.1c1c47a2.js","sources":["./docs/zh/guides/topic-detail/framework-plugin/extend.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguides%2Ftopic-detail%2Fframework-plugin%2Fextend.mdx\"] = {\"toc\":[{\"text\":\"示例\",\"id\":\"示例\",\"depth\":2},{\"text\":\"创建 Hook\",\"id\":\"创建-hook\",\"depth\":3},{\"text\":\"使用 Hook\",\"id\":\"使用-hook\",\"depth\":3}],\"title\":\"扩展插件 Hook\",\"frontmatter\":{\"title\":\"扩展插件 Hook\",\"sidebar_position\":5}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        pre: \"pre\",\n        code: \"code\",\n        h3: \"h3\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"扩展插件-hook\">{\"扩展插件 Hook\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#扩展插件-hook\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"本小节介绍如何通过动态注册 \"}<_components.a href=\"/guides/topic-detail/framework-plugin/hook\">{\"Hook 模型\"}</_components.a>{\" 的方式来扩展插件 Hook。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"这里我们用一个简单的例子演示一下。假设我们要添加一些管理控制台输出信息的 Hook。\"}</_components.p>{\"\\n\"}<_components.p>{\"首先我们初始化一个空的项目文件，并添加基础依赖：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"$ npx @modern-js/create@latest modern-js-demo\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"创建-hook\">{\"创建 Hook\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#创建-hook\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"我们先创建一个 Hook 模型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=config/plugin/myPlugin.ts\">{\"import { createWaterfall } from '@modern-js/plugin';\\n\\nconst message = createWaterfall<string[]>();\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"然后注册它：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=config/plugin/myPlugin.ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\nexport const myPlugin = (): CliPlugin => ({\\n  name: 'my-plugin',\\n\\n  registerHook: {\\n    message,\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"添加 Hook 类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=config/plugin/myPlugin.ts\">{\"declare module '@modern-js/core' {\\n  export interface Hooks {\\n    message: typeof message;\\n  }\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"使用-hook\">{\"使用 Hook\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用-hook\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"创建插件，通过 \"}<_components.code>{\"commands\"}</_components.code>{\" Hook 函数，添加命令处理逻辑：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=config/plugin/myPlugin.ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\nexport const myPlugin = (): CliPlugin => ({\\n  name: 'my-plugin',\\n\\n  setup(api) {\\n    return {\\n      commands({ program }) {\\n        program.command('message').action(async () => {\\n          const hookRunners = api.useHookRunners();\\n          const messages = hookRunners.message([]);\\n          console.log(messages.join('\\\\n'));\\n        });\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"最后 \"}<_components.code>{\"config/plugin/myPlugin.ts\"}</_components.code>{\" 的状态是：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=config/plugin/myPlugin.ts\">{\"import { createWaterfall } from '@modern-js/plugin';\\nimport type { CliPlugin } from '@modern-js/core';\\n\\nconst message = createWaterfall<string[]>();\\n\\nexport const myPlugin = (): CliPlugin => ({\\n  name: 'my-plugin',\\n\\n  registerHook: {\\n    message,\\n  },\\n\\n  setup(api) {\\n    return {\\n      commands({ program }) {\\n        program.command('message').action(async () => {\\n          const hookRunners = api.useHookRunners();\\n          const messages = hookRunners.message([]);\\n          console.log(messages.join('\\\\n'));\\n        });\\n      },\\n    };\\n  },\\n});\\n\\ndeclare module '@modern-js/core' {\\n  export interface Hooks {\\n    message: typeof message;\\n  }\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"然后在 \"}<_components.code>{\"modern.config.ts\"}</_components.code>{\" 中添加这个插件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"import { defineConfig } from '@modern-js/app-tools';\\nimport { myPlugin } from './config/plugin/myPlugin';\\n\\nexport default defineConfig({\\n  plugins: [myPlugin()],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"这时运行 \"}<_components.code>{\"npx modern message\"}</_components.code>{\" 就会执行相关逻辑，但由于没有收集到任何信息，所以控制台输出为空。\"}</_components.p>{\"\\n\"}<_components.p>{\"那这里我们添加一个：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=config/plugin/otherPlugin.ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\nexport const otherPlugin = (): CliPlugin => ({\\n  name: 'other-plugin',\\n\\n  setup(api) {\\n    return {\\n      message(list) {\\n        return [...list, '[foo] line 0', '[foo] line 1'];\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"将它添加到配置中：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"import { defineConfig } from '@modern-js/app-tools';\\nimport { myPlugin } from './config/plugin/myPlugin';\\nimport { otherPlugin } from './config/plugin/otherPlugin';\\n\\nexport default defineConfig({\\n  plugins: [myPlugin(), otherPlugin()],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"这时运行 \"}<_components.code>{\"npx modern message\"}</_components.code>{\" 就可以在控制台看到信息了：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"$ modern message\\n[foo] line 0\\n[foo] line 1\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"以上面这种方式就可以扩展出拥有各种能力的插件 Hook。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","pre","code","h3","components","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"uOAAA,E,mDAGA,SAASA,EAAkBC,CAAK,EAC5B,IAAMC,EAAcC,OAAOC,MAAM,CAAC,CAC9BC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,GAAI,IACR,EAAG,yBAAsBV,EAAMW,UAAU,EACzC,MAAO,uB,UAAE,WAACV,EAAYG,EAAE,EAACQ,GAAG,Y,UAAa,YAAY,UAACX,EAAYI,CAAC,EAACQ,UAAU,gBAAgB,cAAY,OAAOC,KAAK,a,SAAc,G,MAAsC,KAAK,WAACb,EAAYK,CAAC,E,UAAE,iBAAiB,UAACL,EAAYI,CAAC,EAACS,KAAK,6C,SAA8C,S,GAA2B,kB,GAAmC,KAAK,WAACb,EAAYM,EAAE,EAACK,GAAG,K,UAAM,KAAK,UAACX,EAAYI,CAAC,EAACQ,UAAU,gBAAgB,cAAY,OAAOC,KAAK,M,SAAO,G,MAAsC,KAAK,UAACb,EAAYK,CAAC,E,SAAE,4C,GAA8D,KAAK,UAACL,EAAYK,CAAC,E,SAAE,0B,GAA4C,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,gB,SAAiB,iD,KAAwF,KAAK,WAACZ,EAAYS,EAAE,EAACE,GAAG,U,UAAW,UAAU,UAACX,EAAYI,CAAC,EAACQ,UAAU,gBAAgB,cAAY,OAAOC,KAAK,W,SAAY,G,MAAsC,KAAK,UAACb,EAAYK,CAAC,E,SAAE,kB,GAAoC,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,cAAcE,KAAK,kC,SAAmC,wG,KAA+I,KAAK,UAACd,EAAYK,CAAC,E,SAAE,Q,GAA0B,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,cAAcE,KAAK,kC,SAAmC,wK,KAA+M,KAAK,UAACd,EAAYK,CAAC,E,SAAE,a,GAA+B,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,cAAcE,KAAK,kC,SAAmC,wG,KAA+I,KAAK,WAACd,EAAYS,EAAE,EAACE,GAAG,U,UAAW,UAAU,UAACX,EAAYI,CAAC,EAACQ,UAAU,gBAAgB,cAAY,OAAOC,KAAK,W,SAAY,G,MAAsC,KAAK,WAACb,EAAYK,CAAC,E,UAAE,WAAW,UAACL,EAAYQ,IAAI,E,SAAE,U,GAA+B,qB,GAAsC,KAAK,UAACR,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,cAAcE,KAAK,kC,SAAmC,ob,KAA2d,KAAK,WAACd,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYQ,IAAI,E,SAAE,2B,GAAgD,S,GAA0B,KAAK,UAACR,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,cAAcE,KAAK,kC,SAAmC,2qB,KAAktB,KAAK,WAACd,EAAYK,CAAC,E,UAAE,OAAO,UAACL,EAAYQ,IAAI,E,SAAE,kB,GAAuC,Y,GAA6B,KAAK,UAACR,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,cAAcE,KAAK,2B,SAA4B,8K,KAAqN,KAAK,WAACd,EAAYK,CAAC,E,UAAE,QAAQ,UAACL,EAAYQ,IAAI,E,SAAE,oB,GAAyC,oC,GAAqD,KAAK,UAACR,EAAYK,CAAC,E,SAAE,Y,GAA8B,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,cAAcE,KAAK,qC,SAAsC,+Q,KAAsT,KAAK,UAACd,EAAYK,CAAC,E,SAAE,W,GAA6B,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,cAAcE,KAAK,2B,SAA4B,yP,KAAgS,KAAK,WAACd,EAAYK,CAAC,E,UAAE,QAAQ,UAACL,EAAYQ,IAAI,E,SAAE,oB,GAAyC,iB,GAAkC,KAAK,UAACR,EAAYO,GAAG,E,SAAC,UAACP,EAAYQ,IAAI,EAACI,UAAU,gB,SAAiB,gD,KAAuF,KAAK,UAACZ,EAAYK,CAAC,E,SAAE,8B,KAC12K,CAdA,GAAAU,UAAA,EAAWC,mBAAmB,EAA9B,GAAWA,mBAAmB,CAAK,CAAC,GACpCD,WAAWC,mBAAmB,CAAC,6DAA6D,CAAG,CAAC,IAAM,CAAC,CAAC,KAAO,KAAK,GAAK,KAAK,MAAQ,CAAC,EAAE,CAAC,KAAO,UAAU,GAAK,UAAU,MAAQ,CAAC,EAAE,CAAC,KAAO,UAAU,GAAK,UAAU,MAAQ,CAAC,EAAE,CAAC,MAAQ,YAAY,YAAc,CAAC,MAAQ,YAAY,iBAAmB,CAAC,CAAC,EAkB9S,MAJA,W,IAAoBjB,EAAQ,UAAR,6CAAQ,CAAC,EACRkB,EAAc,AAAAhB,OAAOC,MAAM,CAAC,CAAC,EAAG,yBAAsBH,EAAMW,UAAU,EAA/EQ,OAAO,CACf,OAAOD,EAAY,UAACA,EAAA,mBAAclB,GAAA,C,SAAO,UAACD,EAAA,KAAAqB,CAAA,AAAAA,EAAA,GAAsBpB,G,IAAuBD,EAAkBC,EAC7G,C"}