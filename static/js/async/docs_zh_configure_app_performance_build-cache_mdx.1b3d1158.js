(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_zh_configure_app_performance_build-cache_mdx"],{53702:function(e,n,c){"use strict";c.r(n),c.d(n,{default:function(){return h}});var r,s=c("15169"),i=c("43932"),d=c("9880"),a=c("23169");function l(e){var n=Object.assign({ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",p:"p",h3:"h3",a:"a",h4:"h4"},(0,a.useMDXComponents)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.strong,{children:"类型："})}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"type BuildCacheConfig =\n  | {\n      /**\n       * webpack 文件缓存系统的缓存目录\n       */\n      cacheDirectory?: string;\n      /**\n       * 根据 cacheDigest 内容设置不同的缓存名称\n       */\n      cacheDigest?: Array<string | undefined>;\n    }\n  | boolean;\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.strong,{children:"默认值："})}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-js",children:"const defaultBuildCacheConfig = {\n  cacheDirectory: './node_modules/.cache/webpack',\n};\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"打包工具："})," ",(0,d.jsx)(n.code,{children:"仅支持 webpack"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"控制 Builder 在构建过程中的缓存行为。"}),"\n",(0,d.jsxs)(n.p,{children:["Builder 默认会开启构建缓存来提升二次构建的速度，并默认把生成的缓存文件写到 ",(0,d.jsx)(n.code,{children:"./node_modules/.cache/webpack"})," 目录下。"]}),"\n",(0,d.jsxs)(n.p,{children:["你可以通过 ",(0,d.jsx)(n.code,{children:"buildCache"})," 配置缓存路径，比如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-js",children:"export default {\n  performance: {\n    buildCache: {\n      cacheDirectory: './node_modules/.custom_cache/webpack',\n    },\n  },\n};\n"})}),"\n",(0,d.jsxs)(n.p,{children:["如果不希望缓存，你也可以将 ",(0,d.jsx)(n.code,{children:"buildCache"})," 置为 ",(0,d.jsx)(n.code,{children:"false"})," 将其禁用掉："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-js",children:"export default {\n  performance: {\n    buildCache: false,\n  },\n};\n"})}),"\n",(0,d.jsxs)(n.h3,{id:"cachedigest",children:["cacheDigest",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#cachedigest",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"cacheDigest"})," 用来添加一些会对构建结果产生影响的环境变量。Builder 将根据 ",(0,d.jsx)(n.code,{children:"cacheDigest"})," 内容和当前构建模式来设置缓存名称，来确保不同的 ",(0,d.jsx)(n.code,{children:"cacheDigest"})," 可以命中不同的缓存。"]}),"\n",(0,d.jsxs)(n.h4,{id:"示例",children:["示例",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#示例",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["当前项目需要根据不同的 ",(0,d.jsx)(n.code,{children:"APP_ID"})," 来设置不同的 extensions。默认情况下，由于当前项目的代码 & 配置 & 依赖未发生变化，会命中之前的缓存。\n通过将 ",(0,d.jsx)(n.code,{children:"APP_ID"})," 添加到 ",(0,d.jsx)(n.code,{children:"cacheDigest"})," 中，在 ",(0,d.jsx)(n.code,{children:"APP_ID"})," 变化时会去查找不同的缓存结果，从而避免命中不符合预期的缓存结果。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-js",children:"export default {\n  tools: {\n    bundlerChain: chain => {\n      if (process.env.APP_ID === 'xxx') {\n        chain.resolve.extensions.prepend('.ttp.ts');\n      }\n    },\n  },\n  performance: {\n    buildCache: {\n      cacheDigest: [process.env.APP_ID],\n    },\n  },\n};\n"})})]})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["..%2F..%2Fbuilder-doc%2Fdocs%2Fzh%2Fconfig%2Fperformance%2FbuildCache.md"]={toc:[{text:"cacheDigest",id:"cachedigest",depth:3},{text:"示例",id:"示例",depth:4}],title:"",frontmatter:{}};var h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,a.useMDXComponents)(),e.components).wrapper;return n?(0,d.jsx)(n,(0,i._)((0,s._)({},e),{children:(0,d.jsx)(l,(0,s._)({},e))})):l(e)}},29333:function(e,n,c){"use strict";c.r(n),c.d(n,{default:function(){return o}});var r,s=c("15169"),i=c("43932"),d=c("9880"),a=c("23169"),l=c("53702");function h(e){var n=Object.assign({h1:"h1",a:"a",div:"div",p:"p"},(0,a.useMDXComponents)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"performancebuildcache",children:["performance.buildCache",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#performancebuildcache",children:"#"})]}),"\n",(0,d.jsxs)(n.div,{className:"modern-directive tip",children:[(0,d.jsx)(n.div,{className:"modern-directive-title",children:"TIP"}),(0,d.jsx)(n.div,{className:"modern-directive-content",children:(0,d.jsxs)(n.p,{children:["该配置由 Modern.js Builder 提供，更多信息可参考 ",(0,d.jsx)(n.a,{href:"https://modernjs.dev/builder/api/config-performance.html#performancebuildcache",target:"_blank",rel:"noopener noreferrer",children:"performance.buildCache"}),"。\n"]})})]}),"\n","\n",(0,d.jsx)(l.default,{})]})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fconfigure%2Fapp%2Fperformance%2Fbuild-cache.mdx"]={toc:[],title:"performance.buildCache",frontmatter:{sidebar_label:"buildCache"}};var o=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,a.useMDXComponents)(),e.components).wrapper;return n?(0,d.jsx)(n,(0,i._)((0,s._)({},e),{children:(0,d.jsx)(h,(0,s._)({},e))})):h(e)}}}]);