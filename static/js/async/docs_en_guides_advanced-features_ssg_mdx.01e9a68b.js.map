{"version":3,"file":"static/js/async/docs_en_guides_advanced-features_ssg_mdx.01e9a68b.js","sources":["./docs/en/guides/advanced-features/ssg.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fguides%2Fadvanced-features%2Fssg.mdx\"] = {\"toc\":[{\"text\":\"Using with Conventional Routing\",\"id\":\"using-with-conventional-routing\",\"depth\":3},{\"text\":\"Using with Self-controlled Routing\",\"id\":\"using-with-self-controlled-routing\",\"depth\":3}],\"title\":\"Static Site Generation\",\"frontmatter\":{\"sidebar_position\":5}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport SelfRouteExample from '@site-docs/components/self-route-example';\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        pre: \"pre\",\n        strong: \"strong\",\n        h3: \"h3\",\n        ul: \"ul\",\n        li: \"li\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"static-site-generation\">{\"Static Site Generation\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#static-site-generation\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"SSG (Static Site Generation) is a solution based on data and templates that renders complete static web pages during the build process.\"}</_components.p>{\"\\n\"}<_components.p>{\"First need to execute \"}<_components.code>{\"pnpm run new\"}</_components.code>{\" to enable the SSG feature:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"? Please select the operation you want: Enable features\\n? Please select the feature name: Enable SSG\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Register the SSG plugin in \"}<_components.code>{\"modern.config.ts\"}</_components.code>{\" after executing the command:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"import { ssgPlugin } from '@modern-js/plugin-ssg';\\n\\nexport default defineConfig({\\n  output: {\\n    ssg: true,\\n  },\\n  plugins: [..., ssgPlugin()],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The usage of SSG differs between the \"}<_components.strong>{\"Conventional Routing\"}</_components.strong>{\" and \"}<_components.strong>{\"Self-controlled Routing\"}</_components.strong>{\".\"}</_components.p>{\"\\n\"}<_components.h3 id=\"using-with-conventional-routing\">{\"Using with Conventional Routing\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#using-with-conventional-routing\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"In the Conventional Routing of Modern.js, the framework generates routes based on the file structure under the entry point, so it can collect complete routing information.\"}</_components.p>{\"\\n\"}<_components.p>{\"For example, here is a project directory structure that uses conventional routing:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\".\\n├── src\\n│   └── routes\\n│       ├── layout.tsx\\n│       ├── page.tsx\\n│       └── user\\n│           ├── layout.tsx\\n│           ├── page.tsx\\n│           └── profile\\n│               └── page.tsx\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The above file directory will generate the following three routes:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"/\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"/user\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"/user/profile\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.div className=\"modern-directive note\"><_components.div className=\"modern-directive-title\">{\"NOTE\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"If you are not familiar with the rules of Conventional Routing, you can first check \"}<_components.a href=\"/guides/basic-features/routes\">{\"Routing\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"Add component code in \"}<_components.code>{\"src/routes/page.tsx\"}</_components.code>{\":\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-jsx\" meta='title=\"src/routes/page.tsx\"'>{\"export default () => {\\n  return <div>Index Page</div>;\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"SSG also renders pages in a Node.js environment, so we can \"}<_components.strong>{\"enable SSR during development\"}</_components.strong>{\" to expose code issues and validate SSG rendering effects in advance:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"export default defineConfig({\\n  server: {\\n    ssr: process.env.NODE_ENV === 'development',\\n  }\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Execute the \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\" command in the project to view the \"}<_components.code>{\"dist/\"}</_components.code>{\" directory, and only generate an HTML file \"}<_components.code>{\"main/index.html\"}</_components.code>{\".\"}</_components.p>{\"\\n\"}<_components.p>{\"Execute the \"}<_components.code>{\"pnpm run build\"}</_components.code>{\" command in the root path of the project. After the construction is completed, view the \"}<_components.code>{\"dist/\"}</_components.code>{\" directory, and generate \"}<_components.code>{\"main/index.html\"}</_components.code>{\", \"}<_components.code>{\"main/user/index.html\"}</_components.code>{\" and \"}<_components.code>{\"main/user/profile/index.html\"}</_components.code>{\" three HTML files, the content corresponds to the above three routes.\"}</_components.p>{\"\\n\"}<_components.p>{\"Each route in the \"}<_components.strong>{\"Conventional Routing\"}</_components.strong>{\" will generate a separate HTML file. By viewing \"}<_components.code>{\"main/index.html\"}</_components.code>{\", you can find the text content that includes the \"}<_components.code>{\"Index Page\"}</_components.code>{\", which is exactly the effect of SSG.\"}</_components.p>{\"\\n\"}<_components.p>{\"After executing \"}<_components.code>{\"pnpm run serve\"}</_components.code>{\" to start the project, visit the page in the Network, view the document returned by the request. The document contains the complete page content rendered by the component.\"}</_components.p>{\"\\n\"}<_components.h3 id=\"using-with-self-controlled-routing\">{\"Using with Self-controlled Routing\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#using-with-self-controlled-routing\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.strong>{\"Self-controlled routing\"}</_components.strong>{\" is a routing through component code, which requires the application to run to obtain accurate routing information. Therefore, the SSG function cannot be used out of the box. At this time, users needs to inform the Modern.js framework in advance which routes need to enable SSG.\"}</_components.p>{\"\\n\"}<_components.p>{\"For example, there is the following code which contains multiple routes. When setting \"}<_components.code>{\"output.ssg\"}</_components.code>{\" to \"}<_components.code>{\"true\"}</_components.code>{\", only the entry route '/' will be rendered by default:\"}</_components.p>{\"\\n\"}{\"\\n\"}<SelfRouteExample/>{\"\\n\"}<_components.p>{\"We can configure \"}<_components.code>{\"output.ssg\"}</_components.code>{\" to inform Modern.js to enable SSG for specific routes, such as \"}<_components.code>{\"/about\"}</_components.code>{\":\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"export default defineConfig({\\n  output: {\\n    ssg: {\\n      routes: ['/', '/about'],\\n    },\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"After executing \"}<_components.code>{\"pnpm run build\"}</_components.code>{\" and \"}<_components.code>{\"pnpm run serve\"}</_components.code>{\", you can access \"}<_components.code>{\"http://localhost:8080/about\"}</_components.code>{\" to see the rendered page in preview.\"}</_components.p>{\"\\n\"}<_components.p>{\"You can check the bundle file that a new \"}<_components.code>{\"main/about/index.html\"}</_components.code>{\" file has been added to the \"}<_components.code>{\"dist/\"}</_components.code>{\" directory.\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"Above only introduces the case of single entry, for more related content please refer to the \"}<_components.a href=\"/configure/app/output/ssg\">{\"SSG API\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}</_components.div></_components.div></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","pre","strong","h3","ul","li","div","components","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}