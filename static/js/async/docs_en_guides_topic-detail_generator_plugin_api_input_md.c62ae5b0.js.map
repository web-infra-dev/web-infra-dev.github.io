{"version":3,"file":"static/js/async/docs_en_guides_topic-detail_generator_plugin_api_input_md.c62ae5b0.js","sources":["./docs/en/guides/topic-detail/generator/plugin/api/input.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fguides%2Ftopic-detail%2Fgenerator%2Fplugin%2Fapi%2Finput.md\"] = {\"toc\":[{\"text\":\"type\",\"id\":\"type\",\"depth\":2},{\"text\":\"title\",\"id\":\"title\",\"depth\":2},{\"text\":\"default\",\"id\":\"default\",\"depth\":2},{\"text\":\"enum\",\"id\":\"enum\",\"depth\":2},{\"text\":\"x-validator\",\"id\":\"x-validator\",\"depth\":2},{\"text\":\"x-reactions\",\"id\":\"x-reactions\",\"depth\":2},{\"text\":\"properties\",\"id\":\"properties\",\"depth\":2}],\"title\":\"Input\",\"frontmatter\":{\"sidebar_position\":4}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        pre: \"pre\",\n        code: \"code\",\n        h2: \"h2\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"input\">{\"Input\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#input\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Generator plugin provides a way to interact with users through Input, which is defined using JSON Schema:\"}</_components.p>{\"\\n\"}<_components.p>{\"For example:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const schema = {\\n  type: 'object',\\n  properties: {\\n    language: {\\n      type: 'string',\\n      title: 'Please select the programming language:',\\n      enum: [\\n        { label: 'TS', value: 'ts' },\\n        { label: 'ES6+', value: 'js' },\\n      ],\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"JSON Schema format is based on the open source \"}<_components.a href=\"https://formilyjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Formily\"}</_components.a>{\" Schema format. The following are the supported fields:\"}</_components.p>{\"\\n\"}<_components.h2 id=\"type\">{\"type\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#type\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Defines the type of the current schema. Currently supported types are \"}<_components.code>{\"string\"}</_components.code>{\", \"}<_components.code>{\"number\"}</_components.code>{\", and \"}<_components.code>{\"object\"}</_components.code>{\". \"}<_components.code>{\"string\"}</_components.code>{\" type is used for string inputs and dropdown options. \"}<_components.code>{\"object\"}</_components.code>{\" type is used for nesting schemas and needs to be used with the \"}<_components.code>{\"properties\"}</_components.code>{\" attribute.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"title\">{\"title\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#title\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Defines the display name of the current schema.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"default\">{\"default\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#default\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Defines the default value of the current schema.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"enum\">{\"enum\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#enum\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Defines the options when the current schema is a dropdown selection.\"}</_components.p>{\"\\n\"}<_components.p>{\"The sub-items support \"}<_components.code>{\"string\"}</_components.code>{\" or \"}<_components.code>{\"{ label: string; value: string}\"}</_components.code>{\" types. When the value and display value are the same in the dropdown options, \"}<_components.code>{\"string\"}</_components.code>{\" can be used directly to define the options.\"}</_components.p>{\"\\n\"}<_components.p>{\"When representing multiple selection options, set the \"}<_components.code>{\"default\"}</_components.code>{\" field to \"}<_components.code>{\"[]\"}</_components.code>{\".\"}</_components.p>{\"\\n\"}<_components.h2 id=\"x-validator\">{\"x-validator\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#x-validator\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Defines the validation rules for the current schema. When the schema is an input type, validation will be automatically performed after input completion.\"}</_components.p>{\"\\n\"}<_components.p>{\"The validation rules supported here are provided by \"}<_components.a href=\"https://formilyjs.org/zh-CN/guide/advanced/validate\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Formily\"}</_components.a>{\", for example, the maximum value is 5:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const schema = {\\n  type: 'object',\\n  properties: {\\n    max_5: {\\n      type: 'number',\\n      title: 'Maximum value (>5 will cause an error)',\\n      'x-validator': {\\n        maximum: 5,\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"It also supports using validation functions directly:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const schema = {\\n  type: 'object',\\n  properties: {\\n    path: {\\n      type: 'string',\\n      title: 'Can only contain numbers and letters',\\n      'x-validator': value => {\\n        if (!/^[0-9a-zA-Z]*$/g.test(value)) {\\n          return 'Incorrect format';\\n        }\\n        return '';\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"x-reactions\">{\"x-reactions\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#x-reactions\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Use linkage between schemas. This is exactly the same as \"}<_components.a href=\"https://formilyjs.org/zh-CN/guide/advanced/linkages\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Formily linkage rules\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.p>{\"For example:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const schema = {\\n  type: 'object',\\n  properties: {\\n    name: {\\n      type: 'string',\\n      title: 'Name',\\n    },\\n    path: {\\n      type: 'string',\\n      title: 'Path',\\n      'x-reactions': [\\n        {\\n          dependencies: ['name'],\\n          fulfill: {\\n            state: {\\n              value: '{{$deps[0]}}',\\n            },\\n          },\\n        },\\n      ],\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"properties\">{\"properties\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#properties\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Organize the structure of the current schema and define sub-forms. \"}<_components.code>{\"properties\"}</_components.code>{\" is an object, where the \"}<_components.code>{\"key\"}</_components.code>{\" is the schema keyword and the \"}<_components.code>{\"value\"}</_components.code>{\" is a schema object as described above.\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","pre","code","h2","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}