{"version":3,"file":"static/js/async/docs_zh_guides_concept_entries_mdx.caa6fc57.js","sources":["./docs/zh/components/entry-mode.mdx","./docs/zh/guides/concept/entries.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fcomponents%2Fentry-mode.mdx\"] = {\"toc\":[],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    return <></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguides%2Fconcept%2Fentries.mdx\"] = {\"toc\":[{\"text\":\"什么是入口（Entry）\",\"id\":\"什么是入口entry\",\"depth\":2},{\"text\":\"单入口与多入口\",\"id\":\"单入口与多入口\",\"depth\":2},{\"text\":\"入口类型\",\"id\":\"入口类型\",\"depth\":2},{\"text\":\"框架模式入口\",\"id\":\"框架模式入口\",\"depth\":3},{\"text\":\"约定式路由\",\"id\":\"约定式路由\",\"depth\":4},{\"text\":\"自控式路由\",\"id\":\"自控式路由\",\"depth\":4},{\"text\":\"自定义 Bootstrap\",\"id\":\"自定义-bootstrap\",\"depth\":4},{\"text\":\"构建模式入口\",\"id\":\"构建模式入口\",\"depth\":3},{\"text\":\"使用配置指定入口\",\"id\":\"使用配置指定入口\",\"depth\":2},{\"text\":\"禁用默认入口扫描\",\"id\":\"禁用默认入口扫描\",\"depth\":3}],\"title\":\"页面入口\",\"frontmatter\":{\"sidebar_position\":1}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport EntryMode from '@site-docs/components/entry-mode.mdx';\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        strong: \"strong\",\n        pre: \"pre\",\n        code: \"code\",\n        div: \"div\",\n        ol: \"ol\",\n        li: \"li\",\n        h3: \"h3\",\n        h4: \"h4\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"页面入口\">{\"页面入口\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#页面入口\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"通过本章节，你可以了解到 Modern.js 中的入口约定，以及如何自定义入口。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"什么是入口entry\">{\"什么是入口（Entry）\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#什么是入口entry\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p><_components.strong>{\"入口指的是一个页面的起始模块。\"}</_components.strong></_components.p>{\"\\n\"}<_components.p>{\"在 Modern.js 项目中，每一个入口对应一个独立的页面，也对应一条服务端路由。默认情况下，Modern.js 会基于目录约定来自动确定页面的入口，同时也支持通过配置项来自定义入口。\"}</_components.p>{\"\\n\"}<_components.p>{\"Modern.js 提供的很多配置项都是以入口为维度进行划分的，比如页面标题、HTML 模板、页面 Meta 信息、是否开启 SSR/SSG、服务端路由规则等。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"单入口与多入口\">{\"单入口与多入口\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#单入口与多入口\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Modern.js 初始化的项目是单入口的（SPA），项目结构如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code>{\".\\n├── src\\n│   └── routes\\n│       ├── index.css\\n│       ├── layout.tsx\\n│       └── page.tsx\\n├── package.json\\n├── modern.config.ts\\n└── tsconfig.json\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在 Modern.js 项目中，你可以很方便的将单入口切换成多入口，直接在项目下执行 \"}<_components.code>{\"pnpm run new\"}</_components.code>{\"，根据提示创建入口即可：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"? 请选择你想要的操作 创建工程元素\\n? 请选择创建元素类型 新建「应用入口」\\n? 请填写入口名称 new-entry\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"执行后，Modern.js 会自动生成一个新的入口目录，此时可以看到 \"}<_components.code>{\"src/\"}</_components.code>{\" 目录变成如下结构：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\".\\n├── myapp    # 原入口\\n│   └── routes\\n│       ├── index.css\\n│       ├── layout.tsx\\n│       └── page.tsx\\n└── new-entry # 新入口\\n    └── routes\\n        ├── index.css\\n        ├── layout.tsx\\n        └── page.tsx\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"原本的入口代码被移动到了和 \"}<_components.code>{\"package.json\"}</_components.code>{\" 中 \"}<_components.code>{\"name\"}</_components.code>{\" 同名的目录下，并创建了 \"}<_components.code>{\"new-entry\"}</_components.code>{\" 入口目录。\"}</_components.p>{\"\\n\"}<_components.p>{\"执行 \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\" 后，可以看到新增了一条名为 \"}<_components.code>{\"/new-entry\"}</_components.code>{\" 的路由，并且被迁移的代码路由并未发生变化。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"Modern.js 会将与 \"}<_components.code>{\"package.json\"}</_components.code>{\" 文件中 \"}<_components.code>{\"name\"}</_components.code>{\" 字段同名的入口作为主入口，主入口的路由为 \"}<_components.code>{\"/\"}</_components.code>{\"，其他入口的路由为 \"}<_components.code>{\"/{entryName}\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如，\"}<_components.code>{\"package.json\"}</_components.code>{\" 中的 \"}<_components.code>{\"name\"}</_components.code>{\" 为 \"}<_components.code>{\"myapp\"}</_components.code>{\" 时，\"}<_components.code>{\"src/myapp\"}</_components.code>{\" 会作为项目的主入口。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"入口类型\">{\"入口类型\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#入口类型\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"不同的入口类型具有不同的编译和运行时行为。\"}</_components.p>{\"\\n\"}{\"\\n\"}<EntryMode/>{\"\\n\"}<_components.p>{\"默认情况下，Modern.js 启动项目前会对 \"}<_components.code>{\"src/\"}</_components.code>{\" 下的文件进行扫描，识别入口，并生成对应的服务端路由。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"可以通过 \"}<_components.a href=\"/configure/app/source/entries-dir\">{\"source.entriesDir\"}</_components.a>{\" 修改页面的入口识别目录。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"并非 \"}<_components.code>{\"src/\"}</_components.code>{\" 下所有的一级目录都会成为项目入口, 入口所在目录必须满足以下四个条件之一：\"}</_components.p>{\"\\n\"}<_components.ol>{\"\\n\"}<_components.li>{\"具有 \"}<_components.code>{\"routes/\"}</_components.code>{\" 目录。\"}</_components.li>{\"\\n\"}<_components.li>{\"具有 \"}<_components.code>{\"App.[jt]sx?\"}</_components.code>{\" 文件。\"}</_components.li>{\"\\n\"}<_components.li>{\"具有 \"}<_components.code>{\"index.[jt]sx?\"}</_components.code>{\" 文件。\"}</_components.li>{\"\\n\"}<_components.li>{\"具有 \"}<_components.code>{\"pages/\"}</_components.code>{\" 目录（兼容 Modern.js 1.0）。\"}</_components.li>{\"\\n\"}</_components.ol>{\"\\n\"}<_components.p>{\"当 \"}<_components.code>{\"src/\"}</_components.code>{\" 目录满足入口特征时，Modern.js 会认为当前项目为单入口应用。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"在单入口应用中，默认的入口名为 \"}<_components.code>{\"main\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"当项目不是单入口应用时，Modern.js 会进一步查看 \"}<_components.code>{\"src/\"}</_components.code>{\" 下的一级目录。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"框架模式入口\">{\"框架模式入口\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#框架模式入口\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"框架模式指需要使用 Modern.js 框架能力，例如 Router、SSR、一体化调用等。这类入口约定下，开发者定义的入口并不是真正的 webpack 编译入口。Modern.js 在启动时会生成一个封装过的入口，可以在 \"}<_components.code>{\"node_modules/.modern/{entryName}/index.js\"}</_components.code>{\" 找到真正的入口。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"约定式路由\">{\"约定式路由\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#约定式路由\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"如果入口中存在 \"}<_components.code>{\"routes/\"}</_components.code>{\" 目录，Modern.js 会在启动时扫描 \"}<_components.code>{\"routes/\"}</_components.code>{\" 下的文件，基于文件约定，自动生成客户端路由（react-router）。例如：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\".\\n├── src\\n│   └── routes\\n│       ├── layout.tsx\\n│       └── page.tsx\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"上述目录中，\"}<_components.code>{\"layout.tsx\"}</_components.code>{\" 中导出的组件会作为最外层的组件，\"}<_components.code>{\"page.tsx\"}</_components.code>{\" 中导出的组件会作为 \"}<_components.code>{\"/\"}</_components.code>{\" 路由的组件。\"}</_components.p>{\"\\n\"}<_components.p>{\"详细内容可以参考\"}<_components.a href=\"/guides/basic-features/routes#%E7%BA%A6%E5%AE%9A%E5%BC%8F%E8%B7%AF%E7%94%B1\">{\"路由方案\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"自控式路由\">{\"自控式路由\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自控式路由\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"如果入口中存在 \"}<_components.code>{\"App.[jt]sx?\"}</_components.code>{\" 文件，开发者可以在这个文件中通过代码的方式，设置客户端路由，或者不设置客户端路由。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { BrowserRouter, Route, Routes } from '@modern-js/runtime/router';\\n\\nexport default () => {\\n  return (\\n    <BrowserRouter>\\n      <Routes>\\n        <Route index element={<div>index</div>} />\\n        <Route path=\\\"about\\\" element={<div>about</div>} />\\n      </Routes>\\n    </BrowserRouter>\\n  );\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"详细内容可以参考\"}<_components.a href=\"/guides/basic-features/routes#%E8%87%AA%E6%8E%A7%E5%BC%8F%E8%B7%AF%E7%94%B1\">{\"路由方案\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"自定义-bootstrap\">{\"自定义 Bootstrap\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自定义-bootstrap\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"如果入口中存在 \"}<_components.code>{\"index.[jt]sx\"}</_components.code>{\" 文件，并且当文件默认导出函数时，Modern.js 会将默认的 \"}<_components.code>{\"bootstrap\"}</_components.code>{\" 函数作为入参传入，并用导出的函数替代默认的 \"}<_components.code>{\"bootstrap\"}</_components.code>{\"，这样开发者可以自定义将组件挂载到 DOM 节点上，或在挂载前添加自定义行为。例如：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"export default (App: React.ComponentType, bootstrap: () => void) => {\\n  // do something before bootstrap...\\n  initSomething().then(() => {\\n    bootstrap();\\n  })\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"此时，Modern.js 生成的文件内容如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport customBootstrap from '@_modern_js_src/index.tsx';\\nimport App from '@_modern_js_src/App';\\nimport { router, state } from '@modern-js/runtime/plugins';\\n\\nconst IS_BROWSER = typeof window !== 'undefined' && window.name !== 'nodejs';\\nconst MOUNT_ID = 'root';\\n\\nlet AppWrapper = null;\\nlet root = null;\\n\\nfunction render() {\\n  AppWrapper = createApp({\\n    // runtime 的插件参数...\\n  })(App);\\n  if (IS_BROWSER) {\\n    customBootstrap(AppWrapper, () => bootstrap(AppWrapper, MOUNT_ID, root, ReactDOM));\\n  }\\n  return AppWrapper;\\n}\\n\\nAppWrapper = render();\\n\\nexport default AppWrapper;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"构建模式入口\">{\"构建模式入口\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#构建模式入口\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"构建模式是指不使用任何 Modern.js 运行时的能力，完全由开发者自己定义项目 webpack 的入口。\"}</_components.p>{\"\\n\"}<_components.p>{\"如果入口中存在 \"}<_components.code>{\"index.[jt]sx\"}</_components.code>{\" ，并且没有默认导出函数时，这时候该文件就是真正的 webpack 入口文件。这里和 \"}<_components.a href=\"https://github.com/facebook/create-react-app\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Create React App\"}</_components.a>{\" 类似，需要自己将组件挂载到 DOM 节点、添加热更新代码等。例如:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta=\"title=src/index.jsx\">{\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Modern.js \"}<_components.strong>{\"不推荐\"}</_components.strong>{\"新项目使用这种方式，这种方式丧失了框架的一些能力，如 \"}<_components.strong><_components.code>{\"modern.config.js\"}</_components.code>{\" 文件中的 \"}<_components.code>{\"runtime\"}</_components.code>{\" 配置将不会再生效\"}</_components.strong>{\"。但是在项目从其他框架迁移到 Modern.js，例如 CRA，或是自己手动搭建的 webpack 时，这种方式会非常有用。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"使用配置指定入口\">{\"使用配置指定入口\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用配置指定入口\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"大部分存量项目并不是按照 Modern.js 的目录结构来搭建的。如果要改成 Modern.js 约定的目录结构，会存在一定的迁移成本。\"}</_components.p>{\"\\n\"}<_components.p>{\"在这种情况下，除了使用文件约定生成入口外，你可以在 \"}<_components.code>{\"modern.config.[jt]s\"}</_components.code>{\" 中手动配置入口。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"export default defineConfig({\\n  source: {\\n    entries: {\\n      // 指定一个名称为 entry_customize 的新入口\\n      entry_customize: './src/home/test/index.ts',\\n    },\\n    // 禁用默认入口扫描\\n    disableDefaultEntries: true,\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"禁用默认入口扫描\">{\"禁用默认入口扫描\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#禁用默认入口扫描\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当使用自定义入口时，项目的部分结构可能恰巧命中了 Modern.js 的目录约定，但实际上这部分目录并不是真实的入口。\"}</_components.p>{\"\\n\"}<_components.p>{\"Modern.js 提供了 \"}<_components.code>{\"disableDefaultEntries\"}</_components.code>{\" 配置，来禁用默认的入口扫描规则。当你需要自定义入口时，一般需要将 \"}<_components.code>{\"disableDefaultEntries\"}</_components.code>{\" 与 \"}<_components.code>{\"entries\"}</_components.code>{\" 结合使用。这样，一些存量项目可以在不修改目录结构的情况下，快速地进行迁移。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"export default defineConfig({\\n  source: {\\n    disableDefaultEntries: true,\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"详细用法请查看 \"}<_components.a href=\"/configure/app/source/entries\">{\"source.entries\"}</_components.a>{\" 和 \"}<_components.a href=\"/configure/app/source/disable-default-entries\">{\"source.disableDefaultEntries\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}</_components.div></_components.div></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","globalThis","__RSPRESS_PAGE_META","MDXLayout","Object","assign","components","wrapper","_","_components","h1","a","p","h2","strong","pre","code","div","ol","li","h3","h4","id","className","href","target","rel","meta"],"mappings":"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"}