{"version":3,"file":"static/js/async/docs_zh_configure_app_dev_https_mdx.2bb85311.js","sources":["../builder-doc/docs/zh/config/dev/https.md","./docs/zh/configure/app/dev/https.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"..%2F..%2Fbuilder-doc%2Fdocs%2Fzh%2Fconfig%2Fdev%2Fhttps.md\"] = {\"toc\":[{\"text\":\"自动生成证书\",\"id\":\"自动生成证书\",\"depth\":4},{\"text\":\"手动设置证书\",\"id\":\"手动设置证书\",\"depth\":4}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        pre: \"pre\",\n        h4: \"h4\",\n        a: \"a\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"boolean | { key: string; cert: string }\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"false\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"配置该选项后，可以开启 Dev Server 对 HTTPS 的支持，同时会禁用 HTTP 服务器。\"}</_components.p>{\"\\n\"}<_components.p>{\"开启前：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"  > Local:    http://localhost:8080/\\n  > Network:  http://192.168.0.1:8080/\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"开启后：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"  > Local:    https://localhost:8080/\\n  > Network:  https://192.168.0.1:8080/\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"自动生成证书\">{\"自动生成证书\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自动生成证书\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"你可以直接将 \"}<_components.code>{\"https\"}</_components.code>{\" 设置为 \"}<_components.code>{\"true\"}</_components.code>{\"，Builder 会基于 \"}<_components.a href=\"https://github.com/davewasmer/devcert\" target=\"_blank\" rel=\"noopener noreferrer\">{\"devcert\"}</_components.a>{\" 来自动生成 Dev Server 所需的 HTTPS 证书。\"}</_components.p>{\"\\n\"}<_components.p>{\"使用这种方式时，你需要在当前项目中手动安装 \"}<_components.a href=\"https://github.com/davewasmer/devcert\" target=\"_blank\" rel=\"noopener noreferrer\">{\"devcert\"}</_components.a>{\" 依赖：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"# npm\\nnpm install devcert@1.2.2 -D\\n\\n# yarn\\nyarn add devcert@1.2.2 -D\\n\\n# pnpm\\npnpm add devcert@1.2.2 -D\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"然后配置 \"}<_components.code>{\"dev.https\"}</_components.code>{\" 为 \"}<_components.code>{\"true\"}</_components.code>{\" 即可：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  dev: {\\n    https: true,\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"该方式有一定局限性，由于 devcert 目前不支持 IP addresses，因此访问 Network 域名时，会遇到「您的连接不是私密连接」的问题。\"}</_components.p>{\"\\n\"}<_components.p>{\"此问题的解决方法为：点击 Chrome 浏览器问题页面的「高级」->「继续前往 192.168.0.1（不安全）」。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"https 代理自动安装证书需要获取 root 权限, 请根据提示输入密码即可。 \"}<_components.strong>{\"密码仅在信任证书时使用，不会泄漏或者用于其他环节\"}</_components.strong>{\"。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h4 id=\"手动设置证书\">{\"手动设置证书\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#手动设置证书\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"你也可以在 \"}<_components.code>{\"dev.https\"}</_components.code>{\" 选项中手动传入 HTTPS 服务器所需要的证书和对应的私钥，这个参数将直接传递给 Node.js 中 https 模块的 createServer。\"}</_components.p>{\"\\n\"}<_components.p>{\"具体可以参考 \"}<_components.a href=\"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener\" target=\"_blank\" rel=\"noopener noreferrer\">{\"https.createServer\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import fs from 'fs';\\n\\nexport default {\\n  dev: {\\n    https: {\\n      key: fs.readFileSync('certificates/private.pem'),\\n      cert: fs.readFileSync('certificates/public.pem'),\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfigure%2Fapp%2Fdev%2Fhttps.mdx\"] = {\"toc\":[],\"title\":\"dev.https\",\"frontmatter\":{\"sidebar_label\":\"https\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport Main from '@modern-js/builder-doc/docs/zh/config/dev/https.md';\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        div: \"div\",\n        p: \"p\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"devhttps\">{\"dev.https\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#devhttps\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"该配置由 Modern.js Builder 提供，更多信息可参考 \"}<_components.a href=\"https://modernjs.dev/builder/api/config-dev.html#devhttps\" target=\"_blank\" rel=\"noopener noreferrer\">{\"dev.https\"}</_components.a>{\"。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}{\"\\n\"}<Main/></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","ul","li","strong","code","p","pre","h4","a","div","components","className","id","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_","h1"],"mappings":"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"}