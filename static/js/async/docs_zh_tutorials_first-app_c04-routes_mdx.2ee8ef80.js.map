{"version":3,"file":"static/js/async/docs_zh_tutorials_first-app_c04-routes_mdx.2ee8ef80.js","sources":["./docs/zh/tutorials/first-app/c04-routes.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Ftutorials%2Ffirst-app%2Fc04-routes.mdx\"] = {\"toc\":[],\"title\":\"添加客户端路由\",\"frontmatter\":{\"title\":\"添加客户端路由\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport { Tabs, Tab as TabItem } from \"@theme\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        strong: \"strong\",\n        code: \"code\",\n        pre: \"pre\",\n        div: \"div\",\n        img: \"img\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"添加客户端路由\">{\"添加客户端路由\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#添加客户端路由\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}{\"\\n\"}<_components.p>{\"上一章节中，我们学习了如何为创建 UI 组件，并添加样式。\"}</_components.p>{\"\\n\"}<_components.p>{\"这一章节中，我们将会学习如何添加\"}<_components.strong>{\"客户端路由\"}</_components.strong>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"之前我们已经为联系人列表增加了 Archive 按钮，接下来我们添加一个客户端路由 \"}<_components.code>{\"/archives\"}</_components.code>{\"，访问这个路由时，只显示已存档的联系人，而原有的 \"}<_components.code>{\"/\"}</_components.code>{\" 继续显示所有联系人。\"}</_components.p>{\"\\n\"}<_components.p>{\"新建 \"}<_components.code>{\"src/routes/archives/page.tsx\"}</_components.code>{\" 文件：\"}</_components.p>{\"\\n\"}<Tabs><TabItem value=\"macOS\" label=\"macOS\" default><_components.pre><_components.code className=\"language-bash\">{\"mkdir -p src/routes/archives\\ntouch src/routes/archives/page.tsx\\n\"}</_components.code></_components.pre></TabItem><TabItem value=\"Windows\" label=\"Windows\"><_components.pre><_components.code className=\"language-powershell\">{\"mkdir -p src/routes/archives\\nni src/routes/archives/page.tsx\\n\"}</_components.code></_components.pre></TabItem></Tabs>{\"\\n\"}<_components.p>{\"添加如下代码：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\" meta='title=\"src/archives/page.tsx\"'>{\"import { List } from 'antd';\\nimport { Helmet } from '@modern-js/runtime/head';\\nimport Item from '../../components/Item';\\n\\nconst getAvatar = (users: Array<{ name: string; email: string }>) =>\\n  users.map(user => ({\\n    ...user,\\n    avatar: `https://avatars.dicebear.com/v2/identicon/${user.name}.svg`,\\n  }));\\n\\nconst getMockArchivedData = () =>\\n  getAvatar([\\n    { name: 'Thomas', email: 'w.kccip@bllmfbgv.dm' },\\n    { name: 'Chow', email: 'f.lfqljnlk@ywoefljhc.af' },\\n  ]);\\nfunction Index() {\\n  return (\\n    <div className=\\\"container lg mx-auto\\\">\\n      <Helmet>\\n        <title>Archives</title>\\n      </Helmet>\\n      <List\\n        dataSource={getMockArchivedData()}\\n        renderItem={info => <Item key={info.name} info={info} />}\\n      />\\n    </div>\\n  );\\n}\\n\\nexport default Index;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"这里使用了 \"}<_components.a href=\"https://github.com/nfl/react-helmet\" target=\"_blank\" rel=\"noopener noreferrer\">{\"React Helmet\"}</_components.a>{\" 的 \"}<_components.code>{\"Helmet\"}</_components.code>{\" 组件，在 \"}<_components.code>{\"src/routes/page.tsx\"}</_components.code>{\" 中也添加 Helmet 组件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { Helmet } from '@modern-js/runtime/head';\\n\\nfunction Index() {\\n  return (\\n    <div className=\\\"container lg mx-auto\\\">\\n      <Helmet>\\n        <title>All</title>\\n      </Helmet>\\n      ...\\n    </div>\\n  );\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"Modern.js 默认集成了 react-helmet，也可以结合 SSR 使用，满足 SEO 需求。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"因为现在有多个页面，都需要用到前面的 Utility Class，因此我们需要把样式文件移动到 \"}<_components.code>{\"src/routes/layout.tsx\"}</_components.code>{\"：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import 'tailwindcss/base.css';\\nimport 'tailwindcss/components.css';\\nimport 'tailwindcss/utilities.css';\\nimport '../styles/utils.css';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"执行 \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\"，访问 \"}<_components.code>{\"http://localhost:8080\"}</_components.code>{\"，可以看到完整的联系人，页面的标题是 All：\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/nuvjhpqnuvr/modern-website/tutorials/c04-archives.png\" alt=\"display1\"/></_components.p>{\"\\n\"}<_components.p>{\"访问 \"}<_components.code>{\"http://localhost:8080/archives\"}</_components.code>{\"，只会看到已存档的联系人，页面的标题是 Archives：\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/nuvjhpqnuvr/modern-website/tutorials/c04-all.png\" alt=\"display\"/></_components.p>{\"\\n\"}<_components.p>{\"查看页面 HTML 源码，可以看到两个页面的内容是一样，是在客户端针对不同 URL 渲染不同内容。\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"接下来我们增加一个简单的导航栏，让用户能在两个列表之间切换\"}</_components.strong>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"打开 \"}<_components.code>{\"src/routes/layout.tsx\"}</_components.code>{\"，在顶部导入 Radio 组件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { Radio } from 'antd';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"然后将 UI 最顶部进行修改，增加一组单选框\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\" meta=\"{4-9}\">{'export default function Layout() {\\n  return (\\n    <div>\\n      <div className=\"h-16 p-2 flex items-center justify-center\">\\n        <Radio.Group onChange={handleSetList} value={currentList}>\\n          <Radio value=\"/\">All</Radio>\\n          <Radio value=\"/archives\">Archives</Radio>\\n        </Radio.Group>\\n      </div>\\n      <Outlet />\\n    </div>\\n  );\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"然后我们来实现 \"}<_components.code>{\"currentList\"}</_components.code>{\" 和 \"}<_components.code>{\"handleSetList\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"引入三个 React Hook：\"}<_components.code>{\"useState\"}</_components.code>{\" 和 \"}<_components.code>{\"useNavigate\"}</_components.code>{\" 和 \"}<_components.code>{\"useParams\"}</_components.code>{\"，以及 Ant Design 的事件类型定义：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import { useState } from 'react';\\nimport { Radio, RadioChangeEvent } from 'antd';\\nimport { Outlet, useLocation, useNavigate } from '@modern-js/runtime/router';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"最后在 Layout 组件里增加局部状态和相关逻辑：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\" meta=\"{2-9}\">{\"export default function Layout() {\\n  const navigate = useNavigate();\\n  const location = useLocation();\\n  const [currentList, setList] = useState(location.pathname || '/');\\n  const handleSetList = (e: RadioChangeEvent) => {\\n    const { value } = e.target;\\n    setList(value);\\n    navigate(value);\\n  };\\n  return (\\n  ...\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"到这里就已经完成了页面导航栏实现，执行 \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\" 查看效果：\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/nuvjhpqnuvr/modern-website/tutorials/c04-switch.png\" alt=\"display2\"/></_components.p>{\"\\n\"}<_components.p>{\"点击导航栏中 Archives，可以看到单选框的选中状态和 URL 都会变化，页面没有刷新，只发生了 CSR。\"}</_components.p>{\"\\n\"}<_components.p>{\"通过 URL 访问两个页面，可以看到 HTML 内容是不同的，这是因为在 SSR 阶段页面就执行了客户端路由的逻辑，HTML 里已经包含了最终的渲染结果。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","strong","code","pre","div","img","components","id","className","href","Tabs","Tab","value","label","default","meta","target","rel","src","alt","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"0NAAA,E,gEAIA,SAASA,EAAkBC,CAAK,EAC5B,IAAMC,EAAcC,OAAOC,MAAM,CAAC,CAC9BC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,OAAQ,SACRC,KAAM,OACNC,IAAK,MACLC,IAAK,MACLC,IAAK,KACT,EAAG,yBAAsBX,EAAMY,UAAU,EACzC,MAAO,uB,UAAE,WAACX,EAAYG,EAAE,EAACS,GAAG,U,UAAW,UAAU,UAACZ,EAAYI,CAAC,EAACS,UAAU,gBAAgB,cAAY,OAAOC,KAAK,W,SAAY,G,MAAsC,KAAM,KAAK,UAACd,EAAYK,CAAC,E,SAAE,+B,GAAiD,KAAK,WAACL,EAAYK,CAAC,E,UAAE,mBAAmB,UAACL,EAAYM,MAAM,E,SAAE,O,GAA8B,I,GAAqB,KAAK,WAACN,EAAYK,CAAC,E,UAAE,6CAA6C,UAACL,EAAYO,IAAI,E,SAAE,W,GAAgC,4BAA4B,UAACP,EAAYO,IAAI,E,SAAE,G,GAAwB,c,GAA+B,KAAK,WAACP,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYO,IAAI,E,SAAE,8B,GAAmD,O,GAAwB,KAAK,WAAC,EAAAQ,IAAI,E,UAAC,UAAC,EAAAC,GAAO,EAACC,MAAM,QAAQC,MAAM,QAAQC,QAAO,G,SAAC,UAACnB,EAAYQ,GAAG,E,SAAC,UAACR,EAAYO,IAAI,EAACM,UAAU,gB,SAAiB,oE,OAAoH,UAAC,EAAAG,GAAO,EAACC,MAAM,UAAUC,MAAM,U,SAAU,UAAClB,EAAYQ,GAAG,E,SAAC,UAACR,EAAYO,IAAI,EAACM,UAAU,sB,SAAuB,iE,UAAyH,KAAK,UAACb,EAAYK,CAAC,E,SAAE,S,GAA2B,KAAK,UAACL,EAAYQ,GAAG,E,SAAC,UAACR,EAAYO,IAAI,EAACM,UAAU,eAAeO,KAAK,gC,SAAiC,8yB,KAAq1B,KAAK,WAACpB,EAAYK,CAAC,E,UAAE,SAAS,UAACL,EAAYI,CAAC,EAACU,KAAK,sCAAsCO,OAAO,SAASC,IAAI,sB,SAAuB,c,GAAgC,MAAM,UAACtB,EAAYO,IAAI,E,SAAE,Q,GAA6B,SAAS,UAACP,EAAYO,IAAI,E,SAAE,qB,GAA0C,mB,GAAoC,KAAK,UAACP,EAAYQ,GAAG,E,SAAC,UAACR,EAAYO,IAAI,EAACM,UAAU,e,SAAgB,kO,KAAyQ,KAAK,WAACb,EAAYS,GAAG,EAACI,UAAU,wB,UAAwB,UAACb,EAAYS,GAAG,EAACI,UAAU,yB,SAA0B,M,GAAyB,WAACb,EAAYS,GAAG,EAACI,UAAU,2B,UAA2B,UAACb,EAAYK,CAAC,E,SAAE,sD,GAAwE,K,MAA0C,KAAK,WAACL,EAAYK,CAAC,E,UAAE,mDAAmD,UAACL,EAAYO,IAAI,E,SAAE,uB,GAA4C,I,GAAqB,KAAK,UAACP,EAAYQ,GAAG,E,SAAC,UAACR,EAAYO,IAAI,EAACM,UAAU,e,SAAgB,4I,KAAmL,KAAK,WAACb,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYO,IAAI,E,SAAE,c,GAAmC,OAAO,UAACP,EAAYO,IAAI,E,SAAE,uB,GAA4C,0B,GAA2C,KAAK,UAACP,EAAYK,CAAC,E,SAAC,UAACL,EAAYU,GAAG,EAACa,IAAI,sGAAsGC,IAAI,U,KAA6B,KAAK,WAACxB,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYO,IAAI,E,SAAE,gC,GAAqD,gC,GAAiD,KAAK,UAACP,EAAYK,CAAC,E,SAAC,UAACL,EAAYU,GAAG,EAACa,IAAI,iGAAiGC,IAAI,S,KAA4B,KAAK,UAACxB,EAAYK,CAAC,E,SAAE,mD,GAAqE,KAAK,WAACL,EAAYK,CAAC,E,UAAC,UAACL,EAAYM,MAAM,E,SAAE,+B,GAAsD,I,GAAqB,KAAK,WAACN,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYO,IAAI,E,SAAE,uB,GAA4C,mB,GAAoC,KAAK,UAACP,EAAYQ,GAAG,E,SAAC,UAACR,EAAYO,IAAI,EAACM,UAAU,e,SAAgB,iC,KAAwE,KAAK,UAACb,EAAYK,CAAC,E,SAAE,wB,GAA0C,KAAK,UAACL,EAAYQ,GAAG,E,SAAC,UAACR,EAAYO,IAAI,EAACM,UAAU,eAAeO,KAAK,Q,SAAS,8W,KAAqZ,KAAK,WAACpB,EAAYK,CAAC,E,UAAE,WAAW,UAACL,EAAYO,IAAI,E,SAAE,a,GAAkC,MAAM,UAACP,EAAYO,IAAI,E,SAAE,e,GAAoC,I,GAAqB,KAAK,WAACP,EAAYK,CAAC,E,UAAE,mBAAmB,UAACL,EAAYO,IAAI,E,SAAE,U,GAA+B,MAAM,UAACP,EAAYO,IAAI,E,SAAE,a,GAAkC,MAAM,UAACP,EAAYO,IAAI,E,SAAE,W,GAAgC,0B,GAA2C,KAAK,UAACP,EAAYQ,GAAG,E,SAAC,UAACR,EAAYO,IAAI,EAACM,UAAU,c,SAAe,qK,KAA4M,KAAK,UAACb,EAAYK,CAAC,E,SAAE,4B,GAA8C,KAAK,UAACL,EAAYQ,GAAG,E,SAAC,UAACR,EAAYO,IAAI,EAACM,UAAU,eAAeO,KAAK,Q,SAAS,8U,KAAqX,KAAK,WAACpB,EAAYK,CAAC,E,UAAE,uBAAuB,UAACL,EAAYO,IAAI,E,SAAE,c,GAAmC,S,GAA0B,KAAK,UAACP,EAAYK,CAAC,E,SAAC,UAACL,EAAYU,GAAG,EAACa,IAAI,oGAAoGC,IAAI,U,KAA6B,KAAK,UAACxB,EAAYK,CAAC,E,SAAE,yD,GAA2E,KAAK,UAACL,EAAYK,CAAC,E,SAAE,+E,KAC7sN,CAhBA,GAAAoB,UAAA,EAAWC,mBAAmB,EAA9B,GAAWA,mBAAmB,CAAK,CAAC,GACpCD,WAAWC,mBAAmB,CAAC,8CAA8C,CAAG,CAAC,IAAM,EAAE,CAAC,MAAQ,UAAU,YAAc,CAAC,MAAQ,SAAS,CAAC,EAoB7I,MAJA,W,IAAoB3B,EAAQ,UAAR,6CAAQ,CAAC,EACR4B,EAAc,AAAA1B,OAAOC,MAAM,CAAC,CAAC,EAAG,yBAAsBH,EAAMY,UAAU,EAA/EiB,OAAO,CACf,OAAOD,EAAY,UAACA,EAAA,mBAAc5B,GAAA,C,SAAO,UAACD,EAAA,KAAA+B,CAAA,AAAAA,EAAA,GAAsB9B,G,IAAuBD,EAAkBC,EAC7G,C"}