(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_zh_guides_topic-detail_generator_plugin_api_onForged_md"],{38122:function(e,n,r){"use strict";r.r(n),r.d(n,{default:function(){return t}});var d,i=r("15169"),s=r("43932"),a=r("9880"),l=r("23169");function c(e){var n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",pre:"pre",h3:"h3",ul:"ul",li:"li",div:"div"},(0,l.useMDXComponents)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"onforged",children:["onForged",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#onforged",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"onForged"})," 为生成器插件中用于文件操作的生命周期函数。"]}),"\n",(0,a.jsxs)(n.h2,{id:"类型",children:["类型",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#类型",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"export type ForgedAPI = {\n  addFile: (params: AddFileParams) => Promise<void>;\n  addManyFiles: (params: AddManyFilesParams) => Promise<void>;\n  updateJSONFile: (fileName: string, updateInfo: Record<string, unknown>) => Promise<void>;\n  updateTextRawFile: (fileName: string, update: (content: string[]) => string[]) => Promise<void>;\n  updateModernConfig: (updateInfo: Record<string, any>) => Promise<void>;\n  rmFile: (fileName: string) => Promise<void>;\n  rmDir: (dirName: string) => Promise<void>;\n  addHelper: (name: string, fn: Handlebars.HelperDelegate) => void;\n  addPartial: (name: string, str: Handlebars.Template) => void;\n  createElement: (element: ActionElement, params: Record<string, unknown>) => Promise<void>;\n  enableFunc: (func: ActionFunction, params?: Record<string, unknown> | undefined) => Promise<void>;\n};\n\nexport type PluginForgedFunc = (\n  api: ForgedAPI,\n  inputData: Record<string, unknown>,\n) => void | Promise<void>;\n\nexport interface IPluginContext {\n  onForged: (func: PluginForgedFunc) => void;\n  ...\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"onForged"})," 参数为一个回调函数，回调函数参数为 ",(0,a.jsx)(n.code,{children:"api"})," 和 ",(0,a.jsx)(n.code,{children:"input"}),"，分别用于提供该生命周期函数提供的 API 及当前输入信息。"]}),"\n",(0,a.jsxs)(n.h2,{id:"概念",children:["概念",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#概念",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"文件类型",children:["文件类型",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#文件类型",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"生成器插件将文件类型分为撕四类："}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"文本文件"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["纯文本内容文件，可使用 ",(0,a.jsx)(n.a,{href:"https://handlebarsjs.com/",target:"_blank",rel:"noopener noreferrer",children:"Handlebars"})," 或 ",(0,a.jsx)(n.a,{href:"https://ejs.co/",target:"_blank",rel:"noopener noreferrer",children:"EJS"})," 进行模板处理的文件。"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"二进制文件"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"图片、音频、视频等文件。"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"JSON 文件"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"JSON 格式的文件。"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"文本列表文件"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["文件由行文本组成的文件，例如 ",(0,a.jsx)(n.code,{children:".gitignore"}),", ",(0,a.jsx)(n.code,{children:".editorconfig"}),", ",(0,a.jsx)(n.code,{children:".npmrc"}),"。"]}),"\n",(0,a.jsx)(n.p,{children:"对应四种文件的类型定义为："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"export enum FileType {\n  Text = 'text',\n  Binary = 'binary',\n  Json = 'json',\n  TextRaw = 'textRaw',\n}\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"api",children:["API",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#api",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"下面将分别介绍 api 参数提供的 API。"}),"\n",(0,a.jsxs)(n.h3,{id:"addfile",children:["addFile",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#addfile",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"添加单个文件。"}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"export interface AddFileParams {\n  type: FileType;\n  file: string;\n  template?: string;\n  templateFile?: string;\n  force?: boolean;\n  data?: Record<string, string>;\n}\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"type"}),"： 文件类型。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"file"}),"：目标文件路径，相对于目标项目目录的相对路径。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"template"}),"：模板内容，该字段值可直接用于模板渲染文件。优先级低于 ",(0,a.jsx)(n.code,{children:"templateFile"}),"。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"templateFile"}),"：模板文件路径，相对于 templates 目录的相对路径即可。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"force"}),"：是否强制覆盖，当目标文件存在时是否强制覆盖，默认为 false。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"data"}),"：模板渲染数据。"]}),"\n"]}),"\n",(0,a.jsxs)(n.div,{className:"modern-directive info",children:[(0,a.jsx)(n.div,{className:"modern-directive-title",children:"INFO"}),(0,a.jsx)(n.div,{className:"modern-directive-content",children:(0,a.jsxs)(n.p,{children:["文本类型文件默认使用 Handlebars 进行处理，当模板文件以 ",(0,a.jsx)(n.code,{children:".ejs"})," 结尾的话，会使用 ",(0,a.jsx)(n.a,{href:"https://ejs.co/",target:"_blank",rel:"noopener noreferrer",children:"EJS"})," 进行模板渲染。\n"]})})]}),"\n",(0,a.jsxs)(n.p,{children:["例如添加模板文件 ",(0,a.jsx)(n.code,{children:"App.tsx.hanlebars"})," 到 ",(0,a.jsx)(n.code,{children:"src/App.tsx"})," 中:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"context.onForged(async (api: ForgedAPI, _input: Record<string, unknown>) => {\n  await api.addFile({\n    type: FileType.Text,\n    file: `src/App.tsx`,\n    templateFile: `App.tsx.handlebars`,\n  });\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"addmanyfiless",children:["addManyFiless",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#addmanyfiless",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"批量添加文件，一般用于添加多个文件到同一个目标目录。"}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"export interface AddManyFilesParams {\n  type: FileType;\n  destination: string;\n  templateFiles: string[] | (() => string[]);\n  templateBase?: string;\n  fileNameFunc?: (name: string) => string;\n  data?: Record<string, string>;\n}\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"type"}),"： 文件类型。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"destination"}),"：目标文件夹，相对于目标项目目录的相对路径。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"templateFiles"}),"：模板文件列表，支持 ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/globby",target:"_blank",rel:"noopener noreferrer",children:"globby"})," 正则表达式"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"templateBase"}),"：模板文件的公共路径，使用该参数时目标文件会自动删除该路径。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"fileNameFunc"}),"：重命名文件函数，添加文件过程中会依次将文件名传入到该函数，可以根据需要进行重命名。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"data"}),"：模板渲染数据。"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["例如将模板文件 ",(0,a.jsx)(n.code,{children:"src-ts"})," 目录下所有文件渲染到 ",(0,a.jsx)(n.code,{children:"src"})," 目录："]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"context.onForged(async (api: ForgedAPI, _input: Record<string, unknown>) => {\n  await api.addManyFiles({\n    type: FileType.Text,\n    destination: 'src',\n    templateFiles: ['src-ts/**/*'],\n    templateBase: 'src-ts',\n    fileNameFunc: name => name.replace('.handlebars', ''),\n  });\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"updatejsonfile",children:["updateJSONFile",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#updatejsonfile",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"更新 JSON 文件字段。"}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"fileName: strings\nupdateInfo: Record<string, unknown>\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"fileName"}),"：JSON 文件路径，相对于目标项目的路径。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"updateInfo"}),"：更新信息，嵌套字段更新需要平铺，不然会更新整体造成内容丢失。"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["例如更新 ",(0,a.jsx)(n.code,{children:"package.json"})," 的 name 字段："]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"context.onForged(async (api: ForgedAPI, _input: Record<string, unknown>) => {\n  await api.updateJSONFile('package.json', { name: 'new_name' });\n})\n"})}),"\n",(0,a.jsxs)(n.p,{children:["例如更新 ",(0,a.jsx)(n.code,{children:"dependencies"})," 的 ",(0,a.jsx)(n.code,{children:"react-dom"})," 版本:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"context.onForged(async (api: ForgedAPI, _input: Record<string, unknown>) => {\n  await api.updateJSONFile('package.json', {\n    'dependencies.react-dom': '^18',\n  });\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"updatetextrawfile",children:["updateTextRawFile",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#updatetextrawfile",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"更新文本列表文件内容。"}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"fileName: string\nupdate: (content: string[]) => string[]\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"fileName"}),"： 文本列表文件路径，相对于目标项目的路径。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"update"}),"：更新函数，参数为当前文件内容以 ",(0,a.jsx)(n.code,{children:"\\n"})," 进行分割的数组，返回值也为修改完成后的数组，",(0,a.jsx)(n.code,{children:"@modern-js/create"})," 会自动以 ",(0,a.jsx)(n.code,{children:"\\n"})," 合并，并写入源文件。"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["例如 ",(0,a.jsx)(n.code,{children:".gitinore"})," 文件中增加 dist 目录："]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"context.onForged(async (api: ForgedAPI, _input: Record<string, unknown>) => {\n  await api.updateTextRawFile('.gitinore', (content) => [...content, 'dist']);\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"updatemodernconfig不推荐",children:["updateModernConfig(不推荐)",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#updatemodernconfig不推荐",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["Modern.js 配置除了可以在 ",(0,a.jsx)(n.code,{children:"modern.config.[tj]s"})," 中配置外，还支持 ",(0,a.jsx)(n.code,{children:"package.json"})," 中配置 ",(0,a.jsx)(n.code,{children:"modernConfig"})," 配置。该函数用于更新该字段。"]}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"updateInfo: Record<string, any>\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"updateInfo"}),"： 更新内容信息。updateModernConfig 是基于 updateJSONFile 的封装，将自动更新到 ",(0,a.jsx)(n.code,{children:"modernConfig"})," 字段下，updateInfo 中只需填写 ",(0,a.jsx)(n.code,{children:"modernConfig"})," 下的配置字段即可。"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"例如开启 ssr："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"context.onForged(async (api: ForgedAPI, _input: Record<string, unknown>) => {\n  await api.updateModernConfig({ 'server.ssr': true });\n})\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"rmfile",children:["rmFile",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rmfile",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"删除文件。"}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"fileName: string\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"fileName"}),"：删除的文件路径，相对于目标项目的路径。"]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"rmdir",children:["rmDir",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rmdir",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"删除文件夹。"}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"dirName: string\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"dirName"}),"：删除的文件夹路径，相对于目标项目的路径。"]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"addhelper",children:["addHelper",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#addhelper",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["添加 handlebrs 渲染的",(0,a.jsx)(n.a,{href:"https://handlebarsjs.com/guide/#custom-helpers",target:"_blank",rel:"noopener noreferrer",children:"自定义 Helper"}),"。"]}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"name: string\nfn: Handlebars.HelperDelegate\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"name"}),"：Helper 函数名称。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"fn"}),"：Helper 函数实现。"]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"addpartial",children:["addPartial",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#addpartial",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["添加 Handlebars 渲染的 ",(0,a.jsx)(n.a,{href:"https://handlebarsjs.com/guide/partials.html#basic-partials",target:"_blank",rel:"noopener noreferrer",children:"Partial"}),"。"]}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"name: string\nstr: Handlebars.Template\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"name"}),"：Partial 名称。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"str"}),"：Partial 的模板字符串。"]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"createelement",children:["createElement",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#createelement",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"自动调用 new 命令创建工程元素。"}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"element: ActionElement\nparams: Record<string, unknown>\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"element"}),"：工程元素类型，新建入口或者新建自定义 Web Server 源码目录。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"params"}),"：对应创建工程元素的其他参数。"]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"enablefunc",children:["enableFunc",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#enablefunc",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"自动调用 new 命令开启可选功能。"}),"\n",(0,a.jsx)(n.p,{children:"参数类型："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"func: ActionFunction\nparams?: Record<string, unknown>\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"func"}),"：开启功能名称。"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"params"}),"：对应开启功能的其他参数。"]}),"\n"]}),"\n",(0,a.jsxs)(n.div,{className:"modern-directive info",children:[(0,a.jsx)(n.div,{className:"modern-directive-title",children:"INFO"}),(0,a.jsx)(n.div,{className:"modern-directive-content",children:(0,a.jsxs)(n.p,{children:["创建工程元素和开启功能配置可参考",(0,a.jsx)(n.a,{href:"/guides/topic-detail/generator/new/config",children:"配置参数"}),"。\n"]})})]})]})}(d=globalThis).__RSPRESS_PAGE_META||(d.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fguides%2Ftopic-detail%2Fgenerator%2Fplugin%2Fapi%2FonForged.md"]={toc:[{text:"类型",id:"类型",depth:2},{text:"概念",id:"概念",depth:2},{text:"文件类型",id:"文件类型",depth:3},{text:"API",id:"api",depth:2},{text:"addFile",id:"addfile",depth:3},{text:"addManyFiless",id:"addmanyfiless",depth:3},{text:"updateJSONFile",id:"updatejsonfile",depth:3},{text:"updateTextRawFile",id:"updatetextrawfile",depth:3},{text:"updateModernConfig(不推荐)",id:"updatemodernconfig不推荐",depth:3},{text:"rmFile",id:"rmfile",depth:3},{text:"rmDir",id:"rmdir",depth:3},{text:"addHelper",id:"addhelper",depth:3},{text:"addPartial",id:"addpartial",depth:3},{text:"createElement",id:"createelement",depth:3},{text:"enableFunc",id:"enablefunc",depth:3}],title:"onForged",frontmatter:{sidebar_position:2}};var t=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,l.useMDXComponents)(),e.components).wrapper;return n?(0,a.jsx)(n,(0,s._)((0,i._)({},e),{children:(0,a.jsx)(c,(0,i._)({},e))})):c(e)}}}]);