{"version":3,"file":"static/js/async/docs_en_guides_basic-features_env-vars_mdx.d50bb3f1.js","sources":["./docs/en/guides/basic-features/env-vars.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fguides%2Fbasic-features%2Fenv-vars.mdx\"] = {\"toc\":[{\"text\":\"Built-in Environment Variables\",\"id\":\"built-in-environment-variables\",\"depth\":2},{\"text\":\"ASSET_PREFIX\",\"id\":\"asset_prefix\",\"depth\":3},{\"text\":\"NODE_ENV\",\"id\":\"node_env\",\"depth\":3},{\"text\":\"MODERN_ENV\",\"id\":\"modern_env\",\"depth\":3},{\"text\":\"MODERN_TARGET\",\"id\":\"modern_target\",\"depth\":3},{\"text\":\"Custom Environment Variables\",\"id\":\"custom-environment-variables\",\"depth\":2},{\"text\":\"Via shell\",\"id\":\"via-shell\",\"depth\":3},{\"text\":\"Via .env file\",\"id\":\"via-env-file\",\"depth\":3},{\"text\":\"Using Environment Variables\",\"id\":\"using-environment-variables\",\"depth\":2},{\"text\":\"Convention Names\",\"id\":\"convention-names\",\"depth\":3},{\"text\":\"Any Other Names\",\"id\":\"any-other-names\",\"depth\":3},{\"text\":\"Use Global Replacement\",\"id\":\"use-global-replacement\",\"depth\":2}],\"title\":\"Environment Variables\",\"frontmatter\":{\"sidebar_position\":7}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        h3: \"h3\",\n        strong: \"strong\",\n        ul: \"ul\",\n        li: \"li\",\n        code: \"code\",\n        div: \"div\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"environment-variables\">{\"Environment Variables\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#environment-variables\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Modern.js provides support for environment variables, including built-in environment variables and custom environment variables.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"built-in-environment-variables\">{\"Built-in Environment Variables\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#built-in-environment-variables\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"asset_prefix\">{\"ASSET_PREFIX\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#asset_prefix\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"The current path prefix of the resource file, which is a read-only environment variable.\"}</_components.p>{\"\\n\"}<_components.h3 id=\"node_env\">{\"NODE_ENV\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#node_env\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"The current execution environment and is a \"}<_components.strong>{\"read-only\"}</_components.strong>{\" environment variable whose have different values under different execution commands:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"production\"}</_components.code>{\": Default value when running \"}<_components.code>{\"modern build\"}</_components.code>{\" or \"}<_components.code>{\"modern serve\"}</_components.code>{\".\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"test\"}</_components.code>{\": Default value when running \"}<_components.code>{\"modern test\"}</_components.code>{\".\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"development\"}</_components.code>{\": Default value when running \"}<_components.code>{\"modern dev\"}</_components.code>{\", also the default value in other cases.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"modern_env\">{\"MODERN_ENV\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern_env\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Set the current execution environment manually. In addition to the values in the NODE_ENV, custom environment names are supported here, such as \"}<_components.code>{\"staging\"}</_components.code>{\", \"}<_components.code>{\"boe\"}</_components.code>{\", etc.\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"MODERN_ENV priority is higher than NODE_ENV.\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"modern_target\">{\"MODERN_TARGET\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern_target\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"When using \"}<_components.code>{\"@modern-js/runtime\"}</_components.code>{\", Modern.js will automatically inject \"}<_components.code>{\"MODERN_TARGET\"}</_components.code>{\" to distinguish between SSR and CSR environments.\"}</_components.p>{\"\\n\"}<_components.p>{\"You can use \"}<_components.code>{\"process.env.MODERN_TARGET\"}</_components.code>{\" to determine the environment and execute appropriate code.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"App.tsx\"'>{\"function App() {\\n  if (process.env.MODERN_TARGET === 'browser') {\\n    console.log(window.innerHeight);\\n  }\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"After the development build, you can see that the SSR and CSR bundles as follows:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"dist/bundles/main.js\"'>{\"// SSR bundles\\nfunction App() {\\n  if (false) {\\n  }\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"dist/static/main.js\"'>{\"// CSR bundles\\nfunction App() {\\n  if (true) {\\n    console.log(window.innerHeight);\\n  }\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"This can provide different outputs for different environments to ensure that the bundle size is minimized. It can also be convenient to deal with some side effects for different environments.\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive note\"><_components.div className=\"modern-directive-title\">{\"Dead Code Elimination\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{'In production environment, minimizers such as Terser and SWC will analyze the code and remove dead code to reduce the bundle size. This process is called \"Dead Code Elimination\" (DCE).'}</_components.p>{\"\\n\"}<_components.p>{\"For example, the code inside the \"}<_components.code>{\"if (false)\"}</_components.code>{\" statement will be removed, while the code inside the \"}<_components.code>{\"if (true)\"}</_components.code>{\" will be preserved.\"}</_components.p>{\"\\n\"}<_components.p>{\"If you do not use \"}<_components.code>{\"process.env.MODERN_TARGET\"}</_components.code>{\" as described above, the code minimizer may not be able to analyze the dead code, resulting in an increased bundle size.\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"custom-environment-variables\">{\"Custom Environment Variables\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#custom-environment-variables\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"You can specify custom environment variables in both \"}<_components.code>{\"shell\"}</_components.code>{\" and \"}<_components.code>{\".env\"}</_components.code>{\" files.\"}</_components.p>{\"\\n\"}<_components.h3 id=\"via-shell\">{\"Via \"}<_components.code>{\"shell\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#via-shell\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Add custom environment variables before the command:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-shell\">{\"REACT_APP_FOO=123 BAR=456 pnpm run dev\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"via-env-file\">{\"Via \"}<_components.code>{\".env\"}</_components.code>{\" file\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#via-env-file\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Create a \"}<_components.code>{\".env\"}</_components.code>{\" file in the project root and add custom environment variables, which are added to the Node.js process by default, for example:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"REACT_APP_FOO=123\\nBAR=456\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\".env\"}</_components.code>{\" file follows the following loading rules:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\".env\"}</_components.code>{\": default.\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\".env.{ MODERN_ENV | NODE_ENV }\"}</_components.code>{\": Overrides \"}<_components.code>{\".env\"}</_components.code>{\" for a specific environment.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"When you need to use different config according to the environment, you can define environment variables in the \"}<_components.code>{\".env\"}</_components.code>{\" file corresponding to the environment name, and manually set the execution environment when starting the project.\"}</_components.p>{\"\\n\"}<_components.p>{\"For example, when starting a project with the following command, the \"}<_components.code>{\".env\"}</_components.code>{\" and \"}<_components.code>{\".env.staging\"}</_components.code>{\" will load:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-shell\">{\"MODERN_ENV=staging pnpm run dev\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"using-environment-variables\">{\"Using Environment Variables\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#using-environment-variables\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"convention-names\">{\"Convention Names\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#convention-names\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"NODE_ENV\"}</_components.code>{\" can be used directly in front-end code. In addition, custom environment variables starting with \"}<_components.code>{\"MODERN_\"}</_components.code>{\" can also be used directly in code.\"}</_components.p>{\"\\n\"}<_components.p>{\"For Example:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"if (process.env.NODE_ENV === 'development') {\\n  // do something\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"After executing the \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\", you can see the following bundle:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"if (true) {\\n  // do something\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"In custom HTML templates, you can also use such environment variables directly. For example, in \"}<_components.code>{\"config/html/head.html\"}</_components.code>{\":\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-html\">{'<meta name=\"test\" content=\"<process.env.NODE_ENV>\" />\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"any-other-names\">{\"Any Other Names\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#any-other-names\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"If you need to use environment variables with any other names in your code, you can configure them in \"}<_components.a href=\"/configure/app/source/global-vars\"><_components.code>{\"source.globalVars\"}</_components.code></_components.a>{\". For example:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"export default defineConfig({\\n  source: {\\n    globalVars: {\\n      'process.env.VERSION': process.env.VERSION,\\n    }.\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"At this point, the \"}<_components.code>{\"process.env.VERSION\"}</_components.code>{\" in the code will be replaced by the value of \"}<_components.code>{\"VERSION\"}</_components.code>{\" in the environment variables.\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive note\"><_components.div className=\"modern-directive-title\">{\"NOTE\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p><_components.code>{\"source.globalVars\"}</_components.code>{\" also supports replacing other expressions or strings with specified values, not limited to environment variables.\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"use-global-replacement\">{\"Use Global Replacement\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#use-global-replacement\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"In addition to environment variables, Modern.js also supports replacing variables in code with other values or expressions, which can be used to distinguish between development environment and production environment in code.\"}</_components.p>{\"\\n\"}<_components.p>{\"For example, converts the expression \"}<_components.code>{\"TWO\"}</_components.code>{\" to \"}<_components.code>{\"1 + 1\"}</_components.code>{\":\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  source: {\\n    define: {\\n      TWO: '1 + 1',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"const foo = TWO;\\n\\n// ⬇️ Turn into being...\\nconst foo = 1 + 1;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"In most cases, \"}<_components.code>{\"source.globalVars\"}</_components.code>{\" is already sufficient to replace variables. But the values passed in by \"}<_components.code>{\"source.globalVars\"}</_components.code>{\" will be serialized by JSON by default. So it cannot be replaced like \"}<_components.code>{\"1 + 1\"}</_components.code>{\" in the example above, at this time, we need to use \"}<_components.a href=\"/configure/app/source/define\"><_components.code>{\"source.define\"}</_components.code></_components.a>{\".\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","h3","strong","ul","li","code","div","pre","components","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}