{"version":3,"file":"static/js/async/docs_zh_guides_advanced-features_ssg_mdx.438f77f0.js","sources":["./docs/zh/guides/advanced-features/ssg.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguides%2Fadvanced-features%2Fssg.mdx\"] = {\"toc\":[{\"text\":\"在约定式路由中使用\",\"id\":\"在约定式路由中使用\",\"depth\":3},{\"text\":\"在自控式路由中使用\",\"id\":\"在自控式路由中使用\",\"depth\":3}],\"title\":\"静态站点生成\",\"frontmatter\":{\"sidebar_position\":5}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport SelfRouteExample from '@site-docs/components/self-route-example';\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        pre: \"pre\",\n        strong: \"strong\",\n        h3: \"h3\",\n        ul: \"ul\",\n        li: \"li\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"静态站点生成\">{\"静态站点生成\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#静态站点生成\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"SSG（Static Site Generation）是一种基于数据与模板，在构建时渲染完整静态网页的技术解决方案。\"}</_components.p>{\"\\n\"}<_components.p>{\"我们首先需要执行 \"}<_components.code>{\"pnpm run new\"}</_components.code>{\" 启用 SSG 功能：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"? 请选择你想要的操作 启用可选功能\\n? 请选择功能名称 启用「SSG」功能\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"执行命令后，在 \"}<_components.code>{\"modern.config.ts\"}</_components.code>{\" 中注册 SSG 插件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"import { ssgPlugin } from '@modern-js/plugin-ssg';\\n\\nexport default defineConfig({\\n  output: {\\n    ssg: true,\\n  },\\n  plugins: [..., ssgPlugin()],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"SSG 在\"}<_components.strong>{\"约定式路由\"}</_components.strong>{\"和\"}<_components.strong>{\"自控式路由\"}</_components.strong>{\"下的使用方式不同。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"在约定式路由中使用\">{\"在约定式路由中使用\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#在约定式路由中使用\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.strong>{\"约定式路由\"}</_components.strong>{\"中， Modern.js 根据入口下的文件结构生成路由，因此框架能够收集完整的路由信息。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如，以下是一个使用约定式路由的项目目录结构：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code>{\".\\n├── src\\n│   └── routes\\n│       ├── layout.tsx\\n│       ├── page.tsx\\n│       └── user\\n│           ├── layout.tsx\\n│           ├── page.tsx\\n│           └── profile\\n│               └── page.tsx\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"上述文件目录将会生成以下三条路由：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"/\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"/user\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"/user/profile\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.div className=\"modern-directive note\"><_components.div className=\"modern-directive-title\">{\"NOTE\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"如果还不了解约定式路由的规则，可以先查看\"}<_components.a href=\"/guides/basic-features/routes\">{\"路由方案\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"在 \"}<_components.code>{\"src/routes/page.tsx\"}</_components.code>{\" 中添加组件代码：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-jsx\" meta='title=\"src/routes/page.tsx\"'>{\"export default () => {\\n  return <div>Index Page</div>;\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"SSG 也是在 Node.js 环境渲染页面，因此我们可以在\"}<_components.strong>{\"开发阶段开启 SSR\"}</_components.strong>{\"，提前在暴露代码问题，验证 SSG 渲染效果：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"export default defineConfig({\\n  server: {\\n    ssr: process.env.NODE_ENV === 'development',\\n  }\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在项目根路径下执行 \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\" 命令，查看 \"}<_components.code>{\"dist/\"}</_components.code>{\" 目录，此时只生成一个 HTML 文件 \"}<_components.code>{\"main/index.html\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"在项目根路径下执行 \"}<_components.code>{\"pnpm run build\"}</_components.code>{\" 命令，构建完成后，查看 \"}<_components.code>{\"dist/\"}</_components.code>{\" 目录，此时生成 \"}<_components.code>{\"main/index.html\"}</_components.code>{\"、\"}<_components.code>{\"main/user/index.html\"}</_components.code>{\" 和 \"}<_components.code>{\"main/user/profile/index.html\"}</_components.code>{\" 三个 HTML 文件，内容分别对应上述三条路由。\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"约定式路由\"}</_components.strong>{\"中的每一条路由，都会生成一个单独的 HTML 文件。查看 \"}<_components.code>{\"main/index.html\"}</_components.code>{\"，可以发现包含 \"}<_components.code>{\"Index Page\"}</_components.code>{\" 的文本内容，这正是 SSG 的效果。\"}</_components.p>{\"\\n\"}<_components.p>{\"执行 \"}<_components.code>{\"pnpm run serve\"}</_components.code>{\" 启动项目后，访问页面，在浏览器我们工具的 Network 窗口，查看请求返回的文档，文档包含组件渲染后的完整页面内容。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"在自控式路由中使用\">{\"在自控式路由中使用\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#在自控式路由中使用\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.strong>{\"自控式路由\"}</_components.strong>{\"是通过组件代码定义路由，需要应用运行起来才能获取准确的路由信息。因此，无法开箱即用的使用 SSG 功能。此时需要用户提前告知 Modern.js 框架，哪些路由需要开启 SSG 功能。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如有以下代码，包含多条路由，设置 \"}<_components.code>{\"output.ssg\"}</_components.code>{\" 为 \"}<_components.code>{\"true\"}</_components.code>{\" 时，默认只会渲染入口路由即 \"}<_components.code>{\"/\"}</_components.code>{\"：\"}</_components.p>{\"\\n\"}{\"\\n\"}<SelfRouteExample/>{\"\\n\"}<_components.p>{\"如果我们希望同时开启 \"}<_components.code>{\"/about\"}</_components.code>{\" 的 SSG 功能，可以配置 \"}<_components.code>{\"output.ssg\"}</_components.code>{\"，告知 Modern.js 开启指定路由的 SSG 功能。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"export default defineConfig({\\n  output: {\\n    ssg: {\\n      routes: ['/', '/about'],\\n    },\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"执行 \"}<_components.code>{\"pnpm run build\"}</_components.code>{\" 与 \"}<_components.code>{\"pnpm run serve\"}</_components.code>{\" 后，访问 \"}<_components.code>{\"http://localhost:8080/about\"}</_components.code>{\"，在 Preview 视图中可以看到页面已经完成渲染。\"}</_components.p>{\"\\n\"}<_components.p>{\"查看构建产物文件，可以看到 \"}<_components.code>{\"dist/\"}</_components.code>{\" 目录中，新增了一个 \"}<_components.code>{\"main/about/index.html\"}</_components.code>{\" 文件。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"以上仅介绍了单入口的情况，更多相关内容可以查看 \"}<_components.a href=\"/configure/app/output/ssg\">{\"API 文档\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}</_components.div></_components.div></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","pre","strong","h3","ul","li","div","components","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}