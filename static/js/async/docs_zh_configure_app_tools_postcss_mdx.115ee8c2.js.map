{"version":3,"file":"static/js/async/docs_zh_configure_app_tools_postcss_mdx.115ee8c2.js","sources":["../builder-doc/docs/zh/config/tools/postcss.md","./docs/zh/configure/app/tools/postcss.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"..%2F..%2Fbuilder-doc%2Fdocs%2Fzh%2Fconfig%2Ftools%2Fpostcss.md\"] = {\"toc\":[{\"text\":\"Function 类型\",\"id\":\"function-类型\",\"depth\":3},{\"text\":\"Object 类型\",\"id\":\"object-类型\",\"depth\":3},{\"text\":\"工具函数\",\"id\":\"工具函数\",\"depth\":3},{\"text\":\"addPlugins\",\"id\":\"addplugins\",\"depth\":4}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        pre: \"pre\",\n        p: \"p\",\n        a: \"a\",\n        h3: \"h3\",\n        h4: \"h4\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"Object | Function\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const defaultOptions = {\\n  postcssOptions: {\\n    plugins: [\\n      require('postcss-flexbugs-fixes'),\\n      require('postcss-custom-properties'),\\n      require('postcss-initial'),\\n      require('postcss-page-break'),\\n      require('postcss-font-variant'),\\n      require('postcss-media-minmax'),\\n      require('postcss-nesting'),\\n      require('autoprefixer')({\\n        flexbox: 'no-2009',\\n      }),\\n    ],\\n    // 默认在开发环境下启用 CSS 的 Source Map\\n    sourceMap: isDev,\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Builder 默认集成 PostCSS，你可以通过 \"}<_components.code>{\"tools.postcss\"}</_components.code>{\" 对 \"}<_components.a href=\"https://github.com/webpack-contrib/postcss-loader\" target=\"_blank\" rel=\"noopener noreferrer\">{\"postcss-loader\"}</_components.a>{\" 进行配置。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"function-类型\">{\"Function 类型\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#function-类型\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"值为 Function 类型时，内部默认配置作为第一参数传入，可以直接修改配置对象不做返回，也可以返回一个对象作为最终结果；第二个参数为修改 postcss-loader 配置的工具函数集合。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如，需要在原有插件的基础上新增一个 PostCSS 插件，在 postcssOptions.plugins 数组中 push 一个新的插件即可：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  tools: {\\n    postcss: opts => {\\n      opts.postcssOptions.plugins.push(require('postcss-px-to-viewport'));\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"需要给 PostCSS 插件传递参数时，可以通过函数参数的形式进行传入：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  tools: {\\n    postcss: opts => {\\n      const viewportPlugin = require('postcss-px-to-viewport')({\\n        viewportWidth: 375,\\n      });\\n      opts.postcssOptions.plugins.push(viewportPlugin);\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"tools.postcss\"}</_components.code>{\" 可以返回一个配置对象，并完全替换默认配置：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  tools: {\\n    postcss: () => {\\n      return {\\n        postcssOptions: {\\n          plugins: [require('postcss-px-to-viewport')],\\n        },\\n      };\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"object-类型\">{\"Object 类型\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#object-类型\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当此值为 Object 类型时，与默认配置通过 \"}<_components.code>{\"Object.assign\"}</_components.code>{\" 合并。注意 \"}<_components.code>{\"Object.assign\"}</_components.code>{\" 是浅拷贝，会完全覆盖内置的 \"}<_components.code>{\"plugins\"}</_components.code>{\" 数组，请谨慎使用。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  tools: {\\n    postcss: {\\n      // 由于使用 `Object.assign` 合并，因此默认的 postcssOptions 会被覆盖。\\n      postcssOptions: {\\n        plugins: [require('postcss-px-to-viewport')],\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"工具函数\">{\"工具函数\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#工具函数\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.h4 id=\"addplugins\">{\"addPlugins\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#addplugins\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"(plugins: PostCSSPlugin | PostCSSPlugin[]) => void\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"用于添加额外的 PostCSS 插件，你可以传入单个 PostCSS 插件，也可以传入 PostCSS 插件数组。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  tools: {\\n    postcss: (config, { addPlugins }) => {\\n      // 添加一个插件\\n      addPlugins(require('postcss-preset-env'));\\n      // 批量添加插件\\n      addPlugins([require('postcss-preset-env'), require('postcss-import')]);\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"Builder 中使用的 PostCSS 版本为 v8，当你引入社区中的 PostCSS 插件时，请注意版本是否适配，部分旧版本插件可能无法在 PostCSS v8 下运行。\"}</_components.p></_components.div></_components.div></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfigure%2Fapp%2Ftools%2Fpostcss.mdx\"] = {\"toc\":[],\"title\":\"tools.postcss\",\"frontmatter\":{\"sidebar_label\":\"postcss\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport Main from '@modern-js/builder-doc/docs/zh/config/tools/postcss.md';\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        div: \"div\",\n        p: \"p\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"toolspostcss\">{\"tools.postcss\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#toolspostcss\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"该配置由 Modern.js Builder 提供，更多信息可参考 \"}<_components.a href=\"https://modernjs.dev/builder/api/config-tools.html#toolspostcss\" target=\"_blank\" rel=\"noopener noreferrer\">{\"tools.postcss\"}</_components.a>{\"。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}{\"\\n\"}<Main/></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","ul","li","strong","code","pre","p","a","h3","h4","div","components","className","href","target","rel","id","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_","h1"],"mappings":"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"}