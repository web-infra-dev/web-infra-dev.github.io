{"version":3,"file":"static/js/async/docs_en_guides_topic-detail_framework-plugin_implement_mdx.4987434a.js","sources":["./docs/en/guides/topic-detail/framework-plugin/implement.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fguides%2Ftopic-detail%2Fframework-plugin%2Fimplement.mdx\"] = {\"toc\":[{\"text\":\"Implementing a Plugin\",\"id\":\"implementing-a-plugin\",\"depth\":2},{\"text\":\"Plugin Types\",\"id\":\"plugin-types\",\"depth\":3},{\"text\":\"Plugin Configuration\",\"id\":\"plugin-configuration\",\"depth\":3},{\"text\":\"Plugin API\",\"id\":\"plugin-api\",\"depth\":3},{\"text\":\"Async setup\",\"id\":\"async-setup\",\"depth\":3},{\"text\":\"Adding Plugins\",\"id\":\"adding-plugins\",\"depth\":2},{\"text\":\"Developing Local Plugins\",\"id\":\"developing-local-plugins\",\"depth\":3},{\"text\":\"Publishing a Plugin on npm\",\"id\":\"publishing-a-plugin-on-npm\",\"depth\":3}],\"title\":\"How to Develop Plugins\",\"frontmatter\":{\"title\":\"Develop Plugins\",\"sidebar_position\":3}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        ul: \"ul\",\n        li: \"li\",\n        code: \"code\",\n        pre: \"pre\",\n        h3: \"h3\",\n        img: \"img\",\n        ol: \"ol\",\n        strong: \"strong\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"how-to-develop-plugins\">{\"How to Develop Plugins\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#how-to-develop-plugins\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"The previous section introduced the Hook models used by Modern.js plugins, while this section describes how to develop plugins.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"implementing-a-plugin\">{\"Implementing a Plugin\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#implementing-a-plugin\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"A Modern.js plugin is an object that includes the following properties:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"name\"}</_components.code>{\": The name of the plugin, a unique identifier.\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"setup\"}</_components.code>{\": The initialization function for the plugin, which only runs once. The \"}<_components.code>{\"setup\"}</_components.code>{\" function can return a Hooks object, which Modern.js executes at specific times.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"const myPlugin = {\\n  name: 'my-plugin',\\n\\n  setup() {\\n    const foo = '1';\\n\\n    // return hook object\\n    return {\\n      afterBuild: () => {},\\n    };\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"In addition, plugins allow configuration of the execution order with other plugins. For more information, please refer to \"}<_components.a href=\"/guides/topic-detail/framework-plugin/relationship\">{\"Plugin Relationship\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.h3 id=\"plugin-types\">{\"Plugin Types\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#plugin-types\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Modern.js supports various types of project development, such as application development (\"}<_components.code>{\"app-tools\"}</_components.code>{\"), module development (\"}<_components.code>{\"module-tools\"}</_components.code>{\"), etc.\"}</_components.p>{\"\\n\"}<_components.p>{\"To balance the differences and commonalities between various types of project development, Modern.js organizes plugins as shown in the following figure:\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/eeeh7uhbepxlpe/modern-website/plugin-relationship.jpg\" alt=\"plugin-relationship\"/></_components.p>{\"\\n\"}<_components.p>{\"As shown in the figure, Modern.js roughly divides plugins into two categories:\"}</_components.p>{\"\\n\"}<_components.ol>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p>{\"Common plugins: Plugins that only include some basic Hooks.\"}</_components.p>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p>{\"Project plugins: Different project developments will extend their own Hooks, Config, etc. on the basis of common plugins.\"}</_components.p>{\"\\n\"}</_components.li>{\"\\n\"}</_components.ol>{\"\\n\"}<_components.p>{\"When using TypeScript, you can import built-in types such as \"}<_components.code>{\"CliPlugin\"}</_components.code>{\" to provide correct type inference for plugins.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\nconst myPlugin: CliPlugin = {\\n  name: 'my-plugin',\\n\\n  setup() {\\n    const foo = '1';\\n\\n    return {\\n      afterBuild: () => {},\\n    };\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The above code is a general-purpose plugin, containing only some basic Hooks. Modern.js supports extending the definition of plugins through generics:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { CliPlugin, AppTools } from '@modern-js/app-tools';\\n\\nconst myPlugin: CliPlugin<AppTools> = {\\n  name: 'my-plugin',\\n\\n  setup() {\\n    const foo = '1';\\n\\n    return {\\n      afterBuild: () => {},\\n    };\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"If you look closely at the type \"}<_components.code>{\"AppTools\"}</_components.code>{\", you can see that \"}<_components.code>{\"AppTools\"}</_components.code>{\" consists of 3 types.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"type AppTools = {\\n  hooks: AppToolsHooks;\\n  userConfig: AppToolsUserConfig;\\n  normalizedConfig: AppToolsNormalizedConfig;\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"When writing plugins, plugins extend their own types like Hooks on different bases through generic extensions:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"// common plugin\\nimport type { CliPlugin } from '@modern-js/core';\\nimport type { MyPluginHook } from 'xxx';\\n\\nconst myPlugin: CliPlugin<{ hooks: MyPluginHook }> = {};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"// extend from app-tools hook\\nimport type { CliPlugin, AppTools } from '@modern-js/app-tools';\\nimport type { MyPluginHook } from 'xxx';\\n\\nconst myPlugin: CliPlugin<AppTools & { hooks: MyPluginHook }> = {};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Please refer to \"}<_components.a href=\"/guides/topic-detail/framework-plugin/extend\">{\"Extending Hooks\"}</_components.a>{\" for detailed explanations.\"}</_components.p>{\"\\n\"}<_components.h3 id=\"plugin-configuration\">{\"Plugin Configuration\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#plugin-configuration\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.strong>{\"It is recommended to develop plugins in the form of functions\"}</_components.strong>{\", so that plugins can receive configuration options through function parameters:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\ntype MyPluginOptions = {\\n  foo: string;\\n};\\n\\nconst myPlugin = (options: MyPluginOptions): CliPlugin => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    console.log(options.foo);\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"plugin-api\">{\"Plugin API\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#plugin-api\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"setup\"}</_components.code>{\" function of a plugin receives an \"}<_components.code>{\"api\"}</_components.code>{\" parameter, and you can call some methods provided on the \"}<_components.code>{\"api\"}</_components.code>{\" to get configuration, application context, and other information.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\nexport const myPlugin = (): CliPlugin => ({\\n  name: 'my-plugin',\\n\\n  setup(api) {\\n    // get user set config\\n    const config = api.useConfigContext();\\n    // get context\\n    const appContext = api.useAppContext();\\n    // get final config\\n    const resolvedConfig = api.useResolvedConfigContext();\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"For more detail \"}<_components.a href=\"/guides/topic-detail/framework-plugin/plugin-api\">{\"Plugin API\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.h3 id=\"async-setup\">{\"Async setup\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#async-setup\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"setup\"}</_components.code>{\" function of a CLI plugin can be an asynchronous function, which can execute asynchronous logic during the initialization process.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\nexport const myPlugin = (): CliPlugin => ({\\n  name: 'my-plugin',\\n\\n  async setup(api) {\\n    await doSomething();\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"adding-plugins\">{\"Adding Plugins\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#adding-plugins\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Custom plugins can be used by following the instructions in the \"}<_components.a href=\"/configure/app/plugins\">{\"plugins\"}</_components.a>{\" section of the documentation. Below is the recommended way to implement plugins in Modern.js.\"}</_components.p>{\"\\n\"}<_components.h3 id=\"developing-local-plugins\">{\"Developing Local Plugins\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#developing-local-plugins\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"It is recommended to write local plugins in the \"}<_components.code>{\"config/plugin\"}</_components.code>{\" directory and export them using \"}<_components.code>{\"export default\"}</_components.code>{\":\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=config/plugin/myPlugin.ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\nexport const myPlugin = (): CliPlugin => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    // init plugin\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"register plugin in \"}<_components.code>{\"modern.config.ts\"}</_components.code>{\":\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"import { defineConfig } from '@modern-js/app-tools';\\nimport { myPlugin } from './config/plugin/myPlugin';\\n\\nexport default defineConfig({\\n  plugins: [myPlugin()],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"publishing-a-plugin-on-npm\">{\"Publishing a Plugin on npm\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#publishing-a-plugin-on-npm\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"If you want to publish your Modern.js plugin on npm, it's recommended to use the module project solution provided by Modern.js to manage and build the plugin.\"}</_components.p>{\"\\n\"}<_components.p>{\"First, create an empty module project solution and adjust the package name:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\">{'{\\n  \"name\": \"my-plugin\"\\n  ...\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"create plugin main file:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=src/index.ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\nexport const myPlugin = (): CliPlugin => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    // plugin init\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"After publishing, install it to the project you need to use \"}<_components.code>{\"pnpm add my-plugin\"}</_components.code>{\", take an application project as an example, and then add it in \"}<_components.code>{\"modern.config.ts\"}</_components.code>{\":\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"import { defineConfig } from '@modern-js/app-tools';\\nimport { myPlugin } from 'my-plugin';\\n\\nexport default defineConfig({\\n  plugins: [myPlugin()],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"If you find that there are currently unsatisfactory scenarios in Modern.js, welcome to build the Modern.js ecosystem together by \"}<_components.strong>{\"writing custom plugins\"}</_components.strong>{\".\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","ul","li","code","pre","h3","img","ol","strong","components","id","className","href","src","alt","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}