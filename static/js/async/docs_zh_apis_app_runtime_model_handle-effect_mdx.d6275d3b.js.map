{"version":3,"file":"static/js/async/docs_zh_apis_app_runtime_model_handle-effect_mdx.d6275d3b.js","sources":["./docs/zh/apis/app/runtime/model/handle-effect.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fapis%2Fapp%2Fruntime%2Fmodel%2Fhandle-effect.mdx\"] = {\"toc\":[{\"text\":\"函数签名\",\"id\":\"函数签名\",\"depth\":2},{\"text\":\"参数\",\"id\":\"参数\",\"depth\":3},{\"text\":\"返回值\",\"id\":\"返回值\",\"depth\":3}],\"title\":\"handleEffect\",\"frontmatter\":{\"sidebar_position\":7,\"title\":\"handleEffect\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport ReduckTip from '@site-docs/components/reduck-tip';\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        pre: \"pre\",\n        h2: \"h2\",\n        h3: \"h3\",\n        ul: \"ul\",\n        li: \"li\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"handleeffect\">{\"handleEffect\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#handleeffect\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}{\"\\n\"}<ReduckTip/>{\"\\n\"}<_components.p>{\"一个异步函数类型的 Effect，通常有三种需要处理的状态: 请求中、请求成功、请求处理失败。这些状态处理的方式，就是编写对应的 Action 函数(pending、fulfilled、rejected)。\"}</_components.p>{\"\\n\"}<_components.p>{\"借助 \"}<_components.code>{\"handleEffect\"}</_components.code>{\" API，我们可以生成默认的 Action 函数来处理异步请求各个阶段的不同结果。\"}<_components.code>{\"handleEffect\"}</_components.code>{\" 生成的 Action 返回的 State 的结构如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"interface State {\\n  result: any; // 存储 fulfilled 状态的返回结果\\n  pending: boolean; // 请求是否结束\\n  error: string; // 请求失败的结果\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"函数签名\">{\"函数签名\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#函数签名\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"interface EffectActions {\\n  pending: Action;\\n  fulfilled: Action;\\n  rejected: Action;\\n}\\n\\ninterface Config {\\n  ns?: string;\\n  result?: string | false;\\n  error?: string | false;\\n  pending?: string | false;\\n  combineMode?: 'merge' | 'replace';\\n  omitResultNamespace?: boolean;\\n}\\n\\nfunction handleEffect(config: Config): EffectActions;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"参数\">{\"参数\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#参数\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"ns：默认返回的 State 结构扁平地挂载到 Model 的 State 上，通过设置该参数可以将返回的 State 挂载到 \"}<_components.code>{\"ns\"}</_components.code>{\" 值命名的字段下。例如，\"}<_components.code>{\"ns\"}</_components.code>{\" 设置为 \"}<_components.code>{\"data\"}</_components.code>{\"，返回的 State 结构为：\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"interface State {\\n  data: {\\n    pending: boolean;\\n    result: any;\\n    error: string;\\n  };\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"result：默认值为 \"}<_components.code>{'\"result\"'}</_components.code>{\"。该参数对应存储异步请求 fulfilled 状态结果的字段名称。例如，设置 \"}<_components.code>{\"result\"}</_components.code>{\" 为 \"}<_components.code>{'\"items\"'}</_components.code>{\"，返回的 State 结构为：\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"interface State {\\n  items: any; // 默认的 result -> items\\n  pending: boolean;\\n  error: string;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"result\"}</_components.code>{\" 为 \"}<_components.code>{\"false\"}</_components.code>{\"，返回的 State 结构中不存在 \"}<_components.code>{\"result\"}</_components.code>{\"：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"interface State {\\n  pending: boolean;\\n  error: string;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p>{\"pending：默认值为 \"}<_components.code>{'\"pending\"'}</_components.code>{\"。改变返回 State 中的 \"}<_components.code>{\"pending\"}</_components.code>{\" 字段名。用法同上。\"}</_components.p>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p>{\"error： 默认值为 \"}<_components.code>{'\"error\"'}</_components.code>{\"。改变返回 State 中的 \"}<_components.code>{\"error\"}</_components.code>{\" 字段名。用法同上。\"}</_components.p>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p>{\"combineMode：默认值为 \"}<_components.code>{'\"merge\"'}</_components.code>{\"。获取 fulfilled 状态的返回数据后，对 \"}<_components.code>{\"result\"}</_components.code>{\" 的处理方式：merge（合并）和 replace（替换）。这里能自动处理的数据类型也仅限为简单的对象或者数组类型。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"merge：前一次的数据与当前的数据合并。数据为数组类型，内部操作类似于 \"}<_components.code>{\"[].concat(lastData, currentData)\"}</_components.code>{\"；数据为对象类型，内部操作类似于 \"}<_components.code>{\"{...lastData, ...curData}\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li>{\"replace：当前的数据直接替换之前的数据。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p>{\"omitResultNamespace：默认值为 \"}<_components.code>{'\"false\"'}</_components.code>{\"。当异步请求的结果为对象类型，希望把该结果直接挂载到 Model 的 State 上，而不是挂载到 \"}<_components.code>{'\"result\"'}</_components.code>{\" 上，可以设置为 true。例如：\"}</_components.p>{\"\\n\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"// 一个异步请求得到的数据为一个对象：{user: 'xx', email: 'xx'}，\\n// 配置 handleEffect({ omitResultNamespace: true })\\n// 则得到的 State 结构如下：\\n{\\n  user: 'xx',\\n  email: 'xx',\\n  pending: false,\\n  error: null,\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"返回值\">{\"返回值\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#返回值\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"分别处理 pending、fulfilled、rejected 三种状态的 Action 组成的对象。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"更多参考\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p><_components.a href=\"/guides/topic-detail/model/manage-effects\">{\"副作用管理\"}</_components.a></_components.p>{\"\\n\"}</_components.div></_components.div></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","pre","h2","h3","ul","li","div","components","id","className","href","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}