{"version":3,"file":"static/js/async/docs_zh_guides_topic-detail_monorepo_sub-project-interface_mdx.673e8603.js","sources":["./docs/zh/guides/topic-detail/monorepo/sub-project-interface.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguides%2Ftopic-detail%2Fmonorepo%2Fsub-project-interface.mdx\"] = {\"toc\":[{\"text\":\"准备工作\",\"id\":\"准备工作\",\"depth\":2},{\"text\":\"在使用 pnpm 的 Monorepo 中进行项目联调\",\"id\":\"在使用-pnpm-的-monorepo-中进行项目联调\",\"depth\":2},{\"text\":\"在使用 Yarn 的 Monorepo 中进行项目联调\",\"id\":\"在使用-yarn-的-monorepo-中进行项目联调\",\"depth\":2}],\"title\":\"子项目联调\",\"frontmatter\":{\"sidebar_position\":3}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        ul: \"ul\",\n        li: \"li\",\n        code: \"code\",\n        strong: \"strong\",\n        pre: \"pre\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"子项目联调\">{\"子项目联调\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#子项目联调\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"本章将要介绍如何在 Monorepo 下进行子项目之间的联调使用。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"准备工作\">{\"准备工作\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#准备工作\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"按照 \"}<_components.a href=\"/guides/topic-detail/monorepo/create-sub-project\">{\"「创建子项目」\"}</_components.a>{\" 章节的介绍（如果还没有看过，可以先了解一下），我们首先创建以下三个子项目：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"一个「应用」子项目\"}</_components.li>{\"\\n\"}<_components.li>{\"一个「模块（内部）」子项目\"}</_components.li>{\"\\n\"}<_components.li>{\"一个「模块」子项目\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"执行 \"}<_components.code>{\"pnpm run new\"}</_components.code>{\"，并按照如下进行选择：\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"「应用」子项目：\"}</_components.strong></_components.p>{\"\\n\"}<_components.pre><_components.code>{\"? 请选择你想创建的工程类型：Web 应用\\n? 请填写子项目名称：app\\n? 请填写子项目目录名称：app\\n? 请选择开发语言：TS\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.strong>{\"「模块（内部）」子项目：\"}</_components.strong></_components.p>{\"\\n\"}<_components.pre><_components.code>{\"? 请选择你想创建的工程类型：Npm 模块（内部）\\n? 请填写子项目名称：internal-lib\\n? 请填写子项目目录名称：internal-lib\\n? 请选择开发语言：TS\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.strong>{\"「模块」子项目：\"}</_components.strong></_components.p>{\"\\n\"}<_components.pre><_components.code>{\"? 请选择你想创建的工程类型：Npm 模块\\n? 请填写子项目名称：components\\n? 请填写子项目目录名称：components\\n? 请选择开发语言：TS\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"创建成功后，会得到以下项目：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"./apps/app\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"./packages/components\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"./features/internal-lib\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"然后修改一下默认的代码和新增文件：\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"重命名 \"}<_components.code>{\"./pakcages/components/src/index.tsx\"}</_components.code></_components.strong></_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import './index.css';\\n\\nexport default function ({ text }: { text: string }) {\\n  return (\\n    <div>\\n      This is UI Components Log: <p className=\\\"log\\\">{text}</p>\\n    </div>\\n  );\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.strong>{\"新增 \"}<_components.code>{\"./pakcages/components/src/index.css\"}</_components.code></_components.strong></_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-css\">{\".log {\\n  color: gray;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.strong>{\"修改 \"}<_components.code>{\"./features/internal-lib/src/index.ts\"}</_components.code></_components.strong></_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"export default function (text: string) {\\n  return text.toUpperCase();\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.strong>{\"修改 \"}<_components.code>{\"./apps/app/src/App.tsx\"}</_components.code></_components.strong></_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { Switch, Route } from '@modern-js/runtime/router';\\nimport formatString from 'internal-lib';\\nimport Comp from 'components';\\n\\nimport './App.css';\\n\\nconst App = () => (\\n  <Switch>\\n    <Route exact={true} path=\\\"/\\\">\\n      <div className=\\\"container-box\\\">\\n        <Comp text={formatString('hello world')} />\\n        {/* 省略... */}\\n      </div>\\n    </Route>\\n    <Route path=\\\"*\\\">\\n      <div>404</div>\\n    </Route>\\n  </Switch>\\n);\\n\\nexport default App;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"到此为止我们创建了一个可以被发布到外部的组件项目、一个转换字符串的内部模块项目以及一个使用组件和内部模块的应用项目，如果直接运行应用项目还暂时无法正常使用。接下来将要介绍如何让它们能够互相联调使用，成功的使应用子项目 \"}<_components.code>{\"apps/app\"}</_components.code>{\" 正常运行。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"启动 \"}<_components.code>{\"apps/app\"}</_components.code>{\" 项目之前需要先构建（\"}<_components.code>{\"pnpm run build\"}</_components.code>{\"） \"}<_components.code>{\"packages/component\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"由于 Modern.js 支持 pnpm 与 Yarn 的 Monorepo 工程，接下来会从这两个方面分别介绍。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"在使用-pnpm-的-monorepo-中进行项目联调\">{\"在使用 pnpm 的 Monorepo 中进行项目联调\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#在使用-pnpm-的-monorepo-中进行项目联调\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"在 pnpm 的 Monorepo 项目中，我们通过在 \"}<_components.code>{\"apps/app\"}</_components.code>{\" 子项目下分别执行：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code>{\"pnpm add components\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"以及\"}</_components.p>{\"\\n\"}<_components.pre><_components.code>{\"pnpm add internal-lib -D\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"注意这里将 internal-lib 作为 \"}<_components.code>{\"apps/app\"}</_components.code>{\" 项目的开发依赖，因为在构建环境会被打包到构建产物中。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"将 \"}<_components.code>{\"packages/components\"}</_components.code>{\" 与 \"}<_components.code>{\"features/internal-lib\"}</_components.code>{\" 子项目加入到应用的依赖列表当中。\"}</_components.p>{\"\\n\"}<_components.p>{\"执行成功后，在 \"}<_components.code>{\"apps/app/package.json\"}</_components.code>{\" 会发生如下变化：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\">{'{\\n  \"dependencies\": {\\n++  \"components\": \"workspace:^0.1.0\"\\n  },\\n  \"devDependencies\": {\\n++  \"internal-lib\": \"workspace:^0.1.0\"\\n  },\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"补充信息\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p><_components.code>{\"workspace:^0.1.0\"}</_components.code>{\" 是一种 PNPM 提供的 \"}<_components.a href=\"https://pnpm.io/workspaces#workspace-protocol-workspace\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Workspace 协议\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"当依赖安装成功之后，我们还需要将 \"}<_components.code>{\"packages/components\"}</_components.code>{\" 进行构建，因为需要使用其构建产物。\"}</_components.p>{\"\\n\"}<_components.p>{\"到此为止，\"}<_components.code>{\"app/apps\"}</_components.code>{\" 应用子项目可以正常的运行了。在修改 \"}<_components.code>{\"features/internal-lib\"}</_components.code>{\" 的源码，或者修改 \"}<_components.code>{\"packages/components\"}</_components.code>{\" 的源码并构建之后都会触发应用子项目的热更新。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"在使用-yarn-的-monorepo-中进行项目联调\">{\"在使用 Yarn 的 Monorepo 中进行项目联调\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#在使用-yarn-的-monorepo-中进行项目联调\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"在 Yarn 的 Monorepo 项目中，默认情况下可以直接在 \"}<_components.code>{\"apps/app\"}</_components.code>{\" 应用项目中直接使用组件项目和内部模块项目。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"补充信息\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"之所以可以直接在应用中使用使用组件项目和内部模块项目，是因为 Yarn 将这些子项目模块提升到了顶层的 \"}<_components.code>{\"node_modules\"}</_components.code>{\"内。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"但是由于组件 \"}<_components.code>{\"components\"}</_components.code>{\" 是非内部模块，因此建议在 \"}<_components.code>{\"apps/app/package.json\"}</_components.code>{\" 中进行依赖声明：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\">{'{\\n  \"dependencies\": {\\n++  \"components\": \"0.1.0\"\\n  },\\n}\\n'}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","ul","li","code","strong","pre","div","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}