(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["docs_zh_guides_topic-detail_framework-plugin_plugin-api_mdx"],{50593:function(e,n,i){"use strict";i.r(n),i.d(n,{default:function(){return d}});var s,r=i("15169"),o=i("43932"),t=i("9880"),a=i("23169");function c(e){var n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",pre:"pre",h2:"h2",h3:"h3",div:"div"},(0,a.useMDXComponents)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"插件-api",children:["插件 API",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#插件-api",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["插件的 ",(0,t.jsx)(n.code,{children:"setup"})," 函数会接收一个 ",(0,t.jsx)(n.code,{children:"api"})," 入参，你可以调用 api 上提供的一些方法来获取到配置、应用上下文等信息。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import type { CliPlugin } from '@modern-js/core';\n\nexport const myPlugin = (): CliPlugin => ({\n  name: 'my-plugin',\n\n  setup(api) {\n    // 获取应用原始配置\n    const config = api.useConfigContext();\n    // 获取应用运行上下文\n    const appContext = api.useAppContext();\n    // 获取解析之后的最终配置\n    const resolvedConfig = api.useResolvedConfigContext();\n  },\n});\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"api",children:["API",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#api",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"useconfigcontext",children:["useConfigContext",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#useconfigcontext",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"用于获取应用原始配置。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const useConfigContext: () => UserConfig;\n\ninterface UserConfig {\n  source?: SourceConfig;\n  output?: OutputConfig;\n  server?: ServerConfig;\n  deploy?: DeployConfig;\n  // ...other fields\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["具体配置字段的意义请参考 ",(0,t.jsx)(n.a,{href:"/configure/app/usage",children:"配置"}),"。"]}),"\n",(0,t.jsxs)(n.div,{className:"modern-directive tip",children:[(0,t.jsx)(n.div,{className:"modern-directive-title",children:"TIP"}),(0,t.jsx)(n.div,{className:"modern-directive-content",children:(0,t.jsxs)(n.p,{children:["该方法获取到的是只读配置，不可修改。如果需要修改配置，请使用 ",(0,t.jsx)(n.a,{href:"/guides/topic-detail/framework-plugin/hook-list#config",children:"config hook"}),"。\n"]})})]}),"\n",(0,t.jsxs)(n.h3,{id:"useresolvedconfigcontext",children:["useResolvedConfigContext",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#useresolvedconfigcontext",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"用于获取被解析、合并之后的最终配置。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const useResolvedConfigContext: () => NormalizedConfig;\n\ninterface NormalizedConfig {\n  source: NormalizedSourceConfig;\n  output: NormalizedOutputConfig;\n  server: NormalizedServerConfig;\n  deploy: NormalizedDeployConfig;\n  _raw: UserConfig; // 原始配置对象\n  // ...other fields\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["配置字段的完整内容请参考 ",(0,t.jsx)(n.a,{href:"/configure/app/usage",children:"配置"}),"。"]}),"\n",(0,t.jsxs)(n.div,{className:"modern-directive tip",children:[(0,t.jsx)(n.div,{className:"modern-directive-title",children:"TIP"}),(0,t.jsx)(n.div,{className:"modern-directive-content",children:(0,t.jsxs)(n.p,{children:["该方法获取到的是只读配置，不可修改。如果需要修改配置，请使用 ",(0,t.jsx)(n.a,{href:"/guides/topic-detail/framework-plugin/hook-list#config",children:"config hook"}),"。\n"]})})]}),"\n",(0,t.jsxs)(n.h3,{id:"useappcontext",children:["useAppContext",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#useappcontext",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"用于获取应用运行上下文。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const useAppContext: () => IAppContext;\n\ninterface IAppContext {\n  appDirectory: string;\n  configFile: string | false;\n  ip?: string;\n  port?: number;\n  distDirectory: string;\n  packageName: string;\n  srcDirectory: string;\n  sharedDirectory: string;\n  nodeModulesDirectory: string;\n  internalDirectory: string;\n  plugins: {\n    cli?: any;\n    server?: any;\n  }[];\n  entrypoints: Entrypoint[];\n  serverRoutes: ServerRoute[];\n  htmlTemplates: HtmlTemplates;\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"usehookrunners",children:["useHookRunners",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#usehookrunners",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"用于获取 Hooks 的执行器，并触发特定的 Hook 执行。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import type { CliPlugin } from '@modern-js/core';\n\nexport const myPlugin = (): CliPlugin => ({\n  name: 'my-plugin',\n\n  async setup(api) {\n    const hookRunners = api.useHookRunners();\n    // 触发 afterBuild Hook\n    await hookRunners.afterBuild();\n  },\n});\n"})})]})}(s=globalThis).__RSPRESS_PAGE_META||(s.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fguides%2Ftopic-detail%2Fframework-plugin%2Fplugin-api.mdx"]={toc:[{text:"API",id:"api",depth:2},{text:"useConfigContext",id:"useconfigcontext",depth:3},{text:"useResolvedConfigContext",id:"useresolvedconfigcontext",depth:3},{text:"useAppContext",id:"useappcontext",depth:3},{text:"useHookRunners",id:"usehookrunners",depth:3}],title:"插件 API",frontmatter:{title:"插件 API",sidebar_position:6}};var d=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,a.useMDXComponents)(),e.components).wrapper;return n?(0,t.jsx)(n,(0,o._)((0,r._)({},e),{children:(0,t.jsx)(c,(0,r._)({},e))})):c(e)}}}]);