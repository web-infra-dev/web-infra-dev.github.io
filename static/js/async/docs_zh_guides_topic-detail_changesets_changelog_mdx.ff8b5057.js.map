{"version":3,"file":"static/js/async/docs_zh_guides_topic-detail_changesets_changelog_mdx.ff8b5057.js","sources":["./docs/zh/guides/topic-detail/changesets/changelog.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguides%2Ftopic-detail%2Fchangesets%2Fchangelog.mdx\"] = {\"toc\":[{\"text\":\"自定义 changelog 内容\",\"id\":\"自定义-changelog-内容\",\"depth\":2},{\"text\":\"getReleaseLine\",\"id\":\"getreleaseline\",\"depth\":3},{\"text\":\"Params\",\"id\":\"params\",\"depth\":4},{\"text\":\"返回值\",\"id\":\"返回值\",\"depth\":4},{\"text\":\"默认实现\",\"id\":\"默认实现\",\"depth\":4},{\"text\":\"getDependencyReleaseLine\",\"id\":\"getdependencyreleaseline\",\"depth\":3},{\"text\":\"Params\",\"id\":\"params-1\",\"depth\":4},{\"text\":\"返回值\",\"id\":\"返回值-1\",\"depth\":4},{\"text\":\"默认实现\",\"id\":\"默认实现-1\",\"depth\":4},{\"text\":\"配置\",\"id\":\"配置\",\"depth\":2},{\"text\":\"配置相对路径\",\"id\":\"配置相对路径\",\"depth\":3},{\"text\":\"使用模块工程方案\",\"id\":\"使用模块工程方案\",\"depth\":3},{\"text\":\"使用 npx @modern-js/create@latest 创建模块工程方案\",\"id\":\"使用-npx-modern-jscreatelatest-创建模块工程方案\",\"depth\":4},{\"text\":\"实现自定义内容\",\"id\":\"实现自定义内容\",\"depth\":4},{\"text\":\"将模块发布到 NPM\",\"id\":\"将模块发布到-npm\",\"depth\":4},{\"text\":\"在目标仓库根目录安装对应模块，例如 custom-changelog\",\"id\":\"在目标仓库根目录安装对应模块例如-custom-changelog\",\"depth\":4},{\"text\":\"配置 changeset 的 changelog 配置为包名称\",\"id\":\"配置-changeset-的-changelog-配置为包名称\",\"depth\":4},{\"text\":\"使用 Monorepo 工程方案\",\"id\":\"使用-monorepo-工程方案\",\"depth\":3},{\"text\":\"执行 pnpm run new 创建模块子项目\",\"id\":\"执行-pnpm-run-new-创建模块子项目\",\"depth\":4},{\"text\":\"实现自定义内容\",\"id\":\"实现自定义内容-1\",\"depth\":4},{\"text\":\"在 Monorepo 根目录添加子项目模块依赖，例如 custom-changelog\",\"id\":\"在-monorepo-根目录添加子项目模块依赖例如-custom-changelog\",\"depth\":4},{\"text\":\"配置 changeset 的 changelog 配置为包名称\",\"id\":\"配置-changeset-的-changelog-配置为包名称-1\",\"depth\":4}],\"title\":\"自定义 changelog 生成\",\"frontmatter\":{\"sidebar_position\":6}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        h2: \"h2\",\n        ul: \"ul\",\n        li: \"li\",\n        h3: \"h3\",\n        h4: \"h4\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"自定义-changelog-生成\">{\"自定义 changelog 生成\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自定义-changelog-生成\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Changesets 默认会使用 \"}<_components.code>{\"@changesets/cli/changelog\"}</_components.code>{\" 生成 Changelog 信息，如果默认的 changelog 信息不能满足需求，可以自定义 changelog 的生成。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"自定义-changelog-内容\">{\"自定义 changelog 内容\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自定义-changelog-内容\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"changelog 信息主要包含以下两种信息：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p>{\"changeset 中写入的 changelog 信息。\"}</_components.p>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p>{\"本次版本升级关联包的版本变更信息。\"}</_components.p>{\"\\n\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"自定义逻辑主要实现两个函数，\"}<_components.code>{\"getReleaseLine\"}</_components.code>{\" 和 \"}<_components.code>{\"getDependencyReleaseLine\"}</_components.code>{\"，分别用来定义上述这两种信息。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"getreleaseline\">{\"getReleaseLine\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#getreleaseline\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.h4 id=\"params\">{\"Params\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#params\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"changeset\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export type VersionType = 'major' | 'minor' | 'patch' | 'none';\\n\\nexport type Release = { name: string; type: VersionType };\\n\\nexport type Changeset = {\\n  id: string; // changeset 的文件名称\\n  commit?: string; // changeset 提交时的 commit id 信息\\n  summary: string; // changeset 内容信息\\n  releases: Array<Release>; // 当前计算出的 changeset 升级包名称及类型信息\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"type\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"当前包对应的升级版本类型，类型为上述 \"}<_components.code>{\"VersionType\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"返回值\">{\"返回值\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#返回值\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"changelog 内容。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"默认实现\">{\"默认实现\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#默认实现\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p><_components.code>{\"@changesets/cli/changelog\"}</_components.code>{\" 默认处理逻辑为将 \"}<_components.code>{\"summary\"}</_components.code>{\" 信息按照换行符 \"}<_components.code>{\"\\\\n\"}</_components.code>{\" 分割，第一样前面增加 \"}<_components.code>{\"-\"}</_components.code>{\" 作为列表开头，其他内容作为第一行内容的补充整理在列表下方。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"async function getReleaseLine(changeset, type) {\\n  const [firstLine, ...futureLines] = changeset.summary\\n    .split('\\\\n')\\n    .map(l => l.trimRight());\\n\\n  let returnVal = `- ${\\n    changeset.commit ? `${changeset.commit}: ` : ''\\n  }${firstLine}`;\\n\\n  if (futureLines.length > 0) {\\n    returnVal += `\\\\n${futureLines.map(l => `  ${l}`).join('\\\\n')}`;\\n  }\\n\\n  return returnVal;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"getdependencyreleaseline\">{\"getDependencyReleaseLine\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#getdependencyreleaseline\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.h4 id=\"params-1\">{\"Params\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#params-1\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"changesets\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"当前关联的所有 changeset 信息，类型为 \"}<_components.code>{\"getReleaseLine\"}</_components.code>{\" changeset 类型数组。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"dependenciesUpdated\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"type ModCompWithPackage = {\\n  name: string; // 依赖模块名称\\n  type: VersionType; // 依赖模块的升级类型\\n  oldVersion: string; // 依赖模块当前版本号\\n  newVersion: string; // 依赖模块新版本号\\n  changesets: string[]; // 关联的 changeset id 列表\\n  packageJson: PackageJSON; // 依赖模块完整的 package.json 内容\\n  dir: string; // 依赖模块的路径(绝对路径)\\n};\\n\\ntype DependenciesUpdated = ModCompWithPackage[];\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"返回值-1\">{\"返回值\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#返回值-1\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"changelog 内容。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"默认实现-1\">{\"默认实现\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#默认实现-1\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p><_components.code>{\"@changesets/cli/changelog\"}</_components.code>{\" 默认会使用 changesets 信息展示对应的 \"}<_components.code>{\"Updated dependencies + commit id\"}</_components.code>{\"，以列表形式展示。然后根据 \"}<_components.code>{\"dependenciesUpdated\"}</_components.code>{\" 信息展示对应的依赖包包名和新版本号，作为列表的子列表项。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"async function getDependencyReleaseLine(changesets, dependenciesUpdated) {\\n  console.log('getDependencyReleaseLine', changesets, dependenciesUpdated);\\n  if (dependenciesUpdated.length === 0) return '';\\n\\n  const changesetLinks = changesets.map(\\n    changeset =>\\n      `- Updated dependencies${\\n        changeset.commit ? ` [${changeset.commit}]` : ''\\n      }`,\\n  );\\n\\n  const updatedDepenenciesList = dependenciesUpdated.map(\\n    dependency => `  - ${dependency.name}@${dependency.newVersion}`,\\n  );\\n\\n  return [...changesetLinks, ...updatedDepenenciesList].join('\\\\n');\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"展示效果为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-markdown\">{\"- Updated dependencies [f0438ab]\\n- Updated dependencies [f0438ab]\\n  - module-3@2.0.0\\n  - module-1@0.2.0\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"配置\">{\"配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Changesets 配置文件中 \"}<_components.code>{\"changelog\"}</_components.code>{\" 字段用于标记 changelog 信息的获取途径。\"}</_components.p>{\"\\n\"}<_components.p>{\"该配置可以为字符串，直接声明获取 changelog 信息模块的模块名称或者路径。\"}</_components.p>{\"\\n\"}<_components.p>{\"该配置还支持配置数组，数组中第一个元素为获取 changelog 信息模块的模块名称或者路径，第二个元素为传入对应函数的参数值，会作为 \"}<_components.code>{\"getReleaseLine\"}</_components.code>{\" 和 \"}<_components.code>{\"getDependencyReleaseLine\"}</_components.code>{\" 函数的第三个参数传入。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"配置相对路径\">{\"配置相对路径\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置相对路径\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"changelog 配置如果为相对路径为 \"}<_components.code>{\".changesets\"}</_components.code>{\" 目录下的相对路径。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如创建 \"}<_components.code>{\".changeset/my-changelog-config.js\"}</_components.code>{\" 文件，定义如下内容：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\".changeset/my-changelog-config.js\"'>{\"async function getReleaseLine(changeset, type) {}\\n\\nasync function getDependencyReleaseLine(changesets, dependenciesUpdated) {}\\n\\nmodule.exports = {\\n  getReleaseLine,\\n  getDependencyReleaseLine,\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"changlog\"}</_components.code>{\" 配置为 \"}<_components.code>{\"./my-changelog-config.js\"}</_components.code>{\" 即可:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\".changesets/config.json\"'>{'{\\n  \"changelog\": \"./my-changelog-config.js\",\\n   ...\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"使用模块工程方案\">{\"使用模块工程方案\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用模块工程方案\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"自定义 changelog 还可以使用模块工程方案进行管理，提供通用方案。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"使用-npx-modern-jscreatelatest-创建模块工程方案\">{\"使用 \"}<_components.code>{\"npx @modern-js/create@latest\"}</_components.code>{\" 创建模块工程方案\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用-npx-modern-jscreatelatest-创建模块工程方案\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-md\">{\"? 请选择你想创建的工程类型：Npm 模块\\n? 请填写项目名称：custom-changelog\\n? 请选择开发语言：TS\\n? 请选择包管理工具：pnpm\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"实现自定义内容\">{\"实现自定义内容\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#实现自定义内容\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"src/index.ts\"'>{\"export async function getReleaseLine() {}\\n\\nexport async function getDependencyReleaseLine() {}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"将模块发布到-npm\">{\"将模块发布到 NPM\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#将模块发布到-npm\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.h4 id=\"在目标仓库根目录安装对应模块例如-custom-changelog\">{\"在目标仓库根目录安装对应模块，例如 \"}<_components.code>{\"custom-changelog\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#在目标仓库根目录安装对应模块例如-custom-changelog\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.h4 id=\"配置-changeset-的-changelog-配置为包名称\">{\"配置 changeset 的 changelog 配置为包名称\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置-changeset-的-changelog-配置为包名称\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\".changesets/config.json\"'>{'{\\n  \"changelog\": \"custom-changelog\",\\n   ...\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"使用-monorepo-工程方案\">{\"使用 Monorepo 工程方案\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用-monorepo-工程方案\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"如果你当前仓库为 Monorepo 工程方案，可以直接使用模块子项目进行管理。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"执行-pnpm-run-new-创建模块子项目\">{\"执行 \"}<_components.code>{\"pnpm run new\"}</_components.code>{\" 创建模块子项目\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#执行-pnpm-run-new-创建模块子项目\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-md\">{\"? 请选择你想创建的工程类型：Npm 模块\\n? 请填写子项目名称：custom-changelog\\n? 请填写子项目目录名称：custom-changelog\\n? 请选择开发语言：TS\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"实现自定义内容-1\">{\"实现自定义内容\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#实现自定义内容-1\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"src/index.ts\"'>{\"export async function getReleaseLine() {}\\n\\nexport async function getDependencyReleaseLine() {}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"在-monorepo-根目录添加子项目模块依赖例如-custom-changelog\">{\"在 Monorepo 根目录添加子项目模块依赖，例如 \"}<_components.code>{\"custom-changelog\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#在-monorepo-根目录添加子项目模块依赖例如-custom-changelog\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\"package.json\"'>{'{\\n  \"devDependencies\": {\\n    \"custom-changelog\": \"workspace:*\",\\n    ...\\n  }\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"配置-changeset-的-changelog-配置为包名称-1\">{\"配置 changeset 的 changelog 配置为包名称\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置-changeset-的-changelog-配置为包名称-1\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\".changesets/config.json\"'>{'{\\n  \"changelog\": \"custom-changelog\",\\n   ...\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"该模块发布到 NPM 后，依然可以和模块类型一样供其他仓库使用。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","h2","ul","li","h3","h4","pre","components","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}