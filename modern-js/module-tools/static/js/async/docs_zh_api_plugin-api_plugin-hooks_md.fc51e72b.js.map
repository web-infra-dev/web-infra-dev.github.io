{"version":3,"file":"static/js/async/docs_zh_api_plugin-api_plugin-hooks_md.fc51e72b.js","sources":["./docs/zh/api/plugin-api/plugin-hooks.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fapi%2Fplugin-api%2Fplugin-hooks.md\"] = {\"toc\":[{\"text\":\"构建钩子\",\"id\":\"构建钩子\",\"depth\":2},{\"text\":\"beforeBuild\",\"id\":\"beforebuild\",\"depth\":3},{\"text\":\"beforeBuildTask\",\"id\":\"beforebuildtask\",\"depth\":3},{\"text\":\"afterBuildTask\",\"id\":\"afterbuildtask\",\"depth\":3},{\"text\":\"afterBuild\",\"id\":\"afterbuild\",\"depth\":3},{\"text\":\"buildPlatform 钩子\",\"id\":\"buildplatform-钩子\",\"depth\":2},{\"text\":\"registerBuildPlatform\",\"id\":\"registerbuildplatform\",\"depth\":3},{\"text\":\"beforeBuildPlatform\",\"id\":\"beforebuildplatform\",\"depth\":3},{\"text\":\"buildPlatform\",\"id\":\"buildplatform\",\"depth\":3},{\"text\":\"afterBuildPlatform\",\"id\":\"afterbuildplatform\",\"depth\":3},{\"text\":\"调试钩子\",\"id\":\"调试钩子\",\"depth\":2},{\"text\":\"registerDev\",\"id\":\"registerdev\",\"depth\":3},{\"text\":\"beforeDev\",\"id\":\"beforedev\",\"depth\":3},{\"text\":\"(before|after)DevMenu\",\"id\":\"beforeafterdevmenu\",\"depth\":3},{\"text\":\"beforeDevTask\",\"id\":\"beforedevtask\",\"depth\":3},{\"text\":\"afterDev\",\"id\":\"afterdev\",\"depth\":3}],\"title\":\"Plugin Hooks\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        ul: \"ul\",\n        li: \"li\",\n        code: \"code\",\n        h2: \"h2\",\n        h3: \"h3\",\n        pre: \"pre\",\n        blockquote: \"blockquote\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"plugin-hooks\">{\"Plugin Hooks\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#plugin-hooks\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"本章介绍关于 Module Tools 支持的生命周期钩子。\"}</_components.p>{\"\\n\"}<_components.p>{\"目前主要包含两类生命周期钩子：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"构建钩子：仅在执行 \"}<_components.code>{\"build\"}</_components.code>{\" 命令构建源码产物时触发。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"buildPlatform\"}</_components.code>{\" 钩子：仅在执行 \"}<_components.code>{\"build --platform\"}</_components.code>{\" 命令生成其他构建产物时触发。\"}</_components.li>{\"\\n\"}<_components.li>{\"调试钩子：运行 \"}<_components.code>{\"dev\"}</_components.code>{\" 命令时会触发的钩子。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"构建钩子\">{\"构建钩子\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#构建钩子\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"在执行 \"}<_components.code>{\"build\"}</_components.code>{\" 命令的时候，会按照顺序触发以下 Hooks：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"beforeBuild\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"beforeBuildTask\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"afterBuildTask\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"afterBuild\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"beforebuild\"><_components.code>{\"beforeBuild\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#beforebuild\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"执行整体构建流程之前触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      beforeBuild(options: Options): Return {\\n        return options.config;\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"参数和返回值类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"type Options = {\\n  options: { config: BuildConfig; cliOptions: BuildCommandOptions };\\n};\\n\\nexport interface BuildCommandOptions {\\n  config: string;\\n  clear?: boolean;\\n  dts?: boolean;\\n  platform?: boolean | string[];\\n  tsconfig: string;\\n  watch?: boolean;\\n}\\n\\ntype Return = BuildConfig;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.blockquote>{\"\\n\"}<_components.p><_components.code>{\"BuildConfig\"}</_components.code>{\" 类型参考 \"}<_components.a href=\"/api/\">{\"API 配置\"}</_components.a></_components.p>{\"\\n\"}</_components.blockquote>{\"\\n\"}<_components.h3 id=\"beforebuildtask\"><_components.code>{\"beforeBuildTask\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#beforebuildtask\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"根据构建配置，Module Tools 会将整体构建分成多个子构建任务。该 Hook 将会在每一个构建子任务之前触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      beforeBuildTask(config: BaseBuildConfig): BaseBuildConfig {\\n        return config;\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"参数和返回值类型：\"}</_components.p>{\"\\n\"}<_components.p><_components.code>{\"BaseBuildConfig\"}</_components.code>{\" 类型参考 \"}<_components.a href=\"/api/\">{\"API 配置\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"afterbuildtask\"><_components.code>{\"afterBuildTask\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#afterbuildtask\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"每一个构建子任务结束之后触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      afterBuildTask(options: BuildTaskResult): void {\\n        // ...\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"参数和返回值类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export interface BuildTaskResult {\\n  status: 'success' | 'fail';\\n  message?: string;\\n  config: BaseBuildConfig;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"afterbuild\"><_components.code>{\"afterBuild\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#afterbuild\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"整体构建流程结束之后触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      afterBuild(options: BuildResult): void {\\n        // ...\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"参数和返回值类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export interface BuildResult {\\n  status: 'success' | 'fail';\\n  message?: string;\\n  config: BuildConfig;\\n  commandOptions: BuildCommandOptions;\\n  totalDuration: number;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"buildplatform-钩子\">{\"buildPlatform 钩子\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#buildplatform-钩子\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"module-tools 还提供了 \"}<_components.code>{\"build --platform\"}</_components.code>{\" 命令来执行特定的构建任务。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如在安装了 Storybook 插件后，就可以执行 \"}<_components.code>{\"build --platform\"}</_components.code>{\" 或者 \"}<_components.code>{\"build --platform storybook\"}</_components.code>{\" 来执行 Storybook 的构建任务。因为 Storybook 插件基于 buildPlatform Hooks 实现了该功能。\"}</_components.p>{\"\\n\"}<_components.p>{\"在执行 \"}<_components.code>{\"build --platform\"}</_components.code>{\" 后会按照以下顺序触发 Hooks：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"registerBuildPlatform\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"beforeBuildPlatform\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"buildPlatform\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"afterBuildPlatform\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"registerbuildplatform\"><_components.code>{\"registerBuildPlatform\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#registerbuildplatform\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"获取在执行 \"}<_components.code>{\"build --platform\"}</_components.code>{\" 命令时候需要运行的任务信息。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      registerBuildPlatform(): RegisterBuildPlatformResult {\\n        // ...\\n        return {\\n          platform: 'stroybook',\\n          build() {\\n            // run storybook logic\\n          },\\n        };\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"入参和返回的参数类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export interface RegisterBuildPlatformResult {\\n  platform: string | string[];\\n  build: (\\n    currentPlatform: string, // 当前运行的 platform 构建任务\\n    context: { isTsProject: boolean },\\n  ) => void | Promise<void>;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"beforebuildplatform\"><_components.code>{\"beforeBuildPlatform\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#beforebuildplatform\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当执行 \"}<_components.code>{\"build --platform\"}</_components.code>{\" 命令的时候，会触发所有已注册的构建任务。\"}<_components.code>{\"beforeBuildPlatform\"}</_components.code>{\" 会在执行整体的构建任务之前触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      beforeBuildPlatform(platforms: RegisterBuildPlatformResult[]): void {\\n        console.info(`have ${platforms.length} platform tasks`);\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"入参和返回的参数类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export interface RegisterBuildPlatformResult {\\n  platform: string | string[];\\n  build: (\\n    currentPlatform: string, // 当前运行的 platform 构建任务\\n    context: { isTsProject: boolean },\\n  ) => void | Promise<void>;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"buildplatform\"><_components.code>{\"buildPlatform\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#buildplatform\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当执行 \"}<_components.code>{\"build --platform\"}</_components.code>{\" 命令的时候，会触发所有已注册的构建任务。\"}<_components.code>{\"buildPlatform\"}</_components.code>{\" 会在每个构建任务执行之前触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      buildPlatform({ platform }: Options): void {\\n        console.info(`current task is ${platform}`);\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"入参和返回的参数类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export interface Options {\\n  platform: string;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"afterbuildplatform\"><_components.code>{\"afterBuildPlatform\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#afterbuildplatform\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当执行 \"}<_components.code>{\"build --platform\"}</_components.code>{\" 命令的时候，会触发所有已注册的构建任务。\"}<_components.code>{\"afterBuildPlatform\"}</_components.code>{\" 会在整体 platform 构建任务结束后触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      afterBuildPlatform(result: BuildPlatformResult): void {\\n        if (result.status === 'success') {\\n          console.info(`all platform build task success`);\\n        } else {\\n          console.error(result.message);\\n        }\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"入参和返回的参数类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export interface BuildPlatformResult {\\n  status: 'success' | 'fail';\\n  message: string | Error | null;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"调试钩子\">{\"调试钩子\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#调试钩子\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"在执行 \"}<_components.code>{\"dev\"}</_components.code>{\" 命令的时候，会按照顺序触发以下 Hooks：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"registerDev\"}</_components.code>{\": 在获取调试功能信息的时候触发。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"beforeDev\"}</_components.code>{\": 开始执行调试整体流程之前触发。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"beforeDevMenu\"}</_components.code>{\": 出现调试列表/菜单之前触发。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"afterDevMenu\"}</_components.code>{\": 选择调试列表/菜单选项后触发。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"beforeDevTask\"}</_components.code>{\": 执行调试任务之前触发。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"afterDev\"}</_components.code>{\": 执行 dev 整体流程最后触发。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"registerdev\"><_components.code>{\"registerDev\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#registerdev\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"注册调试工具相关的数据。主要包含：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"调试工具的名称\"}</_components.li>{\"\\n\"}<_components.li>{\"显示在菜单列表中的项目名称以及对应的值。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"dev\"}</_components.code>{\" 子命令的定义。\"}</_components.li>{\"\\n\"}<_components.li>{\"是否在运行调试任务之前执行源码构建\"}</_components.li>{\"\\n\"}<_components.li>{\"执行调试任务的函数。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      registerDev() {\\n        return {\\n          // 调试工具名称\\n          name: 'storybook',\\n          // 菜单显示内容\\n          menuItem: {\\n            name: 'Storybook',\\n            value: 'storybook',\\n          },\\n          // 定义的 dev 子命令\\n          subCommands: ['storybook', 'story'],\\n          async action() {\\n            // dev logic\\n          },\\n        };\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"入参和返回的参数类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export interface DevToolData {\\n  name: string;\\n  subCommands?: string[];\\n  menuItem?: {\\n    name: string;\\n    value: string;\\n  };\\n  action: (\\n    options: { port?: string },\\n    context: { isTsProject?: boolean },\\n  ) => void | Promise<void>;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"beforedev\"><_components.code>{\"beforeDev\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#beforedev\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"在收集完所有调试工具元数据后，执行 dev 任务之前触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      beforeDev(metas: DevToolData[]) {\\n        console.info(`have ${metas.length} dev tools`);\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"入参和返回的参数类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export interface DevToolData {\\n  name: string;\\n  subCommands?: string[];\\n  menuItem?: {\\n    name: string;\\n    value: string;\\n  };\\n  action: (\\n    options: { port?: string },\\n    context: { isTsProject?: boolean },\\n  ) => void | Promise<void>;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"beforeafterdevmenu\"><_components.code>{\"(before|after)DevMenu\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#beforeafterdevmenu\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"beforeDevMenu\"}</_components.code>{\" 在出现调试列表/菜单之前触发。接收 \"}<_components.a href=\"https://github.com/SBoudrias/Inquirer.js#question\" target=\"_blank\" rel=\"noopener noreferrer\">{\"inquirer question\"}</_components.a>{\" 作为参数。默认值为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"const question = [\\n  {\\n    name: 'choiceDevTool',\\n    message: '选择调试工具',\\n    type: 'list',\\n    // 注册的调试信息\\n    choices,\\n  },\\n];\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"afterDevMenu\"}</_components.code>{\" 选择调试列表/菜单选项后触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      beforeDevMenu(questions) {\\n        questions[0].message += '!';\\n        return questions; // required\\n      },\\n      afterDevMenu(options: Options) {\\n        console.info(`choise ${options.result.choiceDevTool} dev tools`);\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"入参和返回的参数类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export type { QuestionCollection } from 'inquirer';\\n\\nexport interface Options {\\n  result: PromptResult;\\n  devTools: DevToolData[];\\n}\\n\\nexport type PromptResult = { choiceDevTool: string };\\nexport interface DevToolData {\\n  name: string;\\n  subCommands?: string[];\\n  menuItem?: {\\n    name: string;\\n    value: string;\\n  };\\n  action: (\\n    options: { port?: string },\\n    context: { isTsProject?: boolean },\\n  ) => void | Promise<void>;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"beforedevtask\"><_components.code>{\"beforeDevTask\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#beforedevtask\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"执行调试任务之前触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      beforeDevTask(currentDevData: DevToolData) {\\n        console.info(`${currentDevData.name} running`);\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"入参和返回的参数类型：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export interface DevToolData {\\n  name: string;\\n  subCommands?: string[];\\n  menuItem?: {\\n    name: string;\\n    value: string;\\n  };\\n  action: (\\n    options: { port?: string },\\n    context: { isTsProject?: boolean },\\n  ) => void | Promise<void>;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"afterdev\"><_components.code>{\"afterDev\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#afterdev\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"在中断调试任务进程时触发。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup() {\\n    return {\\n      afterDev() {\\n        console.info(`exit!`);\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","ul","li","code","h2","h3","pre","blockquote","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}