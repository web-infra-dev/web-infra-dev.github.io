{"version":3,"file":"static/js/async/docs_en_plugins_guide_setup-function_mdx.4fc35840.js","sources":["./docs/en/plugins/guide/setup-function.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fplugins%2Fguide%2Fsetup-function.mdx\"] = {\"toc\":[{\"text\":\"Plugin API objects\",\"id\":\"plugin-api-objects\",\"depth\":2},{\"text\":\"api.useAppContext\",\"id\":\"apiuseappcontext\",\"depth\":3},{\"text\":\"api.useResolvedConfigContext\",\"id\":\"apiuseresolvedconfigcontext\",\"depth\":3},{\"text\":\"api.useHookRunners\",\"id\":\"apiusehookrunners\",\"depth\":3},{\"text\":\"Asynchronous setup\",\"id\":\"asynchronous-setup\",\"depth\":2},{\"text\":\"Life cycle hooks\",\"id\":\"life-cycle-hooks\",\"depth\":2}],\"title\":\"Setup function\",\"frontmatter\":{\"sidebar_position\":3}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        h2: \"h2\",\n        pre: \"pre\",\n        h3: \"h3\",\n        div: \"div\",\n        ul: \"ul\",\n        li: \"li\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"setup-function\">{\"Setup function\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#setup-function\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"In the \"}<_components.a href=\"/plugins/guide/plugin-object\">{'\"Plugin object\"'}</_components.a>{\" section we know that the plugin object contains a \"}<_components.code>{\"setup\"}</_components.code>{\" function that not only contains an \"}<_components.code>{\"api\"}</_components.code>{\" object parameter, but also returns a Hooks object.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"plugin-api-objects\">{\"Plugin API objects\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#plugin-api-objects\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"setup\"}</_components.code>{\" function of the plugin will provide an \"}<_components.code>{\"api\"}</_components.code>{\" object parameter, and you can call some of the methods provided on this object to get information about the configuration, project context, etc.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  setup(api) {\\n    // Get the original configuration of the application\\n    const config = api.useConfigContext();\\n    // Get the application runtime context\\n    const appContext = api.useAppContext();\\n    // Get the final configuration after resolving\\n    const resolvedConfig = api.useResolvedConfigContext();\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"apiuseappcontext\"><_components.code>{\"api.useAppContext\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#apiuseappcontext\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Used to get project context information.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"const useAppContext: () => IAppContext;\\n\\ninterface IAppContext {\\n  appDirectory: string;\\n  configFile: string | false;\\n  packageName: string;\\n  nodeModulesDirectory: string;\\n  internalDirectory: string;\\n  plugins: {\\n    cli?: any;\\n    server?: any;\\n  }[];\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"We can see through the actual type file that there are other fields, but the only ones that make sense for the module project at the moment are the above. api object other methods are the same.\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"apiuseresolvedconfigcontext\"><_components.code>{\"api.useResolvedConfigContext\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#apiuseresolvedconfigcontext\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Used to get the final configuration after parsing.\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"If you need to get the build-related final configuration, you need to use the \"}<_components.a href=\"/\"><_components.code>{\"beforeBuild\"}</_components.code></_components.a>{\" Hook.\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"const useResolvedConfigContext: () => NormalizedConfig;\\n\\ninterface NormalizedConfig {\\n  buildConfig: PartialBuildConfig;\\n  buildPreset: BuildPreset;\\n  dev: Dev;\\n  plugins: PluginConfig;\\n  runtime: RuntimeConfig;\\n  runtimeByEntries?: RuntimeByEntriesConfig;\\n  _raw: UserConfig;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"apiusehookrunners\"><_components.code>{\"api.useHookRunners\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#apiusehookrunners\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Used to get the executors of Hooks and trigger the execution of a specific Hook.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { CliPlugin } from '@modern-js/core';\\n\\nexport const myPlugin = (): CliPlugin => ({\\n  name: 'my-plugin',\\n\\n  async setup(api) {\\n    const hookRunners = api.useHookRunners();\\n    // trigger the afterBuild Hook\\n    await hookRunners.afterBuild();\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"asynchronous-setup\">{\"Asynchronous setup\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#asynchronous-setup\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"The setup of a CLI plugin can be an asynchronous function that performs asynchronous logic during the initialization process.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'my-plugin',\\n\\n  async setup(api) {\\n    await doSomething();\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"life-cycle-hooks\">{\"Life cycle hooks\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#life-cycle-hooks\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"We know that the \"}<_components.code>{\"setup\"}</_components.code>{\" function returns a Hooks object, which can also be understood as an object with Module Tools lifecycle hooks.\"}</_components.p>{\"\\n\"}<_components.p>{\"Currently there are two main types of hooks.\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"build hooks: triggered only when the \"}<_components.code>{\"build\"}</_components.code>{\" command is executed to build the source code product.\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"buildPlatform\"}</_components.code>{\" hook: triggered only when the \"}<_components.code>{\"build --platform\"}</_components.code>{\" command is executed to generate other build products.\"}</_components.li>{\"\\n\"}<_components.li>{\"debug hooks: hooks that are triggered when running the \"}<_components.code>{\"dev\"}</_components.code>{\" command.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"See the \"}<_components.a href=\"/en/api/plugin-api/plugin-hooks\">{\"API documentation\"}</_components.a>{\" for a full list of lifecycle hooks.\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","h2","pre","h3","div","ul","li","components","id","className","href","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"0OAAA,E,mDAGA,SAASA,EAAkBC,CAAK,EAC5B,IAAMC,EAAcC,OAAOC,MAAM,CAAC,CAC9BC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,IAAK,MACLC,GAAI,KACJC,IAAK,MACLC,GAAI,KACJC,GAAI,IACR,EAAG,yBAAsBb,EAAMc,UAAU,EACzC,MAAO,uB,UAAE,WAACb,EAAYG,EAAE,EAACW,GAAG,iB,UAAkB,iBAAiB,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,kB,SAAmB,G,MAAsC,KAAK,WAAChB,EAAYK,CAAC,E,UAAE,UAAU,UAACL,EAAYI,CAAC,EAACY,KAAK,+B,SAAgC,iB,GAAmC,sDAAsD,UAAChB,EAAYM,IAAI,E,SAAE,O,GAA4B,uCAAuC,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,sD,GAAuE,KAAK,WAACN,EAAYO,EAAE,EAACO,GAAG,qB,UAAsB,qBAAqB,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,sB,SAAuB,G,MAAsC,KAAK,WAAChB,EAAYK,CAAC,E,UAAE,OAAO,UAACL,EAAYM,IAAI,E,SAAE,O,GAA4B,2CAA2C,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,oJ,GAAqK,KAAK,UAACN,EAAYQ,GAAG,E,SAAC,UAACR,EAAYM,IAAI,EAACS,UAAU,c,SAAe,8Z,KAAqc,KAAK,WAACf,EAAYS,EAAE,EAACK,GAAG,mB,UAAmB,UAACd,EAAYM,IAAI,E,SAAE,mB,GAAuC,UAACN,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,oB,SAAqB,G,MAAsC,KAAK,UAAChB,EAAYK,CAAC,E,SAAE,0C,GAA4D,KAAK,UAACL,EAAYQ,GAAG,E,SAAC,UAACR,EAAYM,IAAI,EAACS,UAAU,c,SAAe,iR,KAAwT,KAAK,WAACf,EAAYU,GAAG,EAACK,UAAU,wB,UAAwB,UAACf,EAAYU,GAAG,EAACK,UAAU,yB,SAA0B,M,GAAyB,UAACf,EAAYU,GAAG,EAACK,UAAU,2B,SAA2B,UAACf,EAAYK,CAAC,E,SAAE,mM,QAAyP,KAAK,WAACL,EAAYS,EAAE,EAACK,GAAG,8B,UAA8B,UAACd,EAAYM,IAAI,E,SAAE,8B,GAAkD,UAACN,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,+B,SAAgC,G,MAAsC,KAAK,UAAChB,EAAYK,CAAC,E,SAAE,oD,GAAsE,KAAK,WAACL,EAAYU,GAAG,EAACK,UAAU,wB,UAAwB,UAACf,EAAYU,GAAG,EAACK,UAAU,yB,SAA0B,M,GAAyB,UAACf,EAAYU,GAAG,EAACK,UAAU,2B,SAA2B,WAACf,EAAYK,CAAC,E,UAAE,iFAAiF,UAACL,EAAYI,CAAC,EAACY,KAAK,I,SAAI,UAAChB,EAAYM,IAAI,E,SAAE,a,KAAkD,W,QAAgE,KAAK,UAACN,EAAYQ,GAAG,E,SAAC,UAACR,EAAYM,IAAI,EAACS,UAAU,c,SAAe,oS,KAA2U,KAAK,WAACf,EAAYS,EAAE,EAACK,GAAG,oB,UAAoB,UAACd,EAAYM,IAAI,E,SAAE,oB,GAAwC,UAACN,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,qB,SAAsB,G,MAAsC,KAAK,UAAChB,EAAYK,CAAC,E,SAAE,kF,GAAoG,KAAK,UAACL,EAAYQ,GAAG,E,SAAC,UAACR,EAAYM,IAAI,EAACS,UAAU,c,SAAe,qR,KAA4T,KAAK,WAACf,EAAYO,EAAE,EAACO,GAAG,qB,UAAsB,qBAAqB,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,sB,SAAuB,G,MAAsC,KAAK,UAAChB,EAAYK,CAAC,E,SAAE,+H,GAAiJ,KAAK,UAACL,EAAYQ,GAAG,E,SAAC,UAACR,EAAYM,IAAI,EAACS,UAAU,c,SAAe,+I,KAAsL,KAAK,WAACf,EAAYO,EAAE,EAACO,GAAG,mB,UAAoB,mBAAmB,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,oB,SAAqB,G,MAAsC,KAAK,WAAChB,EAAYK,CAAC,E,UAAE,oBAAoB,UAACL,EAAYM,IAAI,E,SAAE,O,GAA4B,iH,GAAkI,KAAK,UAACN,EAAYK,CAAC,E,SAAE,8C,GAAgE,KAAK,WAACL,EAAYW,EAAE,E,UAAE,KAAK,WAACX,EAAYY,EAAE,E,UAAE,wCAAwC,UAACZ,EAAYM,IAAI,E,SAAE,O,GAA4B,yD,GAA2E,KAAK,WAACN,EAAYY,EAAE,E,UAAC,UAACZ,EAAYM,IAAI,E,SAAE,e,GAAoC,kCAAkC,UAACN,EAAYM,IAAI,E,SAAE,kB,GAAuC,yD,GAA2E,KAAK,WAACN,EAAYY,EAAE,E,UAAE,0DAA0D,UAACZ,EAAYM,IAAI,E,SAAE,K,GAA0B,Y,GAA8B,K,GAAuB,KAAK,WAACN,EAAYK,CAAC,E,UAAE,WAAW,UAACL,EAAYI,CAAC,EAACY,KAAK,kC,SAAmC,mB,GAAqC,uC,KACt2M,CAjBA,GAAAC,UAAA,EAAWC,mBAAmB,EAA9B,GAAWA,mBAAmB,CAAK,CAAC,GACpCD,WAAWC,mBAAmB,CAAC,4CAA4C,CAAG,CAAC,IAAM,CAAC,CAAC,KAAO,qBAAqB,GAAK,qBAAqB,MAAQ,CAAC,EAAE,CAAC,KAAO,oBAAoB,GAAK,mBAAmB,MAAQ,CAAC,EAAE,CAAC,KAAO,+BAA+B,GAAK,8BAA8B,MAAQ,CAAC,EAAE,CAAC,KAAO,qBAAqB,GAAK,oBAAoB,MAAQ,CAAC,EAAE,CAAC,KAAO,qBAAqB,GAAK,qBAAqB,MAAQ,CAAC,EAAE,CAAC,KAAO,mBAAmB,GAAK,mBAAmB,MAAQ,CAAC,EAAE,CAAC,MAAQ,iBAAiB,YAAc,CAAC,iBAAmB,CAAC,CAAC,EAqB3iB,MAJA,W,IAAoBnB,EAAQ,UAAR,6CAAQ,CAAC,EACRoB,EAAc,AAAAlB,OAAOC,MAAM,CAAC,CAAC,EAAG,yBAAsBH,EAAMc,UAAU,EAA/EO,OAAO,CACf,OAAOD,EAAY,UAACA,EAAA,mBAAcpB,GAAA,C,SAAO,UAACD,EAAA,KAAAuB,CAAA,AAAAA,EAAA,GAAsBtB,G,IAAuBD,EAAkBC,EAC7G,C"}