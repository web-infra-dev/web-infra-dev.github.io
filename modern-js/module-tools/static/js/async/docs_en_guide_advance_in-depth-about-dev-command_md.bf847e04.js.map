{"version":3,"file":"static/js/async/docs_en_guide_advance_in-depth-about-dev-command_md.bf847e04.js","sources":["./docs/en/guide/advance/in-depth-about-dev-command.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fguide%2Fadvance%2Fin-depth-about-dev-command.md\"] = {\"toc\":[{\"text\":\"The overall flow of the command run\",\"id\":\"the-overall-flow-of-the-command-run\",\"depth\":2},{\"text\":\"Extending the dev command\",\"id\":\"extending-the-dev-command\",\"depth\":2}],\"title\":\"In-depth understanding of the dev command\",\"frontmatter\":{\"sidebar_position\":2}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        h2: \"h2\",\n        ol: \"ol\",\n        li: \"li\",\n        ul: \"ul\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"in-depth-understanding-of-the-dev-command\">{\"In-depth understanding of the dev command\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#in-depth-understanding-of-the-dev-command\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"dev\"}</_components.code>{\" command provided by the module project is mainly used for debugging the code.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"the-overall-flow-of-the-command-run\">{\"The overall flow of the command run\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#the-overall-flow-of-the-command-run\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.ol>{\"\\n\"}<_components.li>{\"When the \"}<_components.code>{\"dev\"}</_components.code>{\" command is executed, Module Tools starts looking for debugging tools or tasks that can be executed. A debugging tool or task is a Module Tools debugging tool plugin like Storybook.\"}</_components.li>{\"\\n\"}<_components.li>{\"When a debugging tool is found, it is executed immediately.\"}</_components.li>{\"\\n\"}<_components.li>{\"When multiple debugging tools are found, the debugging tools list menu is displayed. A debug tool can be started by selecting the name option corresponding to it.\"}</_components.li>{\"\\n\"}<_components.li>{\"When no debug tool is found, the user is informed that no debug tool is available.\"}</_components.li>{\"\\n\"}</_components.ol>{\"\\n\"}<_components.p>{\"In addition to the \"}<_components.code>{\"dev\"}</_components.code>{\" command, you can also start a debugging tool or task directly by using the \"}<_components.code>{\"dev [debug tool name]\"}</_components.code>{\" option.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"extending-the-dev-command\">{\"Extending the dev command\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#extending-the-dev-command\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"If you need to extend the dev command, or rather provide your own Module Tools debugging tool plugin, then you will need to know the following first.\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.a href=\"/plugins/guide/getting-started\">{\"Development of plugins\"}</_components.a></_components.li>{\"\\n\"}<_components.li><_components.a href=\"/api/plugin-api/plugin-hooks#dev-hooks\">{\"Debugging Tools Plugin API\"}</_components.a></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"In general, the code to implement a debugging tool that does nothing and the associated configuration is as follows.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"do-nothing.ts\">{\"export const myPlugin = (): CliPlugin<ModuleTools> => ({\\n  name: 'do-nothing',\\n  setup() {\\n    return {\\n      registerDev() {\\n        return {\\n          // Debugging tool name\\n          name: 'do-nothing',\\n          // Menu display content\\n          menuItem: {\\n            name: 'DoNothing',\\n            value: 'do-nothing',\\n          },\\n          // The defined dev subcommand\\n          subCommands: ['donothing', 'dn'],\\n          async action() {\\n            // dev logic\\n            console.info('Run build --watch, and do nothing.');\\n          },\\n        };\\n      },\\n    };\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"If this debugging tool plugin is required, it needs to be added to the configuration file.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import doNothingPlugin from './plugins/do-nothing';\\n\\nexport default defineConfig({\\n  plugins: [\\n    //..\\n    doNothingPlugin()\\n  ],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"At this point we can execute it when we execute the \"}<_components.code>{\"dev\"}</_components.code>{\" or \"}<_components.code>{\"dev do-nothing\"}</_components.code>{\" command. After execution, it will first execute the source build task in listening mode and print the log messages immediately afterwards.\"}</_components.p>{\"\\n\"}<_components.p>{\"For currently officially supported debugging tools and third-party supported debugging tools, you can view them in \"}<_components.a href=\"/plugins/official-list/overview\">{\"plugins list\"}</_components.a>{\".\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","h2","ol","li","ul","pre","components","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}