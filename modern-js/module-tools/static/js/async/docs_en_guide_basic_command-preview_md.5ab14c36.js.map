{"version":3,"file":"static/js/async/docs_en_guide_basic_command-preview_md.5ab14c36.js","sources":["./docs/en/guide/basic/command-preview.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fguide%2Fbasic%2Fcommand-preview.md\"] = {\"toc\":[{\"text\":\"modern build\",\"id\":\"modern-build\",\"depth\":2},{\"text\":\"modern new\",\"id\":\"modern-new\",\"depth\":2},{\"text\":\"modern dev\",\"id\":\"modern-dev\",\"depth\":2},{\"text\":\"modern test\",\"id\":\"modern-test\",\"depth\":2},{\"text\":\"modern lint\",\"id\":\"modern-lint\",\"depth\":2},{\"text\":\"modern change\",\"id\":\"modern-change\",\"depth\":2},{\"text\":\"modern pre\",\"id\":\"modern-pre\",\"depth\":2},{\"text\":\"modern bump\",\"id\":\"modern-bump\",\"depth\":2},{\"text\":\"modern release\",\"id\":\"modern-release\",\"depth\":2},{\"text\":\"modern gen-release-note\",\"id\":\"modern-gen-release-note\",\"depth\":2},{\"text\":\"modern upgrade\",\"id\":\"modern-upgrade\",\"depth\":2}],\"title\":\"CLI Commands\",\"frontmatter\":{\"sidebar_position\":2}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        code: \"code\",\n        pre: \"pre\",\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        div: \"div\",\n        em: \"em\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"cli-commands\">{\"CLI Commands\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#cli-commands\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"CLI Commands available for Module Tools projects are as follows:\"}</_components.p>{\"\\n\"}<_components.h2 id=\"modern-build\"><_components.code>{\"modern build\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-build\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{'Usage: modern build [options]\\n\\nBuild module command\\n\\nOptions:\\n  -w, --watch Build code in listening mode\\n  --tsconfig [tsconfig] Specify the path to the tsconfig.json file (default:\\n                         \". /tsconfig.json\")\\n  --platform [platform] Build products for all or specified platforms\\n  --no-dts disables DTS type file generation and type checking\\n  --no-clear disables automatic clearing of output directories\\n  -h, --help Show information about the current command\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"When you want to start a project build, you can execute the \"}<_components.code>{\"modern build\"}</_components.code>{\" command. When using this command, we can:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"When wanting to start a build in watch mode, use the \"}<_components.code>{\"--watch\"}</_components.code>{\" option.\"}</_components.li>{\"\\n\"}<_components.li>{\"When you want to specify the path to the TypeScript configuration file read by the project build, use \"}<_components.code>{\"-build --tsconfig . /path/config.json\"}</_components.code>{\" option. This option overrides all \"}<_components.a href=\"/api/config/build-config\"><_components.code>{\"buildConfig\"}</_components.code></_components.a>{\" configurations in \"}<_components.a href=\"/api/config/build-config\"><_components.code>{\"dts.tsconfigPath\"}</_components.code></_components.a>{\".\"}</_components.li>{\"\\n\"}<_components.li>{\"The \"}<_components.code>{\"-no-dts\"}</_components.code>{\" option can be used when the DTS type file generation and type checking behavior of the project needs to be turned off. \"}<_components.strong>{\"Note: The generation of type files depends on the results of type checking. If type checking is turned off, then type files will not be generated either\"}</_components.strong>{\".\"}</_components.li>{\"\\n\"}<_components.li>{\"The \"}<_components.code>{\"--no-clear\"}</_components.code>{\" option can be used when the automatic clearing of the output directory needs to be turned off.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"In addition to the above, module projects also support \"}<_components.code>{\"platform\"}</_components.code>{\" build mode, which can be used to perform build tasks for other tools. For example, it is currently officially supported to start a Storybook build task to generate Storybook artifacts by executing the \"}<_components.code>{\"modern build --platform\"}</_components.code>{\" or \"}<_components.code>{\"modern build --platform storybook\"}</_components.code>{\" commands after installing the \"}<_components.code>{\"@modern-js/plugin-storybook\"}</_components.code>{\" plugin.\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"When executing a Storybook build, if you need to read the build artifacts of the project. Then \"}<_components.strong>{\"don't forget to execute the \"}<_components.code>{\"modern build\"}</_components.code>{\" command to ensure the existence of the project's build artifacts before executing the \"}<_components.code>{\"modern build --platform\"}</_components.code>{\" command to start the Storybook build\"}</_components.strong>{\".\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"modern-new\"><_components.code>{\"modern new\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-new\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"Usage: modern new [options]\\n\\nExecute the generator in a modular project scenario\\n\\nOptions:\\n  -d, --debug Enable Debug mode, print debug log messages (default: false)\\n  -c, --config <config> Generators run default configuration (JSON string)\\n  --dist-tag <tag> Generator uses a special version of npm Tag\\n  --registry customize npm Registry during generator runtime\\n  -h, --help display help for command\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"modern new\"}</_components.code>{\" command is used to start the microgenerator functionality, which enables features for the project that are not provided by default.\"}</_components.p>{\"\\n\"}<_components.p>{\"The following features can currently be enabled.\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Testing support\"}</_components.li>{\"\\n\"}<_components.li>{\"Storybook debugging\"}</_components.li>{\"\\n\"}<_components.li>{\"Tailwind CSS support\"}</_components.li>{\"\\n\"}<_components.li>{\"Modern.js Runtime API\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"You can learn more about these features in the \"}<_components.a href=\"/guide/basic/use-micro-generator\">{\"Using the micro generator\"}</_components.a>{\" section.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"modern-dev\"><_components.code>{\"modern dev\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-dev\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"Usage: modern dev [options]\\n\\nLocal development commands\\n\\nOptions:\\n  -h, --help display help for command\\n\\nCommands:\\n[dev-tools-subCommand]\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The Module Tools provides the ability to use debugging tools, which can be started with the \"}<_components.code>{\"modern dev\"}</_components.code>{\" command. Note, however, that no debugging-related plugins are provided by default, so executing \"}<_components.code>{\"modern dev\"}</_components.code>{\" will prompt: \"}<_components.em>{'\"No dev tools found available \"'}</_components.em>{\".\"}</_components.p>{\"\\n\"}<_components.p>{\"The officially supported debugging tool is \"}<_components.a href=\"https://storybook.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Storybook\"}</_components.a>{\", so you can run \"}<_components.code>{\"modern dev\"}</_components.code>{\" or \"}<_components.code>{\"modern dev storybook\"}</_components.code>{\" to execute it after you run \"}<_components.code>{\"modern new\"}</_components.code>{\" to enable it.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"modern-test\"><_components.code>{\"modern test\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-test\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"Usage: modern test [options]\\n\\nOptions:\\n  -h, --help display help for command\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"You need to execute \"}<_components.code>{\"modern new\"}</_components.code>{\" to turn on the test function before you can execute the \"}<_components.code>{\"modern test\"}</_components.code>{\" command.\\nThe \"}<_components.code>{\"modern test\"}</_components.code>{\" command will automatically run the \"}<_components.code>{\"src/tests/*.test.(js|ts|jsx|tsx)\"}</_components.code>{\" file as a test case.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"modern-lint\"><_components.code>{\"modern lint\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-lint\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"Usage: modern lint [options] [. .files]\\n\\nlint and fix source files\\n\\nOptions:\\n  --no-fix disable auto fix source file\\n  -h, --help display help for command\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Run \"}<_components.a href=\"https://eslint.org/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"ESLint\"}</_components.a>{\" to check the syntax of the code. Usually, we only need to check the part of the code that was changed in this commit with \"}<_components.a href=\"https://github.com/okonet/lint-staged\" target=\"_blank\" rel=\"noopener noreferrer\">{\"lint-staged\"}</_components.a>{\" during the \"}<_components.code>{\"-git commit\"}</_components.code>{\" phase.\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"The \"}<_components.code>{\"-no-fix\"}</_components.code>{\" argument turns off the ability to automatically fix lint error code.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"modern-change\"><_components.code>{\"modern change\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-change\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"Usage: modern change [options]\\n\\nCreate a changeset\\n\\nOptions:\\n  --empty Create an empty changeset (default: false)\\n  --open Open the created changeset in the editor (default: false)\\n  -h, --help display help for command\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"modern change\"}</_components.code>{\" command is used to generate the required Markdown file for \"}<_components.a href=\"https://github.com/changesets/changesets\" target=\"_blank\" rel=\"noopener noreferrer\">{\"changesets\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.h2 id=\"modern-pre\"><_components.code>{\"modern pre\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-pre\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"Usage: modern pre [options] <enter|exit> [tag]\\n\\nEntering and exiting pre-publishing mode\\n\\nOptions:\\n  -h, --help display help for command\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"You can use the \"}<_components.code>{\"modern pre\"}</_components.code>{\" command to \"}<_components.a href=\"https://github.com/atlassian/changesets/blob/main/docs/prereleases.md\" target=\"_blank\" rel=\"noopener noreferrer\">{\"pre-release\"}</_components.a>{\" a version before the official release.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"modern-bump\"><_components.code>{\"modern bump\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-bump\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{'Usage: modern bump [options]\\n\\nUse changesets to automatically update releases and changelogs\\n\\nOptions:\\n  --canary Create a pre-release for testing (default: false)\\n  --preid <tag> Specify an identifier when versioning a pre-release (default: \"next\")\\n  --snapshot Create a special version for testing (default: false)\\n  -h, --help display help for command\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Modify the version number in \"}<_components.code>{\"package.json\"}</_components.code>{\" according to the Markdown file of the changelog generated by \"}<_components.a href=\"https://github.com/changesets/changesets\" target=\"_blank\" rel=\"noopener noreferrer\">{\"changesets\"}</_components.a>{\", and generate the \"}<_components.code>{\"CHANGELOG.md\"}</_components.code>{\" file.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"modern-release\"><_components.code>{\"modern release\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-release\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{'Usage: modern release [options]\\n\\nRelease npm packages\\n\\nOptions:\\n  --tag <tag> Release npm packages with a specific tag (default: \"\")\\n  --ignore-scripts release ignores the scripts command in package.json, only supported in pnpm monorepo\\n                    (default: \"\")\\n  -h, --help display help for command\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"-modern release\"}</_components.code>{\" command releases the module to the \"}<_components.a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"npm Registry\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"The \"}<_components.code>{\"-tag\"}</_components.code>{\" argument specifies the specific \"}<_components.a href=\"https://docs.npmjs.com/adding-dist-tags-to-packages\" target=\"_blank\" rel=\"noopener noreferrer\">{\"dist tags\"}</_components.a>{\" to be used for the release.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"modern-gen-release-note\"><_components.code>{\"modern gen-release-note\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-gen-release-note\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"Usage: modern gen-release-note [options]\\n\\nGenerate Release Note based on current repository changeset information\\n\\nOptions:\\n  --repo <repo> The name of the repository to generate the Pull Request link, e.g.: web-infra-dev/modern.js\\n  --custom <cumtom> Custom Release Note generation function\\n  -h, --help display help for command\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Automatically generate \"}<_components.a href=\"https://en.wikipedia.org/wiki/Release_notes\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Release Note\"}</_components.a>{\" based on the changeset information of the current repository.\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"needs to be executed before the \"}<_components.code>{\"bump\"}</_components.code>{\" command.\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"modern-upgrade\"><_components.code>{\"modern upgrade\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#modern-upgrade\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{'Usage: modern upgrade [options]\\n\\nUpgrade Modern.js to the latest version\\n\\nOptions:\\n  --registry <registry> customize npm registry (default: \"\")\\n  -d,--debug Enable Debug mode to print debug log messages (default: false)\\n  --cwd <cwd> project path (default: \"\")\\n  -h, --help display help for command\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"The \"}<_components.code>{\"modern upgrade\"}</_components.code>{\" command is used to upgrade the project Modern.js related dependencies to the latest version.\"}</_components.p>{\"\\n\"}<_components.p>{\"Executing the command \"}<_components.code>{\"npx modern upgrade\"}</_components.code>{\" in the project root directory will update the Modern.js dependencies in \"}<_components.code>{\"package.json\"}</_components.code>{\" of the currently executing project to the latest version by default.\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","code","pre","ul","li","strong","div","em","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}