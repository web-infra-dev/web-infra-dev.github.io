{"version":3,"file":"static/js/async/docs_zh_guide_advance_in-depth-about-build_md.5810d078.js","sources":["./docs/zh/guide/advance/in-depth-about-build.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Fadvance%2Fin-depth-about-build.md\"] = {\"toc\":[{\"text\":\"buildConfig\",\"id\":\"buildconfig\",\"depth\":2},{\"text\":\"bundle / bundleless\",\"id\":\"bundle--bundleless\",\"depth\":3},{\"text\":\"input / sourceDir\",\"id\":\"input--sourcedir\",\"depth\":3},{\"text\":\"dts\",\"id\":\"dts\",\"depth\":3},{\"text\":\"关闭类型生成\",\"id\":\"关闭类型生成\",\"depth\":4},{\"text\":\"打包类型文件\",\"id\":\"打包类型文件\",\"depth\":4},{\"text\":\"别名转换\",\"id\":\"别名转换\",\"depth\":4},{\"text\":\"一些示例\",\"id\":\"一些示例\",\"depth\":4},{\"text\":\"define\",\"id\":\"define\",\"depth\":3},{\"text\":\"环境变量替换\",\"id\":\"环境变量替换\",\"depth\":4},{\"text\":\"全局变量替换\",\"id\":\"全局变量替换\",\"depth\":4},{\"text\":\"构建过程\",\"id\":\"构建过程\",\"depth\":2},{\"text\":\"构建报错\",\"id\":\"构建报错\",\"depth\":2}],\"title\":\"深入理解构建\",\"frontmatter\":{\"sidebar_position\":1}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        div: \"div\",\n        h2: \"h2\",\n        h3: \"h3\",\n        strong: \"strong\",\n        ul: \"ul\",\n        li: \"li\",\n        h4: \"h4\",\n        pre: \"pre\",\n        blockquote: \"blockquote\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"深入理解构建\">{\"深入理解构建\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#深入理解构建\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{'在 \"基础使用\" 的部分，我们已经知道可以通过 '}<_components.code>{\"buildConfig\"}</_components.code>{\" 配置对项目的输出产物进行修改。\"}<_components.code>{\"buildConfig\"}</_components.code>{\" 不仅描述了产物的一些特性，同时还为构建产物提供了一些功能。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"如果你还不了解 \"}<_components.code>{\"buildConfig\"}</_components.code>{\" 的作用，请先阅读 \"}<_components.a href=\"/guide/basic/modify-output-product\">{\"修改输出产物\"}</_components.a>{\"。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.p>{\"而在本章里我们将要深入理解某些构建配置的作用以及了解执行 \"}<_components.code>{\"modern build\"}</_components.code>{\" 命令的时候发生了什么。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"buildconfig\">{\"buildConfig\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#buildconfig\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"bundle--bundleless\"><_components.code>{\"bundle\"}</_components.code>{\" / \"}<_components.code>{\"bundleless\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#bundle--bundleless\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"那么首先我们来了解一下 bundle 和 bundleless。\"}</_components.p>{\"\\n\"}<_components.p>{\"所谓 bundle 是指对构建产物进行打包，构建产物可能是一个文件，也有可能是基于一定的\"}<_components.a href=\"https://esbuild.github.io/api/#splitting\" target=\"_blank\" rel=\"noopener noreferrer\">{\"代码拆分策略\"}</_components.a>{\"得到的多个文件。\"}</_components.p>{\"\\n\"}<_components.p>{\"而 bundleless 则是指对每个源文件单独进行编译构建，但是并不将它们打包在一起。每一个产物文件都可以找到与之相对应的源码文件。\"}<_components.strong>{\"bundleless 构建的过程，也可以理解为仅对源文件进行代码转换的过程\"}</_components.strong>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"它们有各自的好处：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"bundle 可以减少构建产物的体积，也可以对依赖预打包，减小安装依赖的体积。提前对库进行打包，可以加快应用项目构建的速度。\"}</_components.li>{\"\\n\"}<_components.li>{\"bundleless 则是可以保持原有的文件结构，更有利于调试和 tree shaking。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.div className=\"modern-directive warning\"><_components.div className=\"modern-directive-title\">{\"WARNING\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"bundleless 是单文件编译模式，因此对于类型的引用和导出你需要加上 \"}<_components.code>{\"type\"}</_components.code>{\" 字段， 例如 \"}<_components.code>{\"import type { A } from './types\"}</_components.code>{\"\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.p>{\"在 \"}<_components.code>{\"buildConfig\"}</_components.code>{\" 中可以通过 \"}<_components.a href=\"/api/config/build-config#buildtype\"><_components.code>{\"buildConfig.buildType\"}</_components.code></_components.a>{\" 来指定当前构建任务是 bundle 还是 bundleless。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"input--sourcedir\"><_components.code>{\"input\"}</_components.code>{\" / \"}<_components.code>{\"sourceDir\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#input--sourcedir\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.a href=\"/api/config/build-config#input\"><_components.code>{\"buildConfig.input\"}</_components.code></_components.a>{\" 用于指定读取源码的文件路径或者目录路径，其默认值在 bundle 和 bundleless 构建过程中有所不同：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"当 \"}<_components.code>{\"buildType: 'bundle'\"}</_components.code>{\" 的时候，\"}<_components.code>{\"input\"}</_components.code>{\" 默认值为 \"}<_components.code>{\"src/index.(j|t)sx?\"}</_components.code></_components.li>{\"\\n\"}<_components.li>{\"当 \"}<_components.code>{\"buildType: 'bundleless'\"}</_components.code>{\" 的时候，\"}<_components.code>{\"input\"}</_components.code>{\" 默认值为 \"}<_components.code>{\"['src']\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.div className=\"modern-directive warning\"><_components.div className=\"modern-directive-title\">{\"WARNING\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"建议不要在 bundleless 构建过程中指定多个源码文件目录，这可能会导致产物里的相对路径不正确。\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.p>{\"从默认值上我们可以知道：\"}<_components.strong>{\"bundle 构建一般可以指定文件路径作为构建的入口，而 bundleless 构建则更期望使用目录路径寻找源文件\"}</_components.strong>{\"。\"}</_components.p>{\"\\n\"}<_components.p><_components.a href=\"/api/config/build-config#sourcedir\"><_components.code>{\"sourceDir\"}</_components.code></_components.a>{\" 用于指定源码目录，它主要与以下两个内容有关系：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"类型文件生成\"}</_components.li>{\"\\n\"}<_components.li>{\"指定构建过程中的 \"}<_components.a href=\"https://esbuild.github.io/api/#outbase\" target=\"_blank\" rel=\"noopener noreferrer\"><_components.code>{\"outbase\"}</_components.code></_components.a></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"一般来说：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"在 bundleless 构建过程中，\"}<_components.code>{\"sourceDir\"}</_components.code>{\" 与 \"}<_components.code>{\"input\"}</_components.code>{\" 的值要保持一致，它们的默认值都是 \"}<_components.code>{\"src\"}</_components.code></_components.strong>{\"。\"}</_components.li>{\"\\n\"}<_components.li>{\"在 bundle 构建过程中，无需使用 \"}<_components.code>{\"sourceDir\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"dts\">{\"dts\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#dts\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.a href=\"/api/config/build-config#dts\"><_components.code>{\"buildConfig.dts\"}</_components.code></_components.a>{\" 配置主要用于类型文件的生成。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"关闭类型生成\">{\"关闭类型生成\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#关闭类型生成\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"默认情况下类型生成功能是开启的，如果需要关闭的话，可以按照如下配置：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"modern.config.ts\"'>{\"import { defineConfig } from '@modern-js/module-tools';\\n\\nexport default defineConfig({\\n  buildConfig: {\\n    dts: false,\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"关闭类型文件后，一般来说构建速度会有所提升。\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h4 id=\"打包类型文件\">{\"打包类型文件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#打包类型文件\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"在 \"}<_components.code>{\"buildType: 'bundleless'\"}</_components.code>{\" 的时候，类型文件的生成是使用项目的 \"}<_components.code>{\"tsc\"}</_components.code>{\" 命令来完成生产。\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"模块工程解决方案同时还支持对类型文件进行打包\"}</_components.strong>{\"，不过使用该功能的时候需要注意：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"一些第三方依赖存在错误的语法会导致打包过程失败。因此对于这种情况，需要手动通过 \"}<_components.a href=\"/api/config/build-config#externals\"><_components.code>{\"buildConfig.externals\"}</_components.code></_components.a>{\" 将这类第三方包排除。\"}</_components.li>{\"\\n\"}<_components.li>{\"对于第三方依赖的类型文件指向的是一个 \"}<_components.code>{\".ts\"}</_components.code>{\" 文件的情况，目前无法处理。比如第三方依赖的 \"}<_components.code>{\"package.json\"}</_components.code>{\" 中存在这样的内容： \"}<_components.code>{'{\"types\": \"./src/index.ts\"}'}</_components.code>{\"。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h4 id=\"别名转换\">{\"别名转换\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#别名转换\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"在 bundleless 构建过程中，如果源代码中出现了别名，例如：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"./src/index.ts\"'>{\"import utils from '@common/utils';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"正常来说，使用 \"}<_components.code>{\"tsc\"}</_components.code>{\" 生成的产物类型文件也会包含这些别名。不过 Module Tools 会对 \"}<_components.code>{\"tsc\"}</_components.code>{\" 生成的类型文件里的别名进行转换处理：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"对于类似 \"}<_components.code>{\"import '@common/utils'\"}</_components.code>{\" 或者 \"}<_components.code>{\"import utils from '@common/utils'\"}</_components.code>{\" 这样形式的代码可以进行别名转换。\"}</_components.li>{\"\\n\"}<_components.li>{\"对于类似 \"}<_components.code>{\"export { utils } from '@common/utils'\"}</_components.code>{\" 这样形式的代码可以进行别名转换。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"然而也存在一些情况，目前还无法处理，例如 \"}<_components.code>{\"Promise<import('@common/utils')>\"}</_components.code>{\" 这样形式的输出类型目前无法进行转换。\\n对于这种情况的解决办法，可以参与\"}<_components.a href=\"https://github.com/web-infra-dev/modern.js/discussions/4511\" target=\"_blank\" rel=\"noopener noreferrer\">{\"讨论\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"一些示例\">{\"一些示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#一些示例\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import { defineConfig } from '@modern-js/module-tools';\\n\\nexport default defineConfig({\\n  // 此时打包的类型文件输出路径为 `./dist/types`，并且将会读取项目下的 other-tsconfig.json 文件\\n  buildConfig: {\\n    buildType: 'bundle',\\n    dts: {\\n      tsconfigPath: './other-tsconfig.json',\\n      distPath: './types',\\n    },\\n    outDir: './dist',\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import { defineConfig } from '@modern-js/module-tools';\\n\\nexport default defineConfig({\\n  // 此时类型文件没有进行打包，输出路径为 `./dist/types`\\n  buildConfig: [\\n    {\\n      buildType: 'bundle',\\n      dts: false,\\n      outDir: './dist',\\n    },\\n    {\\n      buildType: 'bundleless',\\n      dts: {\\n        only: true,\\n      },\\n      outDir: './dist/types',\\n    },\\n  ],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"define\"><_components.code>{\"define\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#define\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.a href=\"/api/config/build-config#define\"><_components.code>{\"buildConfig.define\"}</_components.code></_components.a>{\" 功能有些类似 \"}<_components.a href=\"https://webpack.js.org/plugins/define-plugin/\" target=\"_blank\" rel=\"noopener noreferrer\"><_components.code>{\"webpack.DefinePlugin\"}</_components.code></_components.a>{\"。这里介绍几个使用场景：\"}</_components.p>{\"\\n\"}<_components.h4 id=\"环境变量替换\">{\"环境变量替换\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#环境变量替换\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import { defineConfig } from '@modern-js/module-tools';\\nexport default defineConfig({\\n  buildConfig: {\\n    define: {\\n      'process.env.VERSION': JSON.stringify(process.env.VERSION || '0.0.0'),\\n    },\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"通过上面的配置，我们就可以将下面这段代码：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"// 编译前代码\\nconsole.log(process.env.VERSION);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在执行 \"}<_components.code>{\"VERSION=1.0.0 modern build\"}</_components.code>{\" 的时候，转换为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"// 编译后代码\\nconsole.log('1.0.0');\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"全局变量替换\">{\"全局变量替换\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#全局变量替换\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import { defineConfig } from '@modern-js/module-tools';\\nexport default defineConfig({\\n  buildConfig: {\\n    define: {\\n      VERSION: JSON.stringify(require('./package.json').version || '0.0.0'),\\n    },\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"通过上面的配置，我们就可以将下面这段代码：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"// 编译前代码\\nconsole.log(VERSION);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"转换为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"// 编译后代码\\nconsole.log('1.0.0');\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"不过要注意：如果项目是一个 TypeScript 项目，那么你可能需要在项目源代码目录下的 \"}<_components.code>{\".d.ts\"}</_components.code>{\" 文件里增加以下内容：\"}</_components.p>{\"\\n\"}<_components.blockquote>{\"\\n\"}<_components.p>{\"如果不存在 \"}<_components.code>{\"d.ts\"}</_components.code>{\" 文件，则可以手动创建。\"}</_components.p>{\"\\n\"}</_components.blockquote>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"env.d.ts\"'>{\"declare const YOUR_ADD_GLOBAL_VAR;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"构建过程\">{\"构建过程\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#构建过程\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"当执行 \"}<_components.code>{\"modern build\"}</_components.code>{\" 命令的时候，会发生\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"根据 \"}<_components.code>{\"buildConfig.outDir\"}</_components.code>{\" 清理产物目录。\"}</_components.li>{\"\\n\"}<_components.li>{\"编译 \"}<_components.code>{\"js/ts\"}</_components.code>{\" 源代码生成 bundle / bundleless 的 JS 构建产物。\"}</_components.li>{\"\\n\"}<_components.li>{\"使用 \"}<_components.code>{\"tsc\"}</_components.code>{\" 生成 bundle / bundleless 的类型文件。\"}</_components.li>{\"\\n\"}<_components.li>{\"处理 \"}<_components.code>{\"copy\"}</_components.code>{\" 任务。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"构建报错\">{\"构建报错\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#构建报错\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"当发生构建报错的时候，基于以上了解到的信息，可以很容易的明白在终端出现的报错内容：\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"js 或者 ts 构建的报错：\"}</_components.strong></_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{'error  ModuleBuildError:\\n\\n╭───────────────────────╮\\n│ bundle failed:        │\\n│  - format is \"cjs\"    │\\n│  - target is \"esnext\" │\\n╰───────────────────────╯\\n\\nDetailed Information:\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.strong>{\"类型文件生成过程的报错：\"}</_components.strong></_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"error   ModuleBuildError:\\n\\nbundle DTS failed:\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"对于 \"}<_components.code>{\"js/ts\"}</_components.code>{\" 构建错误，我们可以从报错信息中知道：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"报错的 \"}<_components.code>{\"buildType\"}</_components.code></_components.li>{\"\\n\"}<_components.li>{\"报错的 \"}<_components.code>{\"format\"}</_components.code></_components.li>{\"\\n\"}<_components.li>{\"报错的 \"}<_components.code>{\"target\"}</_components.code></_components.li>{\"\\n\"}<_components.li>{\"其他具体报错信息\"}</_components.li>{\"\\n\"}</_components.ul></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","div","h2","h3","strong","ul","li","h4","pre","blockquote","components","id","className","href","target","rel","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}