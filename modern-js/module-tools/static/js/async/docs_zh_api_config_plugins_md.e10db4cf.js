(self.webpackChunk_modern_js_module_tools_docs=self.webpackChunk_modern_js_module_tools_docs||[]).push([["docs_zh_api_config_plugins_md"],{86587:function(e,n,i){"use strict";i.r(n),i.d(n,{default:function(){return o}});var r,s=i("15169"),d=i("43932"),l=i("9880"),h=i("23169");function a(e){var n=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",code:"code",h2:"h2",h3:"h3",pre:"pre",h4:"h4"},(0,h.useMDXComponents)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.h1,{id:"plugins",children:["plugins",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#plugins",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"本章介绍注册 Module Tools 插件的配置。"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["类型：",(0,l.jsx)(n.code,{children:"ModuleToolsPlugin[]"})]}),"\n",(0,l.jsxs)(n.li,{children:["默认值：",(0,l.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,l.jsxs)(n.h2,{id:"插件执行顺序",children:["插件执行顺序",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#插件执行顺序",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["默认情况下，自定义插件会按照 ",(0,l.jsx)(n.code,{children:"plugins"})," 数组的顺序依次执行，Module Tools 内置插件的执行时机早于自定义插件。"]}),"\n",(0,l.jsxs)(n.p,{children:["当插件内部使用了控制顺序的相关字段，比如 ",(0,l.jsx)(n.code,{children:"pre"}),"、",(0,l.jsx)(n.code,{children:"post"})," 时，会基于声明的字段对执行顺序进行调整，详见 ",(0,l.jsx)(n.a,{href:"https://modernjs.dev/guides/topic-detail/framework-plugin/relationship",target:"_blank",rel:"noopener noreferrer",children:"插件之间的关系"}),"。"]}),"\n",(0,l.jsxs)(n.h2,{id:"开发插件",children:["开发插件",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#开发插件",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["关于如何编写插件，可以查看",(0,l.jsx)(n.a,{href:"/plugins/guide/getting-started",children:"「插件编写指南」"}),"。"]}),"\n",(0,l.jsxs)(n.h2,{id:"示例",children:["示例",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#示例",children:"#"})]}),"\n",(0,l.jsxs)(n.h3,{id:"使用-npm-上的插件",children:["使用 npm 上的插件",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-npm-上的插件",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"使用 npm 上的插件，需要通过包管理器安装插件，并通过 import 引入。"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",meta:'title="modern.config.ts"',children:"import { myPlugin } from 'my-plugin';\n\nexport default defineConfig({\n  plugins: [myPlugin()],\n});\n"})}),"\n",(0,l.jsxs)(n.h4,{id:"使用本地插件",children:["使用本地插件",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用本地插件",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"使用本地代码仓库中的插件，直接通过相对路径 import 引入即可。"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",meta:'title="modern.config.ts"',children:"import { myPlugin } from './plugins/myPlugin';\n\nexport default defineConfig({\n  plugins: [myPlugin()],\n});\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"插件配置项",children:["插件配置项",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#插件配置项",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"如果插件提供了一些自定义的配置项，你可以通过插件函数的参数传入配置。"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",meta:'title="modern.config.ts"',children:"import { myPlugin } from 'my-plugin';\n\nexport default defineConfig({\n  plugins: [\n    myPlugin({\n      foo: 1,\n      bar: 2,\n    }),\n  ],\n});\n"})})]})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fapi%2Fconfig%2Fplugins.md"]={toc:[{text:"插件执行顺序",id:"插件执行顺序",depth:2},{text:"开发插件",id:"开发插件",depth:2},{text:"示例",id:"示例",depth:2},{text:"使用 npm 上的插件",id:"使用-npm-上的插件",depth:3},{text:"使用本地插件",id:"使用本地插件",depth:4},{text:"插件配置项",id:"插件配置项",depth:3}],title:"plugins",frontmatter:{sidebar_position:4}};var o=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,h.useMDXComponents)(),e.components).wrapper;return n?(0,l.jsx)(n,(0,d._)((0,s._)({},e),{children:(0,l.jsx)(a,(0,s._)({},e))})):a(e)}}}]);