{"version":3,"file":"static/js/async/docs_en_guide_basic_test-your-project_mdx.c0465cdc.js","sources":["./docs/en/guide/basic/test-your-project.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fguide%2Fbasic%2Ftest-your-project.mdx\"] = {\"toc\":[{\"text\":\"Prerequisites and conventions\",\"id\":\"prerequisites-and-conventions\",\"depth\":2},{\"text\":\"Run the tests\",\"id\":\"run-the-tests\",\"depth\":2},{\"text\":\"Usage Configuration\",\"id\":\"usage-configuration\",\"depth\":2},{\"text\":\"Test example\",\"id\":\"test-example\",\"depth\":2},{\"text\":\"Common modules\",\"id\":\"common-modules\",\"depth\":3},{\"text\":\"Components\",\"id\":\"components\",\"depth\":3}],\"title\":\"Testing Projects\",\"frontmatter\":{\"sidebar_position\":6}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        code: \"code\",\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        pre: \"pre\",\n        img: \"img\",\n        h3: \"h3\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"testing-projects\">{\"Testing Projects\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#testing-projects\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"This chapter will describe how to test modules.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"prerequisites-and-conventions\">{\"Prerequisites and conventions\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#prerequisites-and-conventions\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"To use the testing features of the project, you need to make sure that the project contains the dependency: \"}<_components.code>{'\"@modern-js/plugin-testing\"'}</_components.code>{\" , which can be done with \"}<_components.a href=\"/guide/basic/command-preview#modern-new\">{\"modern new\"}</_components.a>{\".\"}</_components.p>{\"\\n\"}<_components.p>{\"In the module engineering scheme, the following conventions are in place for test cases, or files for writing tests:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"The \"}<_components.code>{\"tests\"}</_components.code>{\" directory in the project directory is the directory for test cases and test files, \"}<_components.strong>{\"no support for changing the directory for running test cases\"}</_components.strong>{\".\"}</_components.li>{\"\\n\"}<_components.li>{\"Files with the suffix \"}<_components.code>{\".test.[tj]sx?\"}</_components.code>{\" are automatically recognized as test files by default.\"}</_components.li>{\"\\n\"}<_components.li>{\"Other \"}<_components.code>{\". [tj]sx?\"}</_components.code>{\" suffixes are recognized as normal files that can be used as test \"}<_components.code>{\"utils\"}</_components.code>{\" files or for other purposes.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"run-the-tests\">{\"Run the tests\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#run-the-tests\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Once the dependencies are prepared and we know where to write the test cases, we can execute the tests with the following command:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"modern test\\n\\n// Update snapshot\\nmodern test --updateSnapshot\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"After execution, you will see the results of the test:\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/uhbfnupenuhf/test-result.png\" alt=\"test-result\"/></_components.p>{\"\\n\"}<_components.h2 id=\"usage-configuration\">{\"Usage Configuration\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#usage-configuration\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"The Module Engineering Program provides the following configurations for testing.\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.a href=\"/api/config/testing\"><_components.code>{\"testing\"}</_components.code></_components.a></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"You can add it in \"}<_components.code>{\"modern.config.(j|t)s\"}</_components.code>{\".\"}</_components.p>{\"\\n\"}<_components.h2 id=\"test-example\">{\"Test example\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#test-example\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"common-modules\">{\"Common modules\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#common-modules\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"For common modules, we can use the test function as follows:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"First is the code of the module:\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"./src/index.ts\"'>{\"export default function () {\\n  return 'hello world';\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Then in the test file, we can import source code as the following way. Where \"}<_components.code>{\"@\"}</_components.code>{\" points to the source directory, defined in \"}<_components.code>{\"tests/tsconfig.json\"}</_components.code>{\" in the initialization project.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"./tests/index.test.ts\"'>{\"import main from '@/index';\\n\\ndescribe('default cases', () => {\\n  test('Have returns', () => {\\n    const drink = jest.fn(main);\\n    drink();\\n    expect(drink).toHaveReturned();\\n  });\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Finally we can execute \"}<_components.code>{\"modern test\"}</_components.code>{\".\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"pnpm test\\n## or\\nyarn test\\n## or\\nnpm run test\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"components\">{\"Components\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#components\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"For components, Modern.js's Runtime API provides functionality for testing UI components, which is provided by \"}<_components.code>{\"@modern-js/runtime/testing\"}</_components.code>{\".\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"If you need to use the Runtime API, then you can turn it on via \"}<_components.a href=\"/guide/basic/command-preview\">{\"microgenerator\"}</_components.a>{\".\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"First is the code of the component:\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\" meta='title=\"./src/index.tsx\"'>{\"export const default () {\\n  return (\\n    <div>This is a UI Component</div>\\n  );\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Then in the test file, we can import source code as the following way. Where \"}<_components.code>{\"@\"}</_components.code>{\" points to the source directory, defined in \"}<_components.code>{\"tests/tsconfig.json\"}</_components.code>{\" in the initialization project.\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\" meta='title=\"./tests/index.test.tsx\"'>{\"import { render, screen } from '@modern-js/runtime/testing';\\n\\nimport Component from '@/index';\\n\\ndescribe('default cases', () => {\\n  test('Rendered', () => {\\n    render(<Component />);\\n    expect(screen.getByText('This is a UI Component')).toBeInTheDocument();\\n  });\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"Finally we can execute \"}<_components.code>{\"modern test\"}</_components.code>{\".\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"pnpm test\\n## or\\nyarn test\\n## or\\nnpm run test\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","code","ul","li","strong","pre","img","h3","div","components","id","className","href","src","alt","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}