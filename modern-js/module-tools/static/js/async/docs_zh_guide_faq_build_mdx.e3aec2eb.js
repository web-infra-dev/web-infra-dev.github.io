(self.webpackChunk_modern_js_module_tools_docs=self.webpackChunk_modern_js_module_tools_docs||[]).push([["docs_zh_guide_faq_build_mdx"],{48388:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return c}});var r,d=s("15169"),i=s("43932"),l=s("9880"),o=s("23169");function t(e){return(0,l.jsx)(l.Fragment,{})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fcomponents%2Ffaq-build-exception.mdx"]={toc:[],title:"",frontmatter:{}};var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.useMDXComponents)(),e.components).wrapper;return n?(0,l.jsx)(n,(0,i._)((0,d._)({},e),{children:(0,l.jsx)(t,(0,d._)({},e))})):t(e)}},80522:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return c}});var r,d=s("15169"),i=s("43932"),l=s("9880"),o=s("23169");function t(e){return(0,l.jsx)(l.Fragment,{})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fcomponents%2Ffaq-build-other.mdx"]={toc:[],title:"",frontmatter:{}};var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.useMDXComponents)(),e.components).wrapper;return n?(0,l.jsx)(n,(0,i._)((0,d._)({},e),{children:(0,l.jsx)(t,(0,d._)({},e))})):t(e)}},71853:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return c}});var r,d=s("15169"),i=s("43932"),l=s("9880"),o=s("23169");function t(e){return(0,l.jsx)(l.Fragment,{})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fcomponents%2Ffaq-build-product.mdx"]={toc:[],title:"",frontmatter:{}};var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.useMDXComponents)(),e.components).wrapper;return n?(0,l.jsx)(n,(0,i._)((0,d._)({},e),{children:(0,l.jsx)(t,(0,d._)({},e))})):t(e)}},95230:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return c}});var r,d=s("15169"),i=s("43932"),l=s("9880"),o=s("23169");function t(e){var n=Object.assign({pre:"pre",code:"code",p:"p"},(0,o.useMDXComponents)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",meta:'title="modern.config.ts"',children:"import { myEsbuildPlugin } from './myEsbuildPlugin';\n\nexport default defineConfig({\n  buildConfig: {\n    esbuildOptions: options => {\n      options.plugins = [myEsbuildPlugin, ...options.plugins];\n      return options;\n    },\n  },\n});\n"})}),"\n",(0,l.jsx)(n.p,{children:"在增加 esbuild 插件时，请注意你需要将插件加在 plugins 数组的头部，因为 Modern.js Module 内部也是通过一个 esbuild 插件介入到整个构建流程中去的，因此需要将自定义插件优先注册。"})]})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fcomponents%2Fregister-esbuild-plugin.mdx"]={toc:[],title:"",frontmatter:{}};var c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.useMDXComponents)(),e.components).wrapper;return n?(0,l.jsx)(n,(0,i._)((0,d._)({},e),{children:(0,l.jsx)(t,(0,d._)({},e))})):t(e)}},13952:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return p}});var r,d=s("15169"),i=s("43932"),l=s("9880"),o=s("23169"),t=s("71853"),c=s("48388"),a=s("80522"),h=s("95230");function u(e){var n=Object.assign({h1:"h1",a:"a",h2:"h2",h3:"h3",p:"p",code:"code",pre:"pre",strong:"strong",ul:"ul",li:"li",ol:"ol",h4:"h4",img:"img"},(0,o.useMDXComponents)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.h1,{id:"构建相关问题",children:["构建相关问题",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#构建相关问题",children:"#"})]}),"\n",(0,l.jsxs)(n.h2,{id:"产物问题",children:["产物问题",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#产物问题",children:"#"})]}),"\n","\n",(0,l.jsx)(t.default,{}),"\n",(0,l.jsxs)(n.h3,{id:"class-fields-的初始化处理",children:["Class Fields 的初始化处理",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#class-fields-的初始化处理",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["TypeSript 提供了 ",(0,l.jsx)(n.code,{children:"useDefineForClassFields"})," 配置用于控制对于 ",(0,l.jsx)(n.code,{children:"public class fields"})," 的转换处理。"]}),"\n",(0,l.jsx)(n.p,{children:"如果有一段代码："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"class C {\n  foo = 100;\n  bar: string;\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["当 ",(0,l.jsx)(n.code,{children:"useDefineForClassFields"})," 为 ",(0,l.jsx)(n.code,{children:"false"})," 的时候，则编译后的代码会变为："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"class C {\n  constructor() {\n    this.foo = 100;\n  }\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["当 ",(0,l.jsx)(n.code,{children:"useDefineForClassFields"})," 为 ",(0,l.jsx)(n.code,{children:"true"})," 的时候，则编译后的代码会变为："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"class C {\n  constructor() {\n    Object.defineProperty(this, 'foo', {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 100,\n    });\n    Object.defineProperty(this, 'bar', {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0,\n    });\n  }\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["同时该配置的默认值会根据 tsconfig.json 的 ",(0,l.jsx)(n.a,{href:"https://www.typescriptlang.org/tsconfig#target",target:"_blank",rel:"noopener noreferrer",children:(0,l.jsx)(n.code,{children:"target"})})," 配置而变化：",(0,l.jsxs)(n.strong,{children:["当 ",(0,l.jsx)(n.code,{children:"target"})," 是 ES2022 或者更高的时候，则 ",(0,l.jsx)(n.code,{children:"useDefineForClassFields"})," 默认配置为 ",(0,l.jsx)(n.code,{children:"true"}),"，否则就是默认为 ",(0,l.jsx)(n.code,{children:"false"})]}),"。"]}),"\n",(0,l.jsx)(n.p,{children:"关于 TypeScript 这个配置的更多信息，可以参考下面的链接："}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#the-usedefineforclassfields-flag-and-the-declare-property-modifier",target:"_blank",rel:"noopener noreferrer",children:"The useDefineForClassFields Flag and The declare Property Modifier"})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Modern.js Module 目前会根据下面的逻辑进行处理："}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["首先根据当前项目的 tsconfig.json 的 ",(0,l.jsx)(n.code,{children:"useDefineForClassFields"})," 配置确定在 Modern.js Module 内部如何处理。目前只会读取当前项目路径下的 tsconfig.json 文件的内容，暂时不支持根据 ",(0,l.jsx)(n.a,{href:"https://www.typescriptlang.org/tsconfig#extends",target:"_blank",rel:"noopener noreferrer",children:(0,l.jsx)(n.code,{children:"extends"})})," 配置来获取最终的 tsconfig 配置。"]}),"\n",(0,l.jsxs)(n.li,{children:["如果没有检测 tsconfig.json 的 ",(0,l.jsx)(n.code,{children:"useDefineForClassFields"})," 配置，则会根据 tsconfig.json 的 ",(0,l.jsx)(n.code,{children:"target"})," 配置来确定默认值。如果 ",(0,l.jsx)(n.code,{children:"target"})," 大于 ",(0,l.jsx)(n.code,{children:"ES2022"}),"（包含 ",(0,l.jsx)(n.code,{children:"EsNext"}),"），则",(0,l.jsx)(n.code,{children:"useDefineForClassFields"}),"默认为 ",(0,l.jsx)(n.code,{children:"true"}),"，否则为 ",(0,l.jsx)(n.code,{children:"false"}),"。"]}),"\n",(0,l.jsxs)(n.li,{children:["如果没有检测到 tsconfig.json 的 ",(0,l.jsx)(n.code,{children:"target"}),"，则按照 ",(0,l.jsx)(n.code,{children:"useDefineForClassFields"}),"的值 为 ",(0,l.jsx)(n.code,{children:"true"})," 进行处理。"]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"babel-plugin-lodash-将引入的-lodash-处理成-undefined",children:["babel-plugin-lodash 将引入的 lodash 处理成 ",(0,l.jsx)(n.code,{children:"undefined"}),(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#babel-plugin-lodash-将引入的-lodash-处理成-undefined",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"当使用类似下面的方式的时候，会出现这个问题："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import * as Lodash from 'lodash';\n\nexport const libs = {\n  _: Lodash,\n};\n"})}),"\n",(0,l.jsxs)(n.p,{children:["目前在 ",(0,l.jsx)(n.code,{children:"babel-plugin-lodash"})," Github 上的相关 Issue："]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/lodash/babel-plugin-lodash/issues/235",target:"_blank",rel:"noopener noreferrer",children:"#235"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["这个问题的解决办法是移除 ",(0,l.jsx)(n.code,{children:"babel-plugin-lodash"}),"，因为此时不需要该插件进行按需引用，使用该插件会产生副作用。"]}),"\n",(0,l.jsxs)(n.p,{children:["类似的情况在 ",(0,l.jsx)(n.code,{children:"babel-plugin-import"})," 上也可能会出现。比如有类似如下的代码："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import * as Comps from 'components';\n\nexport const libs = {\n  comps: Comps,\n};\n"})}),"\n",(0,l.jsxs)(n.p,{children:["此时 ",(0,l.jsx)(n.code,{children:"babel-plugin-import"})," 也可能会导致 ",(0,l.jsx)(n.code,{children:"Comps"})," 变为 ",(0,l.jsx)(n.code,{children:"undefined"}),"。因此也需要移除对应的 ",(0,l.jsx)(n.code,{children:"babel-plugin-import"}),"。"]}),"\n",(0,l.jsxs)(n.h2,{id:"异常类问题",children:["异常类问题",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#异常类问题",children:"#"})]}),"\n","\n",(0,l.jsx)(c.default,{}),"\n",(0,l.jsxs)(n.h3,{id:"dynamic-require-of-react-is-not-supported",children:['Dynamic require of "react" is not supported',(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#dynamic-require-of-react-is-not-supported",children:"#"})]}),"\n",(0,l.jsxs)(n.h4,{id:"问题描述",children:["问题描述",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问题描述",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"当构建的产物配置中产物格式为 ES modules 的时候："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"export default defineConfig({\n  buildConfig: {\n    format: 'esm',\n  },\n});\n"})}),"\n",(0,l.jsx)(n.p,{children:"如果导入了的第三方 npm 包的 cjs 产物，那么生成的产物可能会在 webpack 下有可能无法正常运行。"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/shylnyhaeh7uldvivhn/1280X1280.png",alt:""})}),"\n",(0,l.jsxs)(n.h4,{id:"解决办法",children:["解决办法",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#解决办法",children:"#"})]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"首先需要找到是哪个第三方包引起的问题"}),"。例如报错信息中指向了 ",(0,l.jsx)(n.code,{children:"react"})," 这个包，那么就要寻找在哪个第三方包里存在 ",(0,l.jsx)(n.code,{children:"require('react')"})," 这样的代码。比如 ",(0,l.jsx)(n.a,{href:"https://www.npmjs.com/package/react-draggable",target:"_blank",rel:"noopener noreferrer",children:(0,l.jsx)(n.code,{children:"react-draggable"})})," ，这个包仅包含 ",(0,l.jsx)(n.code,{children:"cjs"})," 产物，那么问题定位到 ",(0,l.jsx)(n.code,{children:"react-draggable"})," 这个包。"]}),"\n",(0,l.jsxs)(n.li,{children:["然后我们需要将这个包通过下面的配置进行排除，即",(0,l.jsx)(n.strong,{children:"不打包存在问题的第三方包"}),"。"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"export default defineConfig({\n  buildConfig: {\n    externals: ['react-draggable'],\n  },\n});\n"})}),"\n",(0,l.jsxs)(n.h4,{id:"参考链接",children:["参考链接",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参考链接",children:"#"})]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://stackoverflow.com/questions/68423950/when-using-esbuild-with-external-react-i-get-dynamic-require-of-react-is-not-s",target:"_blank",rel:"noopener noreferrer",children:'When using esbuild with external react I get Dynamic require of "react" is not supported'})}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"编译过程中因为某个组件库的-less-文件报错operation-on-an-invalid-type",children:["编译过程中，因为某个组件库的 less 文件报错：",(0,l.jsx)(n.code,{children:"'Operation on an invalid type'"}),(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#编译过程中因为某个组件库的-less-文件报错operation-on-an-invalid-type",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["可能是因为该组件库依赖的 Less 版本是 v3，而 Modern.js Module 默认是 v4。v3 与 v4 在 ",(0,l.jsx)(n.code,{children:"math"})," 配置上存在有 Break Change，可以查看这个",(0,l.jsx)(n.a,{href:"https://stackoverflow.com/questions/73298187/less-error-operation-on-an-invalid-type-in-antd-dependency",target:"_blank",rel:"noopener noreferrer",children:"链接"})," 了解详情。"]}),"\n",(0,l.jsx)(n.p,{children:"因此，如果是在源码中使用了类似这样的组件库："}),"\n",(0,l.jsxs)(n.p,{children:["在构建配置中使用了 ",(0,l.jsx)(n.code,{children:"buildPreset"})," 的情况下，按照下面进行修改："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  buildPreset({ extendPreset }) {\n    return extendPreset('your-build-preset', {\n      style: {\n        less: {\n          lessOptions: {\n            math: 'always',\n          },\n        },\n      },\n    });\n  },\n};\n"})}),"\n",(0,l.jsxs)(n.p,{children:["或者使用了自定义的 ",(0,l.jsx)(n.code,{children:"buildConfig"})," 的情况下，按照下面进行修改："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  buildConfig: {\n    style: {\n      less: {\n        lessOptions: {\n          math: 'always',\n        },\n      },\n    },\n  },\n};\n"})}),"\n",(0,l.jsx)(n.p,{children:"如果是在 Storybook 中使用了类似这样的组件，则需要修改 Storybook 的调试配置："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  dev: {\n    storybook: {\n      webpackChain(chain, { CHAIN_ID }) {\n        chain.module\n          .rule(CHAIN_ID.RULE.LESS)\n          .use(CHAIN_ID.USE.LESS)\n          .tap(options => {\n            options.lessOptions = {\n              ...options.lessOptions,\n              math: 'always',\n            };\n            return options;\n          });\n      },\n    },\n  },\n};\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"bundle-dts-failed",children:["Bundle DTS failed",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#bundle-dts-failed",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["正常情况下，使用 ",(0,l.jsx)(n.code,{children:"tsc"})," Modern.js Module 不仅支持输出松散的类型文件产物，同时也支持打包类型文件，可以将这些松散的类型文件以及第三方依赖的类型文件打包成一个文件。"]}),"\n",(0,l.jsxs)(n.p,{children:["不过，打包第三方依赖的类型文件是存在风险的，",(0,l.jsx)(n.strong,{children:"因为存在第三方依赖的类型文件无法打包的情况"}),"。"]}),"\n",(0,l.jsxs)(n.p,{children:["因此当遇到 Modern.js Module 构建过程中出现 ",(0,l.jsx)(n.code,{children:"Bundle DTS failed"})," 的错误信息标题的时候，可以观察报错信息是来自某个第三方依赖。尝试设置 ",(0,l.jsx)(n.a,{href:"/api/config/build-config#dtsrespectexternal",children:(0,l.jsx)(n.code,{children:"dts.respectExternal"})})," 为 ",(0,l.jsx)(n.code,{children:"false"})," 来关闭打包第三方依赖的类型文件的行为。"]}),"\n",(0,l.jsxs)(n.h3,{id:"defineconfig-函数类型报错如果没有引用-则无法命名-default-的推断类型",children:[(0,l.jsx)(n.code,{children:"defineConfig"})," 函数类型报错：",(0,l.jsx)(n.code,{children:'如果没有引用 "..."，则无法命名 "default" 的推断类型'}),(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#defineconfig-函数类型报错如果没有引用-则无法命名-default-的推断类型",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["检查项目的 tsconfig.json 文件中是否存在 ",(0,l.jsx)(n.a,{href:"https://www.typescriptlang.org/tsconfig#include",target:"_blank",rel:"noopener noreferrer",children:(0,l.jsx)(n.code,{children:"include"})})," 配置，如果没有，则尝试增加下面的内容："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "include": ["src"]\n}\n'})}),"\n",(0,l.jsxs)(n.h2,{id:"其他",children:["其他",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#其他",children:"#"})]}),"\n","\n",(0,l.jsx)(a.default,{}),"\n",(0,l.jsxs)(n.h3,{id:"增加额外的编译能力",children:["增加额外的编译能力",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#增加额外的编译能力",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"Modern.js Module 基于 esbuild 实现，因此如果有特殊需求或者想要增加额外的编译能力，可以通过实现 esbuild 插件来解决。"}),"\n",(0,l.jsxs)(n.p,{children:["Modern.js Module 提供了 ",(0,l.jsx)(n.a,{href:"/api/config/build-config#esbuildoptions",children:(0,l.jsx)(n.code,{children:"esbuildOptions"})})," 配置允许修改 Modern.js Module 内部的 esbuild 配置，因此可以通过该配置来增加自定义的 esbuild 插件："]}),"\n","\n",(0,l.jsx)(h.default,{}),"\n",(0,l.jsxs)(n.h3,{id:"支持生成-css-modules-的-typescript-声明文件",children:["支持生成 CSS Modules 的 TypeScript 声明文件",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#支持生成-css-modules-的-typescript-声明文件",children:"#"})]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["方案一：",(0,l.jsx)(n.a,{href:"https://github.com/Quramy/typed-css-modules",target:"_blank",rel:"noopener noreferrer",children:"typed-css-modules"})]}),"\n",(0,l.jsxs)(n.li,{children:["方案二：",(0,l.jsx)(n.a,{href:"https://www.npmjs.com/package/@guanghechen/postcss-modules-dts",target:"_blank",rel:"noopener noreferrer",children:"postcss-modules-dts"})]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",meta:'title="modern.config.ts"',children:"import { defineConfig } from '@modern-js/module-tools';\n\nexport default defineConfig(async () => {\n  const { dts } =  await import(\"@guanghechen/postcss-modules-dts\");\n  return {\n    buildConfig: {\n      style: {\n        modules: { ...dts },\n      },\n    },\n    // 你的自定义配置\n  }\n});\n"})})]})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fguide%2Ffaq%2Fbuild.mdx"]={toc:[{text:"产物问题",id:"产物问题",depth:2},{text:"Class Fields 的初始化处理",id:"class-fields-的初始化处理",depth:3},{text:"babel-plugin-lodash 将引入的 lodash 处理成 undefined",id:"babel-plugin-lodash-将引入的-lodash-处理成-undefined",depth:3},{text:"异常类问题",id:"异常类问题",depth:2},{text:'Dynamic require of \\"react\\" is not supported',id:"dynamic-require-of-react-is-not-supported",depth:3},{text:"问题描述",id:"问题描述",depth:4},{text:"解决办法",id:"解决办法",depth:4},{text:"参考链接",id:"参考链接",depth:4},{text:"编译过程中，因为某个组件库的 less 文件报错：\\'Operation on an invalid type\\'",id:"编译过程中因为某个组件库的-less-文件报错operation-on-an-invalid-type",depth:3},{text:"Bundle DTS failed",id:"bundle-dts-failed",depth:3},{text:'defineConfig 函数类型报错：如果没有引用 \\"...\\"，则无法命名 \\"default\\" 的推断类型',id:"defineconfig-函数类型报错如果没有引用-则无法命名-default-的推断类型",depth:3},{text:"其他",id:"其他",depth:2},{text:"增加额外的编译能力",id:"增加额外的编译能力",depth:3},{text:"支持生成 CSS Modules 的 TypeScript 声明文件",id:"支持生成-css-modules-的-typescript-声明文件",depth:3}],title:"构建相关问题",frontmatter:{}};var p=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.useMDXComponents)(),e.components).wrapper;return n?(0,l.jsx)(n,(0,i._)((0,d._)({},e),{children:(0,l.jsx)(u,(0,d._)({},e))})):u(e)}}}]);