{"version":3,"file":"static/js/async/docs_zh_guide_advance_external-dependency_mdx.e3feea88.js","sources":["./docs/zh/guide/advance/external-dependency.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Fadvance%2Fexternal-dependency.mdx\"] = {\"toc\":[{\"text\":\"第三方依赖的默认处理\",\"id\":\"第三方依赖的默认处理\",\"depth\":2},{\"text\":\"示例\",\"id\":\"示例\",\"depth\":3},{\"text\":\"排除指定第三方依赖\",\"id\":\"排除指定第三方依赖\",\"depth\":2}],\"title\":\"处理三方依赖\",\"frontmatter\":{\"sidebar_position\":4}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        pre: \"pre\",\n        h2: \"h2\",\n        strong: \"strong\",\n        h3: \"h3\",\n        ul: \"ul\",\n        li: \"li\",\n        blockquote: \"blockquote\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"处理三方依赖\">{\"处理三方依赖\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#处理三方依赖\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"一般来说，项目所需要的第三方依赖可以通过包管理器的 \"}<_components.code>{\"install\"}</_components.code>{\" 命令安装，在安装第三方依赖成功后，这些第三方依赖一般会出现在项目 \"}<_components.code>{\"package.json\"}</_components.code>{\" 的 \"}<_components.code>{\"dependencies\"}</_components.code>{\" 和 \"}<_components.code>{\"devDependencies\"}</_components.code>{\" 下。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\"pacakge.json\"'>{'{\\n  \"dependencies\": {},\\n  \"devDependencies\": {}\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{'\"dependencies\"'}</_components.code>{\" 下的依赖通常来说是这个包运行所需的依赖， \"}<_components.code>{'\"devDependencies\"'}</_components.code>{\" 则代表着开发依赖。\"}</_components.p>{\"\\n\"}<_components.p>{\"除了 \"}<_components.code>{'\"dependencies\"'}</_components.code>{\" 以外，\"}<_components.a href=\"/guide/basic/before-getting-started#peerdependencies\"><_components.code>{'\"peerDependencies\"'}</_components.code></_components.a>{\" 也可以声明在生产环境下运行所需要的依赖，此时会和它的宿主共享一份依赖。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"第三方依赖的默认处理\">{\"第三方依赖的默认处理\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#第三方依赖的默认处理\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"在模块工程里，\"}<_components.strong>{\"默认情况下不会对 \"}<_components.code>{'\"dependencies\"'}</_components.code>{\" 以及 \"}<_components.code>{'\"peerDependencies\"'}</_components.code>{\" 下的第三方依赖进行打包处理\"}</_components.strong>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"这是因为在安装 npm 包时，其 \"}<_components.code>{'\"dependencies\"'}</_components.code>{\" 也会被安装。不打包 \"}<_components.code>{'\"dependencies\"'}</_components.code>{\"，可以减小包产物的体积。\"}</_components.p>{\"\\n\"}<_components.p>{\"如果需要打包某些依赖，建议将它们从 \"}<_components.code>{'\"dependencies\"'}</_components.code>{\" 挪到 \"}<_components.code>{'\"devDependencies\"'}</_components.code>{\" ，这相当于对依赖进行 \"}<_components.strong>{\"prebundle\"}</_components.strong>{\" ，可以减小依赖安装的体积。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"如果项目依赖了 \"}<_components.code>{\"react\"}</_components.code>{\":\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\"package.json\"'>{'{\\n  \"dependencies\": {\\n    \"react\": \"^17\"\\n  },\\n  // or\\n  \"peerDependencies\": {\\n    \"react\": \"^17\"\\n  }\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"当源码中使用了 \"}<_components.code>{\"react\"}</_components.code>{\" 依赖:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\" meta='title=\"src/index.ts\"'>{\"import React from 'react';\\nconsole.info(React);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"此时产物中不会包含 \"}<_components.code>{\"react\"}</_components.code>{\" 的代码:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"dist/index.js\"'>{\"import React from 'react';\\nconsole.info(React);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"如果想要修改默认的处理方式，可以通过下面的 API 进行修改：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.a href=\"/api/config/build-config#autoexternal\"><_components.code>{\"buildConfig.autoExternal\"}</_components.code></_components.a></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"排除指定第三方依赖\">{\"排除指定第三方依赖\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#排除指定第三方依赖\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"在上面我们提到了 \"}<_components.code>{\"buildConfig.autoExternal\"}</_components.code>{\" API 的用途，同时 \"}<_components.a href=\"/api/config/build-config#externals\"><_components.code>{\"buildConfig.externals\"}</_components.code></_components.a>{\" 可以实现对三方依赖更细微的处理。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如当我们需要仅对某些依赖不进行打包处理的时候，可以按照如下方式进行配置：\"}</_components.p>{\"\\n\"}<_components.blockquote>{\"\\n\"}<_components.p>{\"一般这种情况，可能是某些依赖不适合进行打包处理。如果遇到这种情况，则可以按照下面的方式进行处理。\"}</_components.p>{\"\\n\"}</_components.blockquote>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"epxort default defineConfig({\\n  buildConfig: {\\n    autoExternal: false,\\n    externals: ['pkg-1', /pkg-2/],\\n  }\\n});\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","pre","h2","strong","h3","ul","li","blockquote","components","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}