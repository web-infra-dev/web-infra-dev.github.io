(self.webpackChunk_modern_js_module_tools_docs=self.webpackChunk_modern_js_module_tools_docs||[]).push([["docs_zh_guide_intro_getting-started_md"],{83363:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return h}});var d,r=s("15169"),l=s("43932"),i=s("9880"),o=s("23169");function c(e){var n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",strong:"strong",h3:"h3",pre:"pre",code:"code",div:"div",blockquote:"blockquote",ul:"ul",li:"li"},(0,o.useMDXComponents)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"快速开始",children:["快速开始",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#快速开始",children:"#"})]}),"\n",(0,i.jsxs)(n.h2,{id:"三分钟快速上手",children:["三分钟快速上手",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#三分钟快速上手",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["想要实际体验 Module Tools？首先需要安装 ",(0,i.jsx)(n.a,{href:"https://github.com/nodejs/Release",target:"_blank",rel:"noopener noreferrer",children:"Node.js LTS"}),"，并确保 Node 版本大于等于 ",(0,i.jsx)(n.strong,{children:"14.18.0"}),"。我们推荐使用 Node.js 18 的 LTS 版本。"]}),"\n",(0,i.jsxs)(n.h3,{id:"创建新项目",children:["创建新项目",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#创建新项目",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"如果你想要创建一个完整的模块工程项目，可以执行以下命令："})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx @modern-js/create your-project-dir-name\n"})}),"\n",(0,i.jsxs)(n.div,{className:"modern-directive info",children:[(0,i.jsx)(n.div,{className:"modern-directive-title",children:"INFO"}),(0,i.jsx)(n.div,{className:"modern-directive-content",children:(0,i.jsxs)(n.p,{children:["执行 ",(0,i.jsx)(n.code,{children:"npx @modern-js/create -h"})," 查看更多命令行参数\n"]})})]}),"\n",(0,i.jsx)(n.p,{children:"接着在问题交互中，按照如下选择："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"? 请选择你想创建的工程类型：Npm 模块\n? 请填写项目名称：library\n? 请选择开发语言：TS\n? 请选择包管理工具：pnpm\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["项目名称为 ",(0,i.jsx)(n.code,{children:"package.json"})," 中的 ",(0,i.jsx)(n.code,{children:'"name"'})," 字段值。"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"接着就会开始初始化项目的流程。在项目目录和文件生成以及依赖安装完毕后，此时就创建了一个完整的模块工程项目。"}),"\n",(0,i.jsxs)(n.p,{children:["我们可以直接执行 ",(0,i.jsx)(n.code,{children:"pnpm build"})," 命令启动项目的构建，执行 ",(0,i.jsx)(n.code,{children:"pnpm build --watch"})," 命令开启构建的观察模式。"]}),"\n",(0,i.jsxs)(n.h3,{id:"接入已有项目",children:["接入已有项目",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#接入已有项目",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"在你的项目里安装以下依赖："}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:'"@modern-js/module-tools"'})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"typescript"'}),"（如果不是 TypeScript 项目，则省略）"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install -D @modern-js/module-tools typescript\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["对于使用 pnpm 或者 Yarn 包管理器的项目，只需要替换 npm 就可以了。",(0,i.jsx)(n.strong,{children:"推荐使用 pnpm"}),"。"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["接着在项目的根目录下创建 ",(0,i.jsx)(n.code,{children:"modern.config.(t|j)s"})," 文件："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { moduleTools, defineConfig } from '@modern-js/module-tools';\n\nexport default defineConfig({\n  plugins: [moduleTools()],\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["最后在项目的 ",(0,i.jsx)(n.code,{children:"package.json"})," 文件里增加命令 ",(0,i.jsx)(n.code,{children:'"build": "modern build"'}),"："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "build": "modern build"\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["如果你的项目存在 ",(0,i.jsx)(n.code,{children:"src/index.(js|jsx)"})," 文件或者同时存在 ",(0,i.jsx)(n.code,{children:"src/index.(ts|tsx)"})," 和 ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," 文件，那么恭喜你可以运行直接运行 ",(0,i.jsx)(n.code,{children:"npm run build"})," 来使用 Module Tools 构建你的项目了。"]}),"\n",(0,i.jsxs)(n.h3,{id:"核心-npm-包",children:["核心 npm 包",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#核心-npm-包",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"@modern-js/module-tools"})," 是 Module Tools 的核心 npm 包，主要提供以下能力："]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["提供 ",(0,i.jsx)(n.code,{children:"modern dev"}),", ",(0,i.jsx)(n.code,{children:"modern build"})," 等常用的 CLI 命令。"]}),"\n",(0,i.jsx)(n.li,{children:"集成 Modern.js Core，提供配置解析、插件加载等能力。"}),"\n",(0,i.jsx)(n.li,{children:"集成 esbuild 和 SWC，提供构建能力。"}),"\n",(0,i.jsxs)(n.li,{children:["集成一些最为常用的插件，比如 ",(0,i.jsx)(n.code,{children:"plugin-lint"}),"、",(0,i.jsx)(n.code,{children:"plugin-changeset"})," 等。"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"@modern-js/module-tools"})," 是基于 Modern.js 的插件体系实现的，本质上是一个插件，因此你需要在配置文件的 ",(0,i.jsx)(n.code,{children:"plugins"})," 字段中注册 ",(0,i.jsx)(n.code,{children:"moduleTools"}),"："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="modern.config.ts"',children:"import { moduleTools, defineConfig } from '@modern-js/module-tools';\n\nexport default defineConfig({\n  plugins: [moduleTools()],\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"查看官方示例",children:["查看官方示例",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#查看官方示例",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"如果你想要看看使用了模块工程方案的完整项目，可以执行以下命令"}),"："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/web-infra-dev/module-tools-examples\ncd module-tools-example/base\n\n## 执行构建：\npnpm build\n\n## 监听模式执行构建：\npnpm build --watch\n\n## 启动 Storybook\npnpm dev storybook\n\n## 测试\npnpm test\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"让我们开始吧",children:["让我们开始吧",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#让我们开始吧",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"选择适合你的教程："}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["我是初学者，需要学习 Module Tools 的",(0,i.jsx)(n.a,{href:"/guide/basic/before-getting-started",children:"基础使用"}),"。"]}),"\n",(0,i.jsxs)(n.li,{children:["我已经初步掌握了 Module Tools 的使用，可以学习 Module Tools 的",(0,i.jsx)(n.a,{href:"/guide/advance/in-depth-about-build",children:"进阶指南"}),"。"]}),"\n",(0,i.jsxs)(n.li,{children:["我需要扩展项目能力，需要学习如何开发 Module Tools 的",(0,i.jsx)(n.a,{href:"/plugins/guide/getting-started",children:"插件"}),"。"]}),"\n"]})]})}(d=globalThis).__RSPRESS_PAGE_META||(d.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fguide%2Fintro%2Fgetting-started.md"]={toc:[{text:"三分钟快速上手",id:"三分钟快速上手",depth:2},{text:"创建新项目",id:"创建新项目",depth:3},{text:"接入已有项目",id:"接入已有项目",depth:3},{text:"核心 npm 包",id:"核心-npm-包",depth:3},{text:"查看官方示例",id:"查看官方示例",depth:3},{text:"让我们开始吧",id:"让我们开始吧",depth:2}],title:"快速开始",frontmatter:{sidebar_position:3}};var h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.useMDXComponents)(),e.components).wrapper;return n?(0,i.jsx)(n,(0,l._)((0,r._)({},e),{children:(0,i.jsx)(c,(0,r._)({},e))})):c(e)}}}]);