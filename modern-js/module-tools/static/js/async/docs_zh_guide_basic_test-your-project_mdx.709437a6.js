(self.webpackChunk_modern_js_module_tools_docs=self.webpackChunk_modern_js_module_tools_docs||[]).push([["docs_zh_guide_basic_test-your-project_mdx"],{80723:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return h}});var r,d=s("15169"),i=s("43932"),t=s("9880"),c=s("23169");function l(e){var n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",code:"code",pre:"pre",ul:"ul",li:"li",strong:"strong",img:"img",h3:"h3",div:"div"},(0,c.useMDXComponents)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"测试项目",children:["测试项目",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试项目",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"本章将要介绍如何测试可复用模块。"}),"\n",(0,t.jsxs)(n.h2,{id:"先决条件和约定",children:["先决条件和约定",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#先决条件和约定",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["想要使用项目的测试功能，需要确保项目中包含依赖：",(0,t.jsx)(n.code,{children:'"@modern-js/plugin-testing"'}),"，以及按照类似下面的内容进行配置："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { moduleTools, defineConfig } from '@modern-js/module-tools';\nimport { testingPlugin } from '@modern-js/plugin-testing';\n\nexport default defineConfig({\n  plugins: [\n    moduleTools(),\n    testingPlugin(),\n  ],\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["可以通过执行 ",(0,t.jsx)(n.a,{href:"/guide/basic/command-preview#modern-new",children:(0,t.jsx)(n.code,{children:"modern new"})})," 命令来开启测试功能。"]}),"\n",(0,t.jsx)(n.p,{children:"在模块工程方案中，对于测试用例或者说编写测试的文件有如下约定："}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["项目目录下的 ",(0,t.jsx)(n.code,{children:"tests"})," 目录为测试用例和测试文件的目录，",(0,t.jsx)(n.strong,{children:"不支持更改运行测试用例的目录"}),"。"]}),"\n",(0,t.jsxs)(n.li,{children:["默认会自动将后缀为 ",(0,t.jsx)(n.code,{children:".test.[tj]sx?"})," 的文件识别为测试文件。"]}),"\n",(0,t.jsxs)(n.li,{children:["其他的 ",(0,t.jsx)(n.code,{children:".[tj]sx?"})," 后缀的文件被识别为普通的文件，可以用于测试的 ",(0,t.jsx)(n.code,{children:"utils"})," 文件或者其他用途。"]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"运行测试",children:["运行测试",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#运行测试",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"当准备好了依赖、增加了相关配置以及了解了测试用例在哪里编写后，我们可以通过以下命令来执行测试："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"modern test\n\n// 更新 snapshot\nmodern test --updateSnapshot\n"})}),"\n",(0,t.jsx)(n.p,{children:"执行之后，会看到测试的结果："}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://lf3-static.bytednsdoc.com/obj/eden-cn/uhbfnupenuhf/test-result.png",alt:"test-result"})}),"\n",(0,t.jsxs)(n.h2,{id:"使用配置",children:["使用配置",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用配置",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"模块工程方案对测试提供了以下配置："}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/config/testing",children:(0,t.jsx)(n.code,{children:"testing"})})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["可以在 ",(0,t.jsx)(n.code,{children:"modern.config.(j|t)s"})," 中增加它。"]}),"\n",(0,t.jsxs)(n.h2,{id:"测试示例",children:["测试示例",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试示例",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"普通模块",children:["普通模块",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#普通模块",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"对于普通的模块，我们可以按照如下方式使用测试功能："}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"首先是模块的代码："}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="./src/index.ts"',children:"export default function () {\n  return 'hello world';\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["然后在测试文件中，我们可以按以下方式引用，其中 ",(0,t.jsx)(n.code,{children:"@"})," 指向了源码目录，在初始化项目的 ",(0,t.jsx)(n.code,{children:"tests/tsconfig.json"})," 的 ",(0,t.jsx)(n.code,{children:"paths"})," 中定义了。"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="./tests/index.test.ts"',children:"import main from '@/index';\n\ndescribe('默认值 cases', () => {\n  test('Have returns', () => {\n    const drink = jest.fn(main);\n    drink();\n    expect(drink).toHaveReturned();\n  });\n});\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["最后我们可以执行 ",(0,t.jsx)(n.code,{children:"modern test"}),"："]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm test\n## or\nyarn test\n## or\nnpm run test\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"组件",children:["组件",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件",children:"#"})]}),"\n","\n",(0,t.jsxs)(n.p,{children:["对于组件，Modern.js 的 Runtime API 提供了用于测试 UI 组件的功能，其功能由 ",(0,t.jsx)(n.code,{children:"@modern-js/runtime/testing"})," 提供。"]}),"\n",(0,t.jsxs)(n.div,{className:"modern-directive tip",children:[(0,t.jsx)(n.div,{className:"modern-directive-title",children:"TIP"}),(0,t.jsx)(n.div,{className:"modern-directive-content",children:(0,t.jsxs)(n.p,{children:["如果需要使用 Runtime API，那么可以通过 ",(0,t.jsx)(n.a,{href:"/guide/basic/command-preview",children:"微生成器"})," 开启。\n"]})})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"首先是组件的代码："}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",meta:'title="./src/index.tsx"',children:"export const default () {\n  return (\n    <div>This is a UI Component</div>\n  );\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["然后在测试文件中，我们可以按以下方式引用，其中 ",(0,t.jsx)(n.code,{children:"@"})," 指向了源码目录，在初始化项目的 ",(0,t.jsx)(n.code,{children:"tests/tsconfig.json"})," 的 ",(0,t.jsx)(n.code,{children:"paths"})," 中定义了。"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",meta:'title="./tests/index.test.tsx"',children:"import { render, screen } from '@modern-js/runtime/testing';\n\nimport Component from '@/index';\n\ndescribe('默认值 cases', () => {\n  test('Rendered', () => {\n    render(<Component />);\n    expect(screen.getByText('This is a UI Component')).toBeInTheDocument();\n  });\n});\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["最后我们可以执行 ",(0,t.jsx)(n.code,{children:"modern test"}),"。"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm test\n## or\nyarn test\n## or\nnpm run test\n"})})]})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fguide%2Fbasic%2Ftest-your-project.mdx"]={toc:[{text:"先决条件和约定",id:"先决条件和约定",depth:2},{text:"运行测试",id:"运行测试",depth:2},{text:"使用配置",id:"使用配置",depth:2},{text:"测试示例",id:"测试示例",depth:2},{text:"普通模块",id:"普通模块",depth:3},{text:"组件",id:"组件",depth:3}],title:"测试项目",frontmatter:{sidebar_position:6}};var h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,c.useMDXComponents)(),e.components).wrapper;return n?(0,t.jsx)(n,(0,i._)((0,d._)({},e),{children:(0,t.jsx)(l,(0,d._)({},e))})):l(e)}}}]);