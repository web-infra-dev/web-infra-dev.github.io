(self.webpackChunk_modern_js_module_tools_docs=self.webpackChunk_modern_js_module_tools_docs||[]).push([["docs_en_plugins_official-list_plugin-import_mdx"],{68815:function(e,n,r){"use strict";r.r(n),r.d(n,{default:function(){return d}});var o,i=r("15169"),s=r("43932"),t=r("9880"),l=r("23169");function a(e){var n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",div:"div",h2:"h2",h3:"h3",pre:"pre",ul:"ul",li:"li",strong:"strong"},(0,l.useMDXComponents)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"import-plugin",children:["Import Plugin",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#import-plugin",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.a,{href:"https://swc.rs/",target:"_blank",rel:"noopener noreferrer",children:"SWC"})," provides the same ability and configuration as ",(0,t.jsx)(n.a,{href:"https://github.com/umijs/babel-plugin-import",target:"_blank",rel:"noopener noreferrer",children:(0,t.jsx)(n.code,{children:"babel-plugin-import"})}),"."]}),"\n",(0,t.jsxs)(n.div,{className:"modern-directive tip",children:[(0,t.jsx)(n.div,{className:"modern-directive-title",children:"TIP"}),(0,t.jsx)(n.div,{className:"modern-directive-content",children:(0,t.jsxs)(n.p,{children:["Since ",(0,t.jsx)(n.code,{children:"@modern-js/module-tools"})," version >= v2.16.0, this plugin functionality is built into Module Tools and is provided by ",(0,t.jsx)(n.a,{href:"/api/config/build-config#transformimport",children:(0,t.jsx)(n.code,{children:"transformImport"})}),".\n"]})})]}),"\n",(0,t.jsxs)(n.h2,{id:"quick-start",children:["Quick Start",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#quick-start",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"install",children:["Install",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#install",children:"#"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# npm\nnpm install @modern-js/plugin-module-import -D\n\n# yarn\nyarn add @modern-js/plugin-module-import -D\n\n# pnpm\npnpm add @modern-js/plugin-module-import -D\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"register",children:["Register",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#register",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"In Module Tools, you can register plugins in the following way:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { moduleTools, defineConfig } from '@modern-js/module-tools';\nimport { modulePluginImport } from '@modern-js/plugin-module-import';\n\nexport default defineConfig({\n  plugins: [\n    moduleTools(),\n    modulePluginImport({\n      pluginImport: [\n        {\n          libraryName: 'antd',\n          style: true,\n        },\n      ],\n    }),\n  ],\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:"This way we can use the ability of automatic import in Module Tools."}),"\n",(0,t.jsxs)(n.h2,{id:"configurations",children:["Configurations",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configurations",children:"#"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"type Options = {\n  pluginImport?: ImportItem[];\n};\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"pluginimport",children:["pluginImport",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#pluginimport",children:"#"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type"}),": ",(0,t.jsx)(n.code,{children:"object[]"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The elements of the array are configuration objects for ",(0,t.jsx)(n.code,{children:"babel-plugin-import"}),", which can be referred to ",(0,t.jsx)(n.a,{href:"https://github.com/umijs/babel-plugin-import#options",target:"_blank",rel:"noopener noreferrer",children:"options"}),"ã€‚"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { modulePluginImport } from '@modern-js/plugin-module-import';\nimport { moduleTools, defineConfig } from '@modern-js/module-tools';\n\nexport default defineConfig({\n  plugins: [\n    moduleTools(),\n    modulePluginImport({\n      pluginImport: [\n        // babel-plugin-import`s options config\n        {\n          libraryName: 'foo',\n          style: true,\n        },\n      ],\n    }),\n  ],\n});\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"notes",children:["Notes",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#notes",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://swc.rs/",target:"_blank",rel:"noopener noreferrer",children:"SWC"})," (Speedy Web Compiler) is written in Rust, and this plugin is based on SWC and ported from ",(0,t.jsx)(n.a,{href:"https://github.com/umijs/babel-plugin-import",target:"_blank",rel:"noopener noreferrer",children:"babel-plugin-import"}),". The configuration options remain consistent."]}),"\n",(0,t.jsxs)(n.p,{children:["Some configurations can accept functions, such as ",(0,t.jsx)(n.code,{children:"customName"}),", ",(0,t.jsx)(n.code,{children:"customStyleName"}),", etc. These JavaScript functions are called by Rust through Node-API, which can cause some performance degradation."]}),"\n",(0,t.jsxs)(n.p,{children:["Simple function logic can be replaced by template language. Therefore, for configurations such as ",(0,t.jsx)(n.code,{children:"customName"}),", ",(0,t.jsx)(n.code,{children:"customStyleName"}),", etc., instead of passing functions, you can also pass a string as a template to replace the function, improving performance."]}),"\n",(0,t.jsx)(n.p,{children:"We will use the following code as example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { MyButton as Btn } from 'foo';\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add the following configuration on the right-hand side:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"modulePluginImport({\n  pluginImport: [\n    {\n      libraryName: 'foo',\n      customName: 'foo/es/{{ member }}',\n    },\n  ],\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"{{ member }}"})," in it will be replaced with the corresponding import member. After transformation:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import Btn from 'foo/es/MyButton';\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Template ",(0,t.jsx)(n.code,{children:"customName: 'foo/es/{{ member }}'"})," is the same as ",(0,t.jsx)(n.code,{children:" customName: (member) => `foo/es/${member}` "}),", but template value has no performance overhead of Node-API."]}),"\n",(0,t.jsxs)(n.p,{children:["The template used here is ",(0,t.jsx)(n.a,{href:"https://handlebarsjs.com",target:"_blank",rel:"noopener noreferrer",children:"handlebars"}),". There are some useful builtin tools, Take the above import statement as an example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { modulePluginImport } from '@modern-js/plugin-module-import';\nimport { moduleTools, defineConfig } from '@modern-js/module-tools';\n\nexport default defineConfig({\n  plugins: [\n    moduleTools(),\n    modulePluginImport({\n      pluginImport: [\n        {\n          libraryName: 'foo',\n          customName: 'foo/es/{{ kebabCase member }}',\n        },\n      ],\n    }),\n  ],\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:"Transformed to:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import Btn from 'foo/es/my-button';\n"})}),"\n",(0,t.jsx)(n.p,{children:"In addition to kebabCase, there are cameraCase, snakeCase, upperCase and lowerCase can be used as well."})]})}(o=globalThis).__RSPRESS_PAGE_META||(o.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["en%2Fplugins%2Fofficial-list%2Fplugin-import.mdx"]={toc:[{text:"Quick Start",id:"quick-start",depth:2},{text:"Install",id:"install",depth:3},{text:"Register",id:"register",depth:3},{text:"Configurations",id:"configurations",depth:2},{text:"pluginImport",id:"pluginimport",depth:3},{text:"Notes",id:"notes",depth:2}],title:"Import Plugin",frontmatter:{}};var d=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,l.useMDXComponents)(),e.components).wrapper;return n?(0,t.jsx)(n,(0,s._)((0,i._)({},e),{children:(0,t.jsx)(a,(0,i._)({},e))})):a(e)}}}]);