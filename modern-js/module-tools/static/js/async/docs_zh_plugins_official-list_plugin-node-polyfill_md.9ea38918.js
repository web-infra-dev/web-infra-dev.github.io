(self.webpackChunk_modern_js_module_tools_docs=self.webpackChunk_modern_js_module_tools_docs||[]).push([["docs_zh_plugins_official-list_plugin-node-polyfill_md"],{97615:function(e,l,n){"use strict";n.r(l),n.d(l,{default:function(){return h}});var d,i=n("15169"),s=n("43932"),r=n("9880"),o=n("23169");function c(e){var l=Object.assign({h1:"h1",a:"a",div:"div",p:"p",h2:"h2",h3:"h3",pre:"pre",code:"code",ul:"ul",li:"li",strong:"strong"},(0,o.useMDXComponents)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(l.h1,{id:"node-polyfill-插件",children:["Node Polyfill 插件",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#node-polyfill-插件",children:"#"})]}),"\n",(0,r.jsxs)(l.div,{className:"modern-directive tip",children:[(0,r.jsx)(l.div,{className:"modern-directive-title",children:"Node Polyfill 介绍"}),(0,r.jsx)(l.div,{className:"modern-directive-content",children:(0,r.jsx)(l.p,{children:"通常情况下，我们不会在浏览器端使用 Node 模块。但在当前代码需要同时在 Node 端和浏览器端运行时，用到一些 Node 模块是有可能的。Node Polyfill 为这些 Node 模块提供了浏览器版本的 polyfills。"})})]}),"\n",(0,r.jsx)(l.p,{children:"通过使用 Node Polyfill 插件，会自动注入 Node 核心模块在浏览器端的 polyfills，让你可以在浏览器端放心使用这些模块。"}),"\n",(0,r.jsxs)(l.h2,{id:"快速开始",children:["快速开始",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#快速开始",children:"#"})]}),"\n",(0,r.jsxs)(l.h3,{id:"安装",children:["安装",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#安装",children:"#"})]}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-bash",children:"# npm\nnpm install @modern-js/plugin-module-node-polyfill -D\n\n# yarn\nyarn add @modern-js/plugin-module-node-polyfill -D\n\n# pnpm\npnpm add @modern-js/plugin-module-node-polyfill -D\n"})}),"\n",(0,r.jsxs)(l.h3,{id:"注册插件",children:["注册插件",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#注册插件",children:"#"})]}),"\n",(0,r.jsx)(l.p,{children:"在 Module Tools 中，你可以按照如下方式注册插件："}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-ts",children:"import { moduleTools, defineConfig } from '@modern-js/module-tools';\nimport { modulePluginNodePolyfill } from '@modern-js/plugin-module-node-polyfill';\n\nexport default defineConfig({\n  plugins: [\n    moduleTools(),\n    modulePluginNodePolyfill(),\n  ],\n});\n"})}),"\n",(0,r.jsxs)(l.h2,{id:"配置",children:["配置",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#配置",children:"#"})]}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.strong,{children:"类型："})}),"\n"]}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-ts",children:"type NodePolyfillOptions = {\n  exclude?: string[];\n  overrides?: Record<NodePolyfillKey, string>;\n}\n"})}),"\n",(0,r.jsxs)(l.h3,{id:"exclude",children:["exclude",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#exclude",children:"#"})]}),"\n",(0,r.jsx)(l.p,{children:"排除要注入的 Node Polyfill。"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-ts",children:"import { moduleTools, defineConfig } from '@modern-js/module-tools';\nimport { modulePluginNodePolyfill } from '@modern-js/plugin-module-node-polyfill';\n\nexport default defineConfig({\n  plugins: [\n    moduleTools(),\n    modulePluginNodePolyfill({\n      exclude: ['console'],\n    }),\n  ],\n});\n"})}),"\n",(0,r.jsxs)(l.h3,{id:"overrides",children:["overrides",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#overrides",children:"#"})]}),"\n",(0,r.jsx)(l.p,{children:"覆盖内置的 Node Polyfill。"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-ts",children:"import { moduleTools, defineConfig } from '@modern-js/module-tools';\nimport { modulePluginNodePolyfill } from '@modern-js/plugin-module-node-polyfill';\n\nexport default defineConfig({\n  plugins: [\n    moduleTools(),\n    modulePluginNodePolyfill({\n      overrides: {\n        fs: path.join(__dirname, './custom-fs.js'),\n      }\n    }),\n  ],\n});\n"})}),"\n",(0,r.jsxs)(l.h2,{id:"node-polyfills",children:["Node Polyfills",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#node-polyfills",children:"#"})]}),"\n",(0,r.jsxs)(l.h3,{id:"globals",children:["Globals",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#globals",children:"#"})]}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"Buffer"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"process"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"console"})}),"\n"]}),"\n",(0,r.jsx)(l.p,{children:"当你在代码中使用以上全局变量时，对应 polyfill 会被自动注入。"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-ts",children:"const bufferData = Buffer.from('xxxx');\n"})}),"\n",(0,r.jsxs)(l.h3,{id:"modules",children:["Modules",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#modules",children:"#"})]}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"assert"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"buffer"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"console"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"constants"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"crypto"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"domain"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"events"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"http"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"https"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"os"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"path"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"punycode"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"process"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"querystring"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"stream"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"_stream_duplex"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"_stream_passthrough"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"_stream_readable"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"_stream_transform"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"_stream_writable"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"string_decoder"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"sys"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"timers"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"tty"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"url"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"util"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"vm"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"zlib"})}),"\n"]}),"\n",(0,r.jsxs)(l.p,{children:["当你通过 ",(0,r.jsx)(l.code,{children:"require"})," 或 ",(0,r.jsx)(l.code,{children:"import"})," 等语法在代码中引用以上模块时，对应 polyfill 会被注入。"]}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-ts",children:"import { Buffer } from 'buffer';\n\nconst bufferData = Buffer.from('xxxx');\n"})}),"\n",(0,r.jsxs)(l.h3,{id:"fallbacks",children:["Fallbacks",(0,r.jsx)(l.a,{className:"header-anchor","aria-hidden":"true",href:"#fallbacks",children:"#"})]}),"\n",(0,r.jsxs)(l.ul,{children:["\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"child_process"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"cluster"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"dgram"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"dns"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"fs"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"module"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"net"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"readline"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"repl"})}),"\n",(0,r.jsx)(l.li,{children:(0,r.jsx)(l.code,{children:"tls"})}),"\n"]}),"\n",(0,r.jsx)(l.p,{children:"目前浏览器端没有以上模块的 polyfill，因此当你引用以上模块时，会自动 fallback 为一个空对象。"}),"\n",(0,r.jsx)(l.pre,{children:(0,r.jsx)(l.code,{className:"language-ts",children:"import fs from 'fs';\n\nconsole.log(fs); // -> {}\n"})})]})}(d=globalThis).__RSPRESS_PAGE_META||(d.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fplugins%2Fofficial-list%2Fplugin-node-polyfill.md"]={toc:[{text:"快速开始",id:"快速开始",depth:2},{text:"安装",id:"安装",depth:3},{text:"注册插件",id:"注册插件",depth:3},{text:"配置",id:"配置",depth:2},{text:"exclude",id:"exclude",depth:3},{text:"overrides",id:"overrides",depth:3},{text:"Node Polyfills",id:"node-polyfills",depth:2},{text:"Globals",id:"globals",depth:3},{text:"Modules",id:"modules",depth:3},{text:"Fallbacks",id:"fallbacks",depth:3}],title:"Node Polyfill 插件",frontmatter:{}};var h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},l=Object.assign({},(0,o.useMDXComponents)(),e.components).wrapper;return l?(0,r.jsx)(l,(0,s._)((0,i._)({},e),{children:(0,r.jsx)(c,(0,i._)({},e))})):c(e)}}}]);