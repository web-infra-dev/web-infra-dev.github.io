(self.webpackChunk_modern_js_module_tools_docs=self.webpackChunk_modern_js_module_tools_docs||[]).push([["docs_zh_guide_advance_in-depth-about-dev-command_md"],{67218:function(n,e,d){"use strict";d.r(e),d.d(e,{default:function(){return c}});var i,s=d("15169"),o=d("43932"),l=d("9880"),r=d("23169");function h(n){var e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ol:"ol",li:"li",ul:"ul",pre:"pre"},(0,r.useMDXComponents)(),n.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(e.h1,{id:"深入理解-dev-命令",children:["深入理解 dev 命令",(0,l.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#深入理解-dev-命令",children:"#"})]}),"\n",(0,l.jsxs)(e.p,{children:["模块工程提供的 ",(0,l.jsx)(e.code,{children:"dev"})," 命令主要用于代码的调试。"]}),"\n",(0,l.jsxs)(e.h2,{id:"命令运行的整体流程",children:["命令运行的整体流程",(0,l.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#命令运行的整体流程",children:"#"})]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:["当执行 ",(0,l.jsx)(e.code,{children:"dev"})," 命令的时候，Module Tools 开始寻找是否存在可以执行的调试工具或者任务。调试工具或者任务就是类似 Storybook 这样的 Module Tools 调试工具插件。"]}),"\n",(0,l.jsx)(e.li,{children:"当发现存在一个调试工具的时候，则会立即执行它。"}),"\n",(0,l.jsx)(e.li,{children:"当发现多个调试工具的时候，则显示调试工具列表菜单。可以通过选择某个调试工具对应的名称选项启动它。"}),"\n",(0,l.jsx)(e.li,{children:"当没有发现调试工具的时候，则告诉用户没有可用的调试工具。"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:["我们除了可以执行 ",(0,l.jsx)(e.code,{children:"dev"})," 命令以外，也可以通过 ",(0,l.jsx)(e.code,{children:"dev [调试工具名称]"})," 的方式来直接启动调试工具或者任务。"]}),"\n",(0,l.jsxs)(e.h2,{id:"扩展-dev-命令",children:["扩展 dev 命令",(0,l.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#扩展-dev-命令",children:"#"})]}),"\n",(0,l.jsx)(e.p,{children:"如果需要扩展 dev 命令或者说提供自己的 Module Tools 调试工具插件，那么你需要先了解以下内容："}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"/plugins/guide/getting-started",children:"开发插件"})}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"/api/plugin-api/plugin-hooks#%E8%B0%83%E8%AF%95%E9%92%A9%E5%AD%90",children:"调试工具插件 API"})}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"一般来说，实现一个什么都不做的调试工具，其实现代码以及相关配置如下："}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",meta:"do-nothing.ts",children:"export const myPlugin = (): CliPlugin<ModuleTools> => ({\n  name: 'do-nothing',\n  setup() {\n    return {\n      registerDev() {\n        return {\n          // 调试工具名称\n          name: 'do-nothing',\n          // 菜单显示内容\n          menuItem: {\n            name: 'DoNothing',\n            value: 'do-nothing',\n          },\n          // 定义的 dev 子命令\n          subCommands: ['donothing', 'dn'],\n          async action() {\n            // dev logic\n            console.info('Run build --watch, and do nothing.');\n          },\n        };\n      },\n    };\n  },\n});\n"})}),"\n",(0,l.jsx)(e.p,{children:"如果需要使用该调试工具插件，则需要在配置文件中增加它："}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ts",children:"import doNothingPlugin from './plugins/do-nothing';\n\nexport default defineConfig({\n  plugins: [\n    //..\n    doNothingPlugin()\n  ],\n});\n"})}),"\n",(0,l.jsxs)(e.p,{children:["此时我们执行 ",(0,l.jsx)(e.code,{children:"dev"})," 或者 ",(0,l.jsx)(e.code,{children:"dev do-nothing"})," 命令的时候，就可以执行它了。在执行后，它会先执行监听模式的源码构建任务，并紧接着打印日志信息。"]}),"\n",(0,l.jsxs)(e.p,{children:["对于目前官方支持的调试工具和第三方支持的调试工具，可以在",(0,l.jsx)(e.a,{href:"/plugins/official-list/overview",children:"插件列表"}),"中查看。"]})]})}(i=globalThis).__RSPRESS_PAGE_META||(i.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fguide%2Fadvance%2Fin-depth-about-dev-command.md"]={toc:[{text:"命令运行的整体流程",id:"命令运行的整体流程",depth:2},{text:"扩展 dev 命令",id:"扩展-dev-命令",depth:2}],title:"深入理解 dev 命令",frontmatter:{sidebar_position:2}};var c=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},(0,r.useMDXComponents)(),n.components).wrapper;return e?(0,l.jsx)(e,(0,o._)((0,s._)({},n),{children:(0,l.jsx)(h,(0,s._)({},n))})):h(n)}}}]);