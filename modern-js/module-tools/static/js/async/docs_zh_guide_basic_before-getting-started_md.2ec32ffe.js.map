{"version":3,"file":"static/js/async/docs_zh_guide_basic_before-getting-started_md.2ec32ffe.js","sources":["./docs/zh/guide/basic/before-getting-started.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Fbasic%2Fbefore-getting-started.md\"] = {\"toc\":[{\"text\":\"环境准备\",\"id\":\"环境准备\",\"depth\":2},{\"text\":\"初识 npm\",\"id\":\"初识-npm\",\"depth\":2},{\"text\":\"npm 包类型项目\",\"id\":\"npm-包类型项目\",\"depth\":2},{\"text\":\"使用第三方 npm 包\",\"id\":\"使用第三方-npm-包\",\"depth\":2},{\"text\":\"还需要了解的 npm 零碎知识\",\"id\":\"还需要了解的-npm-零碎知识\",\"depth\":2},{\"text\":\"npm 包的程序入口\",\"id\":\"npm-包的程序入口\",\"depth\":3},{\"text\":\"\\\\\\\"scripts\\\\\\\"\",\"id\":\"scripts\",\"depth\":3},{\"text\":\"npm install\",\"id\":\"npm-install\",\"depth\":4},{\"text\":\"npm publish\",\"id\":\"npm-publish\",\"depth\":4},{\"text\":\"peerDependencies\",\"id\":\"peerdependencies\",\"depth\":3},{\"text\":\"npm 包管理器\",\"id\":\"npm-包管理器\",\"depth\":2},{\"text\":\"Module Tools 配置文件\",\"id\":\"module-tools-配置文件\",\"depth\":2}],\"title\":\"开始之前\",\"frontmatter\":{\"sidebar_position\":1}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        h2: \"h2\",\n        p: \"p\",\n        strong: \"strong\",\n        code: \"code\",\n        pre: \"pre\",\n        ul: \"ul\",\n        li: \"li\",\n        blockquote: \"blockquote\",\n        div: \"div\",\n        h3: \"h3\",\n        h4: \"h4\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"开始之前\">{\"开始之前\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#开始之前\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.h2 id=\"环境准备\">{\"环境准备\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#环境准备\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"为了使用 Modern.js 模块工程解决方案，首先需要 \"}<_components.a href=\"https://nodejs.org/zh/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"NodeJS\"}</_components.a>{\"，我们推荐最新的\"}<_components.a href=\"https://github.com/nodejs/Release\" target=\"_blank\" rel=\"noopener noreferrer\">{\"长期维护版本\"}</_components.a>{\"，并确保 Node 版本大于等于 \"}<_components.strong>{\"14.18.0\"}</_components.strong>{\"。因为非稳定的 NodeJS 时常有一些 Bug，你可以使用 \"}<_components.a href=\"https://github.com/coreybutler/nvm-windows\" target=\"_blank\" rel=\"noopener noreferrer\">{\"nvm-windows\"}</_components.a>{\" 和 \"}<_components.a href=\"https://github.com/nvm-sh/nvm\" target=\"_blank\" rel=\"noopener noreferrer\">{\"nvm\"}</_components.a>{\"（Mac / Linux）安装，这样你就可以方便地切换到不同的 NodeJS 版本，这些版本可能会用于不同的项目。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"初识-npm\">{\"初识 npm\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#初识-npm\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"当 NodeJS 被安装后，你不仅可以在命令行中访问 \"}<_components.code>{\"node\"}</_components.code>{\" 可执行程序，同时你也可以执行 \"}<_components.code>{\"npm\"}</_components.code>{\" 命令。\"}</_components.p>{\"\\n\"}<_components.p>{\"npm 是 NodeJS 的标准软件包管理器。它一开始的用途是用于下载和管理 NodeJS 包的依赖关系，但后来它逐渐变成为一个用于前端 JavaScript 的工具。\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"如果你已经对 npm 和 npm 包的使用方式有所了解，那么可以直接跳到\"}<_components.a href=\"/guide/basic/before-getting-started#npm-%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8\">{\"「npm 包管理器」\"}</_components.a>{\"部分。\"}</_components.strong></_components.p>{\"\\n\"}<_components.h2 id=\"npm-包类型项目\">{\"npm 包类型项目\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#npm-包类型项目\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"那么什么是 npm 包类型的项目呢？当我们在一个空的项目目录下执行 \"}<_components.code>{\"npm init\"}</_components.code>{\" 命令的时候，它会在当前目录下面创建一个文件名为 \"}<_components.code>{\"package.json\"}</_components.code>{\" 的 JSON 文件。在创建过程中，我们需要填写包括但不限于 npm 包的名称、版本号、描述等等内容，这些填写的内容都会在生成的 \"}<_components.code>{\"package.json\"}</_components.code>{\" 文件中找到：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\">{'{\\n  \"name\": \"npm-demo\",\\n  \"version\": \"1.0.0\",\\n  \"description\": \"\",\\n  \"main\": \"index.js\",\\n  \"scripts\": {\\n    \"test\": \"echo \\\\\"Error: no test specified\\\\\" && exit 1\"\\n  },\\n  \"author\": \"\",\\n  \"license\": \"ISC\"\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"此时这个包含了初始化后的 \"}<_components.code>{\"package.json\"}</_components.code>{\" 文件的项目就是一个 npm 包类型的项目，你可以执行 \"}<_components.code>{\"npm publish\"}</_components.code>{\" 命令将这个项目发布到 \"}<_components.a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"npm Registry\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"npm Registry 是一个 \"}<_components.a href=\"https://docs.npmjs.com/about-the-public-npm-registry\" target=\"_blank\" rel=\"noopener noreferrer\">{\"npm 包存储的地方\"}</_components.a>{\"，开发者们不仅可以将他们自己的 npm 包发布到 npm Registry，还可以通过 npm Registry 使用其他开发者发布的 npm 包。\"}</_components.p>{\"\\n\"}<_components.p>{\"优质的 npm 包会有更多的人去使用，因为它不仅节省了很多代码实现的工作，同时也不容易让项目出现问题。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"使用第三方-npm-包\">{\"使用第三方 npm 包\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用第三方-npm-包\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"当要为初始化的项目增加第三方的 npm 包的时候，我们可以把这一过程叫做“为项目安装依赖”或是“为项目增加依赖”。在增加依赖之前，首先我们要特别了解一件事情 —— \"}<_components.strong>{\"npm 依赖的软件包类型\"}</_components.strong>{\"：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{'\"dependencies\"'}</_components.code>{\"：一种是你的应用程序在生产环境中需要的软件包。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{'\"devDependencies\"'}</_components.code>{\"：另一种是仅在本地开发和测试中需要的软件包。\"}{\"\\n\"}<_components.blockquote>{\"\\n\"}<_components.p>{\"软件包可以理解为是第三方的 npm 包。\"}</_components.p>{\"\\n\"}</_components.blockquote>{\"\\n\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"你可以通过执行 \"}<_components.code>{\"npm install npm-package-name\"}</_components.code>{\" 或者 \"}<_components.code>{\"npm add npm-package-name\"}</_components.code>{\" 的方式来安装在\"}<_components.strong>{\"生产环境中需要的软件包\"}</_components.strong>{\"，或者也可以在 \"}<_components.code>{\"package.json\"}</_components.code>{\" 文件中手动的将需要安装的包和对应的\"}<_components.a href=\"https://docs.npmjs.com/about-semantic-versioning\" target=\"_blank\" rel=\"noopener noreferrer\">{\"语义化版本\"}</_components.a>{\"写在 \"}<_components.code>{'\"dependencies\"'}</_components.code>{\" 里，并执行 \"}<_components.code>{\"npm install\"}</_components.code>{\" 命令：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\">{'{\\n  \"name\": \"your-npm-project\",\\n  \"dependencies\": {\\n    \"npm-package-name\": \"0.1.0\"\\n  }\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"同理，你也可以执行 \"}<_components.code>{\"npm install npm-package-name --save-dev\"}</_components.code>{\" 或 \"}<_components.code>{\"npm add npm-package-name --save-dev\"}</_components.code>{\" 的方式来安装\"}<_components.strong>{\"仅在本地开发和测试中需要的软件包\"}</_components.strong>{\"，或者也可以在 \"}<_components.code>{\"package.json\"}</_components.code>{\" 文件中手动的将需要安装的包和对应的\"}<_components.a href=\"https://docs.npmjs.com/about-semantic-versioning\" target=\"_blank\" rel=\"noopener noreferrer\">{\"语义化版本\"}</_components.a>{\"写在 \"}<_components.code>{'\"devDependencies\"'}</_components.code>{\" 里，并执行 \"}<_components.code>{\"npm install\"}</_components.code>{\" 命令：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\">{'{\\n  \"name\": \"your-npm-project\",\\n  \"devDependencies\": {\\n    \"npm-package-name\": \"0.1.0\"\\n  }\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.strong>{\"在安装或者使用第三方 npm 包的时候一定要确定它们的用途，以及通过区分它们的类型确定好它们应该放在 \"}<_components.code>{'\"dependencies\"'}</_components.code>{\" 还是 \"}<_components.code>{'\"devDependencies\"'}</_components.code>{\" 中。\"}</_components.strong></_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"一般来说，需要在源代码中使用到的包都属于 \"}<_components.code>{\"dependencies\"}</_components.code>{\" 依赖。除非你通过打包的方式将依赖的代码输出到本地，那么这种情况可以将它作为 \"}<_components.code>{\"devDependencies\"}</_components.code>{\" 依赖。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"还需要了解的-npm-零碎知识\">{\"还需要了解的 npm 零碎知识\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#还需要了解的-npm-零碎知识\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"npm-包的程序入口\">{\"npm 包的程序入口\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#npm-包的程序入口\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"在 \"}<_components.code>{\"package.json\"}</_components.code>{\" 中存在一个 \"}<_components.code>{'\"main\"'}</_components.code>{\" 属性，它对应的值是一个模块 ID，或者更直观的说是一个 NodeJS 文件路径，它是你程序的主要入口。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如你的包名为 \"}<_components.code>{\"foo\"}</_components.code>{\"，并且用户安装了它，然后执行 \"}<_components.code>{'require(\"foo\")'}</_components.code>{\" 代码，那么 \"}<_components.code>{\"foo\"}</_components.code>{\" 这个 npm 包的 \"}<_components.code>{'\"main\"'}</_components.code>{\" 字段对应的文件将会被导出。\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"推荐在你的 npm 包里一定要设置 \"}<_components.code>{'\"main\"'}</_components.code>{\" 字段\"}</_components.strong>{\"。如果没有设置 \"}<_components.code>{'\"main\"'}</_components.code>{\"，则默认入口为包的根目录下的 \"}<_components.code>{\"index.js\"}</_components.code>{\" 文件。\"}</_components.p>{\"\\n\"}<_components.p>{\"除了需要设置 \"}<_components.code>{'\"main\"'}</_components.code>{\" 属性以外，一般还会设置 \"}<_components.code>{'\"module\"'}</_components.code>{\" 属性。它与 \"}<_components.code>{'\"main\"'}</_components.code>{\" 属性的用途类似，它主要是用于在 webpack 场景下使用。webpack 在大多数情况下，会以 \"}<_components.strong>{'\"module\" -> \"main\"'}</_components.strong>{\" 这个顺序读取 npm 包的入口（文件）。\"}</_components.p>{\"\\n\"}<_components.blockquote>{\"\\n\"}<_components.p>{\"想要了解关于 webpack 如何做这件事，可以查看这个\"}<_components.a href=\"https://webpack.js.org/configuration/resolve/#resolvemainfields\" target=\"_blank\" rel=\"noopener noreferrer\">{\"链接\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}</_components.blockquote>{\"\\n\"}<_components.h3 id=\"scripts\">{'\"scripts\"'}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#scripts\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"package.json\"}</_components.code>{\" 文件的 \"}<_components.code>{'\"scripts\"'}</_components.code>{\" 属性支持一些内置的脚本和 npm 预设的生命周期事件，以及任意的脚本。\"}</_components.p>{\"\\n\"}<_components.p>{\"这些都可以通过运行 \"}<_components.code>{\"npm run-script <stage>\"}</_components.code>{\" 或简称 \"}<_components.code>{\"npm run <stage>\"}</_components.code>{\" 来执行。\"}</_components.p>{\"\\n\"}<_components.p>{\"名称匹配的\"}<_components.a href=\"https://docs.npmjs.com/cli/v9/using-npm/scripts#pre--post-scripts\" target=\"_blank\" rel=\"noopener noreferrer\">{\"前置命令和后置命令\"}</_components.a>{\"也会被运行（例如 \"}<_components.code>{\"premyscript\"}</_components.code>{\"、\"}<_components.code>{\"myscript\"}</_components.code>{\"、\"}<_components.code>{\"postmyscript\"}</_components.code>{\"）。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\">{'{\\n  \"scripts\": {\\n    \"premyscript\": \"\",\\n    \"myscript\": \"\",\\n    \"postmyscript\": \"\"\\n  }\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"当执行 \"}<_components.code>{\"npm run myscripts\"}</_components.code>{\" 的时候，\"}<_components.code>{\"premyscripts\"}</_components.code>{\" 对应的脚本会在它之前执行，\"}<_components.code>{\"postmyscripts\"}</_components.code>{\" 对应的脚本会在它之后执行。\"}</_components.p>{\"\\n\"}<_components.p>{\"来自依赖的脚本命令可以用 \"}<_components.code>{\"npm explore <pkg> -- npm run <stage>\"}</_components.code>{\" 运行。\"}</_components.p>{\"\\n\"}<_components.p>{\"还有一些特殊的生命周期脚本（Life Scripts），只在某些情况下发生。这里介绍几个通常需要了解的情况。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"npm-install\"><_components.code>{\"npm install\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#npm-install\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"当你运行 \"}<_components.code>{\"npm install -g <pkg-name>\"}</_components.code>{\" 时，以下脚本会运行。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"preinstall\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"install\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"postinstall\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"prepublish\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"preprepare\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"prepare\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"postprepare\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"如果你的软件包根目录有一个 \"}<_components.code>{\"binding.gyp\"}</_components.code>{\" 文件，而你没有定义 \"}<_components.code>{\"install\"}</_components.code>{\" 或 \"}<_components.code>{\"preinstall\"}</_components.code>{\" 脚本，那么 npm 将以 \"}<_components.code>{\"node-gyp rebuild\"}</_components.code>{\" 作为默认的 install 命令，使用 \"}<_components.a href=\"https://github.com/nodejs/node-gyp\" target=\"_blank\" rel=\"noopener noreferrer\">{\"node-gyp\"}</_components.a>{\" 进行编译。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"npm-publish\"><_components.code>{\"npm publish\"}</_components.code><_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#npm-publish\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"当发布项目的时候，执行该命令会触发以下脚本：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"prepublishOnly\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"prepack\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"prepare\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"postpack\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"publish\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"postpublish\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"当以 \"}<_components.a href=\"https://docs.npmjs.com/cli/v7/commands/npm-publish#dry-run\" target=\"_blank\" rel=\"noopener noreferrer\"><_components.code>{\"--dry-run\"}</_components.code></_components.a>{\" 模式运行的时候，\"}<_components.code>{\"prepare\"}</_components.code>{\" 对应的脚本将不会执行。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"peerdependencies\">{\"peerDependencies\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#peerdependencies\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"在某些情况下，你的 npm 项目与它的宿主工具或者库之间存在某种兼容关系（例如一个 webpack 插件项目和 webpack），同时你的 npm 项目不想将宿主作为必要的依赖，这个时候通常说明你的项目可能是这个宿主工具或者库的插件。你的 npm 项目会对宿主包的版本有一定的要求，因为只有在特定的版本下才会暴露出 npm 项目所需要的 API。\"}</_components.p>{\"\\n\"}<_components.p>{\"关于更多 \"}<_components.code>{\"peerDependencies\"}</_components.code>{\" 的解释，可以通过下面的链接了解 npm、pnpm、Yarn 对于它的不同处理方式：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.a href=\"https://docs.npmjs.com/cli/v9/configuring-npm/package-json#peerdependencies\" target=\"_blank\" rel=\"noopener noreferrer\">{\"npm 对 peerDependencies 的解释\"}</_components.a></_components.li>{\"\\n\"}<_components.li><_components.a href=\"https://pnpm.io/feature-comparison\" target=\"_blank\" rel=\"noopener noreferrer\">{\"pnpm vs npm VS Yarn\"}</_components.a></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"npm-包管理器\">{\"npm 包管理器\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#npm-包管理器\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"除了 npm 这种标准的包管理器以外，目前主流的还有 \"}<_components.strong>{\"pnpm\"}</_components.strong>{\" 和 \"}<_components.strong>{\"Yarn\"}</_components.strong>{\"，它们都是不错的 npm cli 替代品。\"}</_components.p>{\"\\n\"}<_components.p>{\"推荐使用 \"}<_components.a href=\"https://pnpm.io/installation\" target=\"_blank\" rel=\"noopener noreferrer\">{\"pnpm\"}</_components.a>{\" 来管理项目依赖，可以通过下面的方式安装它：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"npm install -g pnpm\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"module-tools-配置文件\">{\"Module Tools 配置文件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#module-tools-配置文件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"通过\"}<_components.code>{\"@modern-js/create\"}</_components.code>{\"创建的模块工程项目目录下提供了 Module Tools 的配置文件 —— \"}<_components.code>{\"modern.config.(j|t)s\"}</_components.code>{\"。但 \"}<_components.code>{\"modern.config\"}</_components.code>{\" 配置文件不是必须存在的。\"}</_components.p>{\"\\n\"}<_components.p>{\"默认情况下，生成的配置文件的内容如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"import { moduleTools, defineConfig } from '@modern-js/module-tools';\\n\\nexport default defineConfig({\\n  plugins: [moduleTools()],\\n  buildPreset: 'npm-library',\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.strong>{\"我们推荐使用 \"}<_components.code>{\"defineConfig\"}</_components.code>{\" 函数\"}</_components.strong>{\"，不过并不强制使用它。因此你也可以在配置文件中直接返回一个对象：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"modern.config.ts\"'>{\"import { moduleTools } from '@modern-js/module-tools';\\n\\nexport default {\\n  plugins: [moduleTools()],\\n  buildPreset: 'npm-library',\\n};\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","h2","p","strong","code","pre","ul","li","blockquote","div","h3","h4","components","id","className","href","target","rel","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}