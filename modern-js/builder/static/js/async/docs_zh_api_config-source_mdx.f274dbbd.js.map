{"version":3,"file":"static/js/async/docs_zh_api_config-source_mdx.f274dbbd.js","sources":["./docs/zh/api/config-source.mdx","./docs/zh/config/source/alias.md","./docs/zh/config/source/aliasStrategy.md","./docs/zh/config/source/compileJsDataURI.md","./docs/zh/config/source/define.md","./docs/zh/config/source/exclude.md","./docs/zh/config/source/globalVars.md","./docs/zh/config/source/include.md","./docs/zh/config/source/moduleScopes.md","./docs/zh/config/source/preEntry.md","./docs/zh/config/source/resolveExtensionPrefix.md","./docs/zh/config/source/resolveMainFields.md","./docs/zh/config/source/transformImport.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fapi%2Fconfig-source.mdx\"] = {\"toc\":[{\"text\":\"source.alias\",\"id\":\"sourcealias\",\"depth\":2},{\"text\":\"source.aliasStrategy\",\"id\":\"sourcealiasstrategy\",\"depth\":2},{\"text\":\"source.include\",\"id\":\"sourceinclude\",\"depth\":2},{\"text\":\"source.exclude\",\"id\":\"sourceexclude\",\"depth\":2},{\"text\":\"source.compileJsDataURI\",\"id\":\"sourcecompilejsdatauri\",\"depth\":2},{\"text\":\"source.define\",\"id\":\"sourcedefine\",\"depth\":2},{\"text\":\"source.globalVars\",\"id\":\"sourceglobalvars\",\"depth\":2},{\"text\":\"source.moduleScopes\",\"id\":\"sourcemodulescopes\",\"depth\":2},{\"text\":\"source.transformImport\",\"id\":\"sourcetransformimport\",\"depth\":2},{\"text\":\"source.preEntry\",\"id\":\"sourcepreentry\",\"depth\":2},{\"text\":\"source.resolveExtensionPrefix\",\"id\":\"sourceresolveextensionprefix\",\"depth\":2},{\"text\":\"source.resolveMainFields\",\"id\":\"sourceresolvemainfields\",\"depth\":2}],\"title\":\"Source Config\",\"frontmatter\":{\"extractApiHeaders\":[2]}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport Alias from '@zh/config/source/alias.md';\nimport AliasStrategy from '@zh/config/source/aliasStrategy.md';\nimport Include from '@zh/config/source/include.md';\nimport Exclude from '@zh/config/source/exclude.md';\nimport CompileJsDataURI from '@zh/config/source/compileJsDataURI.md';\nimport Define from '@zh/config/source/define.md';\nimport GlobalVars from '@zh/config/source/globalVars.md';\nimport ModuleScopes from '@zh/config/source/moduleScopes.md';\nimport TransformImport from '@zh/config/source/transformImport.md';\nimport PreEntry from '@zh/config/source/preEntry.md';\nimport ResolveExtensionPrefix from '@zh/config/source/resolveExtensionPrefix.md';\nimport ResolveMainFields from '@zh/config/source/resolveMainFields.md';\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"source-config\">{\"Source Config\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#source-config\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"本章节描述了 Builder 中与源代码解析、编译方式相关的配置。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"sourcealias\">{\"source.alias\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourcealias\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<Alias/>{\"\\n\"}<_components.h2 id=\"sourcealiasstrategy\">{\"source.aliasStrategy\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourcealiasstrategy\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<AliasStrategy/>{\"\\n\"}<_components.h2 id=\"sourceinclude\">{\"source.include\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourceinclude\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<Include/>{\"\\n\"}<_components.h2 id=\"sourceexclude\">{\"source.exclude\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourceexclude\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<Exclude/>{\"\\n\"}<_components.h2 id=\"sourcecompilejsdatauri\">{\"source.compileJsDataURI\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourcecompilejsdatauri\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<CompileJsDataURI/>{\"\\n\"}<_components.h2 id=\"sourcedefine\">{\"source.define\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourcedefine\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<Define/>{\"\\n\"}<_components.h2 id=\"sourceglobalvars\">{\"source.globalVars\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourceglobalvars\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<GlobalVars/>{\"\\n\"}<_components.h2 id=\"sourcemodulescopes\">{\"source.moduleScopes\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourcemodulescopes\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<ModuleScopes/>{\"\\n\"}<_components.h2 id=\"sourcetransformimport\">{\"source.transformImport\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourcetransformimport\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<TransformImport/>{\"\\n\"}<_components.h2 id=\"sourcepreentry\">{\"source.preEntry\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourcepreentry\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<PreEntry/>{\"\\n\"}<_components.h2 id=\"sourceresolveextensionprefix\">{\"source.resolveExtensionPrefix\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourceresolveextensionprefix\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<ResolveExtensionPrefix/>{\"\\n\"}<_components.h2 id=\"sourceresolvemainfields\">{\"source.resolveMainFields\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#sourceresolvemainfields\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}{\"\\n\"}<ResolveMainFields/></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2Falias.md\"] = {\"toc\":[{\"text\":\"Object 类型\",\"id\":\"object-类型\",\"depth\":3},{\"text\":\"Function 类型\",\"id\":\"function-类型\",\"depth\":3},{\"text\":\"精确匹配\",\"id\":\"精确匹配\",\"depth\":3},{\"text\":\"处理 npm 包\",\"id\":\"处理-npm-包\",\"depth\":3}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        a: \"a\",\n        div: \"div\",\n        h3: \"h3\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"Record<string, string | string[]> | Function\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"undefined\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"设置文件引用的别名，对应 webpack 和 Rspack 的 \"}<_components.a href=\"https://webpack.js.org/configuration/resolve/#resolvealias\" target=\"_blank\" rel=\"noopener noreferrer\">{\"resolve.alias\"}</_components.a>{\" 配置。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"对于 TypeScript 项目，你只需要在 \"}<_components.code>{\"tsconfig.json\"}</_components.code>{\" 中配置 \"}<_components.a href=\"https://www.typescriptlang.org/tsconfig#paths\" target=\"_blank\" rel=\"noopener noreferrer\">{\"compilerOptions.paths\"}</_components.a>{\" 即可，Builder 会自动识别它，不需要额外配置 \"}<_components.code>{\"source.alias\"}</_components.code>{\" 字段，详见 \"}<_components.a href=\"https://modernjs.dev/builder/guide/advanced/alias.html\" target=\"_blank\" rel=\"noopener noreferrer\">{\"「路径别名」\"}</_components.a>{\"。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"object-类型\">{\"Object 类型\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#object-类型\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"alias\"}</_components.code>{\" 的值可以定义为 Object 类型，其中的相对路径会自动被 Builder 转换为绝对路径。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    alias: {\\n      '@common': './src/common',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"以上配置完成后，如果你在代码中引用 \"}<_components.code>{\"@common/Foo.tsx\"}</_components.code>{\", 则会映射到 \"}<_components.code>{\"<project>/src/common/Foo.tsx\"}</_components.code>{\" 路径上。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"function-类型\">{\"Function 类型\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#function-类型\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"alias\"}</_components.code>{\" 的值定义为函数时，可以接受预设的 alias 对象，并对其进行修改。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    alias: alias => {\\n      alias['@common'] = './src/common';\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"也可以在函数中返回一个新对象作为最终结果，新对象会覆盖预设的 alias 对象。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    alias: alias => {\\n      return {\\n        '@common': './src/common',\\n      };\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"精确匹配\">{\"精确匹配\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#精确匹配\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"默认情况，\"}<_components.code>{\"source.alias\"}</_components.code>{\" 会自动匹配子路径，比如以下配置：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import path from 'path';\\n\\nexport default {\\n  source: {\\n    alias: {\\n      '@common': './src/common',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"它的匹配结果如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import a from '@common'; // 解析为 `./src/common`\\nimport b from '@common/util'; // 解析为 `./src/common/util`\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"你可以添加 \"}<_components.code>{\"$\"}</_components.code>{\" 符号来开启精确匹配，开启后将不会自动匹配子路径。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import path from 'path';\\n\\nexport default {\\n  source: {\\n    alias: {\\n      '@common$': './src/common',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"它的匹配结果如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import a from '@common'; // 解析为 `./src/common`\\nimport b from '@common/util'; // 保持 `@common/util` 不变\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"处理-npm-包\">{\"处理 npm 包\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#处理-npm-包\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"你可以使用 \"}<_components.code>{\"alias\"}</_components.code>{\" 将某个 npm 包指向统一的目录。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如项目中安装了多份 \"}<_components.code>{\"react\"}</_components.code>{\"，你可以将 \"}<_components.code>{\"react\"}</_components.code>{\" 统一指向根目录的 \"}<_components.code>{\"node_modules\"}</_components.code>{\" 中安装的版本，避免出现打包多份 React 代码的问题。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import path from 'path';\\n\\nexport default {\\n  source: {\\n    alias: {\\n      react: path.resolve(__dirname, './node_modules/react'),\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"当你在使用 alias 处理 npm 包时，请留意项目中是否使用了这个包不同的 major 版本。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如你的项目中某个模块或 npm 依赖使用了 React 18 的 API，如果你将 React alias 到 17 版本，就会导致该模块无法引用到 React 18 的 API，导致代码异常。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2FaliasStrategy.md\"] = {\"toc\":[{\"text\":\"prefer-tsconfig\",\"id\":\"prefer-tsconfig\",\"depth\":3},{\"text\":\"prefer-alias\",\"id\":\"prefer-alias\",\"depth\":3}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        h3: \"h3\",\n        a: \"a\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"'prefer-tsconfig' | 'prefer-alias'\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"'prefer-tsconfig'\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p><_components.code>{\"source.aliasStrategy\"}</_components.code>{\" 用于控制 \"}<_components.code>{\"tsconfig.json\"}</_components.code>{\" 中的 \"}<_components.code>{\"paths\"}</_components.code>{\" 选项与打包工具的 \"}<_components.code>{\"alias\"}</_components.code>{\" 选项的优先级。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"prefer-tsconfig\">{\"prefer-tsconfig\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#prefer-tsconfig\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"source.aliasStrategy\"}</_components.code>{\" 默认为 \"}<_components.code>{\"'prefer-tsconfig'\"}</_components.code>{\"，此时 \"}<_components.code>{\"tsconfig.json\"}</_components.code>{\" 中的 \"}<_components.code>{\"paths\"}</_components.code>{\" 选项和打包工具的 \"}<_components.code>{\"alias\"}</_components.code>{\" 选项都会生效，但 tsconfig paths 选项的优先级更高。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如同时配置以下内容：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"tsconfig paths:\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\"tsconfig.json\"'>{'{\\n  \"compilerOptions\": {\\n    \"paths\": {\\n      \"@common/*\": [\"./src/common-1/*\"]\\n    }\\n  }\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"source.alias\"}</_components.code>{\":\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  source: {\\n    alias: {\\n      '@common': './src/common-2',\\n      '@utils': './src/utils',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"由于 tsconfig paths 的优先级更高，所以：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"@common\"}</_components.code>{\" 会使用 tsconfig paths 定义的值，指向 \"}<_components.code>{\"./src/common-1\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"@utils\"}</_components.code>{\" 会使用 \"}<_components.code>{\"source.alias\"}</_components.code>{\" 定义的值，指向 \"}<_components.code>{\"./src/utils\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"prefer-alias\">{\"prefer-alias\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#prefer-alias\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当 \"}<_components.code>{\"source.aliasStrategy\"}</_components.code>{\" 的值为 \"}<_components.code>{\"prefer-alias\"}</_components.code>{\" 时，\"}<_components.code>{\"tsconfig.json\"}</_components.code>{\" 中的 \"}<_components.code>{\"paths\"}</_components.code>{\" 选项只用于提供 TypeScript 类型定义，而不会对打包结果产生任何影响。此时，构建工具只会读取 \"}<_components.code>{\"alias\"}</_components.code>{\" 选项作为路径别名。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  source: {\\n    aliasStrategy: 'prefer-alias',\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"比如同时配置以下内容：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"tsconfig paths:\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\"tsconfig.json\"'>{'{\\n  \"compilerOptions\": {\\n    \"paths\": {\\n      \"@common/*\": [\"./src/common-1/*\"],\\n      \"@utils/*\": [\"./src/utils/*\"]\\n    }\\n  }\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"source.alias\"}</_components.code>{\":\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  source: {\\n    alias: {\\n      '@common': './src/common-2',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"由于 tsconfig paths 只用于提供类型，所以最终只有 \"}<_components.code>{\"@common\"}</_components.code>{\" 别名生效，并指向 \"}<_components.code>{\"./src/common-2\"}</_components.code>{\" 目录。\"}</_components.p>{\"\\n\"}<_components.p>{\"大部分情况下你不需要使用 \"}<_components.code>{\"prefer-alias\"}</_components.code>{\"，但当你需要动态生成一些别名配置时，可以考虑使用它。比如，基于环境变量来生成 \"}<_components.code>{\"alias\"}</_components.code>{\" 选项：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  source: {\\n    alias: {\\n      '@common':\\n        process.env.NODE_ENV === 'production'\\n          ? './src/common-prod'\\n          : './src/common-dev',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2FcompileJsDataURI.md\"] = {\"toc\":[{\"text\":\"示例\",\"id\":\"示例\",\"depth\":3}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        pre: \"pre\",\n        h3: \"h3\",\n        a: \"a\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"boolean\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"true\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"该选项用于控制是否编译 data URI 中的 JavaScript 代码。\"}</_components.p>{\"\\n\"}<_components.p>{\"默认情况下，Builder 会使用 Babel 或 SWC 对 data URI 中的代码进行编译。比如以下代码：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import x from 'data:text/javascript,export default 1;';\\n\\nimport 'data:text/javascript;charset=utf-8;base64,Y29uc29sZS5sb2coJ2lubGluZSAxJyk7';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"添加以下配置来关闭：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    compileJsDataURI: false,\\n  },\\n};\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2Fdefine.md\"] = {\"toc\":[{\"text\":\"示例\",\"id\":\"示例\",\"depth\":3}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        a: \"a\",\n        div: \"div\",\n        h3: \"h3\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"Record<string, unknown>\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"{}\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"构建时将代码中的变量替换成其它值或者表达式，可以用于在代码逻辑中区分开发环境与生产环境等场景。\"}</_components.p>{\"\\n\"}<_components.p>{\"传入的配置对象的键名是需要替换变量的名称，或者是用 \"}<_components.code>{\".\"}</_components.code>{\" 连接的多个标识符，配置项的值则根据类型进行不同的处理：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"字符串会被当作代码片段。\"}</_components.li>{\"\\n\"}<_components.li>{\"包括函数在内的其他类型会被转换成字符串。\"}</_components.li>{\"\\n\"}<_components.li>{\"嵌套对象的父子键名之间会用 \"}<_components.code>{\".\"}</_components.code>{\" 连接作为需要替换的变量名。\"}</_components.li>{\"\\n\"}<_components.li>{\"以 typeof 开头的键名会用来替换 typeof 调用。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"更多细节参考 \"}<_components.a href=\"https://webpack.js.org/plugins/define-plugin/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"webpack - DefinePlugin\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"在使用 Rspack 作为打包工具时，支持的类型可参考 \"}<_components.a href=\"https://www.rspack.dev/zh/config/builtins.html#builtinsdefine\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Rspack.builtins.define\"}</_components.a>{\"\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    define: {\\n      PRODUCTION: JSON.stringify(true),\\n      VERSION: JSON.stringify('5fa3b9'),\\n      BROWSER_SUPPORTS_HTML5: true,\\n      TWO: '1 + 1',\\n      'typeof window': JSON.stringify('object'),\\n      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\\n      'import.meta': { test: undefined },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"表达式会被替换为对应的代码段：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const foo = TWO;\\n\\n// ⬇️ Turn into being...\\nconst foo = 1 + 1;\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2Fexclude.md\"] = {\"toc\":[],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        a: \"a\",\n        div: \"div\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"Array<string | RegExp>\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"[]\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"打包工具：\"}</_components.strong>{\" \"}<_components.code>{\"仅支持 webpack\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"指定不需要编译的 JavaScript/TypeScript 文件。用法与 webpack 中的 \"}<_components.a href=\"https://webpack.js.org/configuration/module/#ruleexclude\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Rule.exclude\"}</_components.a>{\" 一致，支持传入字符串或正则表达式来匹配模块的路径。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"在使用 Rspack 作为打包工具时，默认\"}<_components.strong>{\"所有文件\"}</_components.strong>{\"都会经过编译，同时，不支持通过 \"}<_components.code>{\"source.exclude\"}</_components.code>{\" 排除。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.p>{\"比如:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import path from 'path';\\n\\nexport default {\\n  source: {\\n    exclude: [path.resolve(__dirname, 'src/module-a'), /src\\\\/module-b/],\\n  },\\n};\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2FglobalVars.md\"] = {\"toc\":[{\"text\":\"示例\",\"id\":\"示例\",\"depth\":3},{\"text\":\"函数用法\",\"id\":\"函数用法\",\"depth\":3},{\"text\":\"与 define 的区别\",\"id\":\"与-define-的区别\",\"depth\":3},{\"text\":\"注意事项\",\"id\":\"注意事项\",\"depth\":3}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        pre: \"pre\",\n        p: \"p\",\n        h3: \"h3\",\n        a: \"a\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"Record<string, JSONValue> | Function\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"// Builder 默认会添加环境变量 `process.env.NODE_ENV`，因此你不需要手动添加它。\\nconst defaultGlobalVars = {\\n  'process.env.NODE_ENV': process.env.NODE_ENV,\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"用于在构建时将类似 \"}<_components.code>{\"process.env.FOO\"}</_components.code>{\" 的全局变量表达式替换为指定的值，比如：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"console.log(process.env.NODE_ENV);\\n\\n// ⬇️ Turn into being...\\nconsole.log('development');\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"在下方示例中，会在代码中注入 \"}<_components.code>{\"ENABLE_VCONSOLE\"}</_components.code>{\" 和 \"}<_components.code>{\"APP_CONTEXT\"}</_components.code>{\" 两个环境变量：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    globalVars: {\\n      ENABLE_VCONSOLE: true,\\n      APP_CONTEXT: { answer: 42 },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"你可以在代码中直接使用它们：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"if (ENABLE_VCONSOLE) {\\n  // do something\\n}\\n\\nconsole.log(APP_CONTEXT);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"函数用法\">{\"函数用法\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#函数用法\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"type GlobalVarsFn = (\\n  obj: Record<string, JSONValue>,\\n  utils: { env: NodeEnv; target: BuilderTarget },\\n) => Record<string, JSONValue> | void;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"你可以将 \"}<_components.code>{\"source.globalVars\"}</_components.code>{\" 设置为一个函数，从而动态设置一些环境变量的值。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如，根据当前的构建产物类型进行动态设置：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    globalVars(obj, { target }) {\\n      obj['MY_TARGET'] = target === 'node' ? 'server' : 'client';\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"与-define-的区别\">{\"与 define 的区别\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#与-define-的区别\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"source.globalVars\"}</_components.code>{\" 是 \"}<_components.code>{\"source.define\"}</_components.code>{\" 的一个语法糖，它们之间唯一的区别是，\"}<_components.code>{\"source.globalVars\"}</_components.code>{\" 会自动将传入的值进行 JSON 序列化处理，这使得设置全局变量的值更加方便。注意 \"}<_components.code>{\"globalVars\"}</_components.code>{\" 的每个值都需要是可以被 JSON 序列化的值。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    globalVars: {\\n      'process.env.BUILD_VERSION': '0.0.1',\\n      'import.meta.foo': { bar: 42 },\\n      'import.meta.baz': false,\\n    },\\n    define: {\\n      'process.env.BUILD_VERSION': JSON.stringify('0.0.1'),\\n      'import.meta': {\\n        foo: JSON.stringify({ bar: 42 }),\\n        baz: JSON.stringify(false),\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"注意事项\">{\"注意事项\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#注意事项\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"source.globalVars\"}</_components.code>{\" 是通过字符串替换的形式来注入环境变量的，因此它无法对「解构赋值」等动态写法生效。\"}</_components.p>{\"\\n\"}<_components.p>{\"在使用解构赋值时，Builder 将无法判断变量 \"}<_components.code>{\"NODE_ENV\"}</_components.code>{\" 是否与要替换的表达式 \"}<_components.code>{\"process.env.NODE_ENV\"}</_components.code>{\" 存在关联，因此以下使用方式是无效的：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const { NODE_ENV } = process.env;\\nconsole.log(NODE_ENV);\\n// ❌ Won't get a string.\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2Finclude.md\"] = {\"toc\":[{\"text\":\"编译 npm 包\",\"id\":\"编译-npm-包\",\"depth\":3},{\"text\":\"编译 npm 包的子依赖\",\"id\":\"编译-npm-包的子依赖\",\"depth\":3},{\"text\":\"编译 Monorepo 中的其他库\",\"id\":\"编译-monorepo-中的其他库\",\"depth\":3},{\"text\":\"编译 CommonJS 模块\",\"id\":\"编译-commonjs-模块\",\"depth\":3},{\"text\":\"匹配 Symlink\",\"id\":\"匹配-symlink\",\"depth\":3},{\"text\":\"注意事项\",\"id\":\"注意事项\",\"depth\":3}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        a: \"a\",\n        pre: \"pre\",\n        div: \"div\",\n        h3: \"h3\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"Array<string | RegExp>\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"[]\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"打包工具：\"}</_components.strong>{\" \"}<_components.code>{\"仅支持 webpack\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"出于编译性能的考虑，默认情况下，Builder 不会编译 node_modules 下的 JavaScript/TypeScript 文件，也不会编译当前工程目录外部的 JavaScript/TypeScript 文件。\"}</_components.p>{\"\\n\"}<_components.p>{\"通过 \"}<_components.code>{\"source.include\"}</_components.code>{\" 配置项，可以指定需要 Builder 额外进行编译的目录或模块。\"}<_components.code>{\"source.include\"}</_components.code>{\" 的用法与 webpack 中的 \"}<_components.a href=\"https://webpack.js.org/configuration/module/#ruleinclude\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Rule.include\"}</_components.a>{\" 一致，支持传入字符串或正则表达式来匹配模块的路径。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import path from 'path';\\n\\nexport default {\\n  source: {\\n    include: [path.resolve(__dirname, '../other-dir')],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"在使用 Rspack 作为打包工具时，默认\"}<_components.strong>{\"所有文件\"}</_components.strong>{\"都会经过编译，同时，不支持通过 \"}<_components.code>{\"source.exclude\"}</_components.code>{\" 排除。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"编译-npm-包\">{\"编译 npm 包\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#编译-npm-包\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"比较典型的使用场景是编译 node_modules 下的 npm 包，因为某些第三方依赖存在 ES6+ 的语法，这可能导致在低版本浏览器上无法运行，你可以通过该选项指定需要编译的依赖，从而解决此类问题。\"}</_components.p>{\"\\n\"}<_components.p>{\"以 \"}<_components.code>{\"query-string\"}</_components.code>{\" 为例，你可以做如下的配置：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import path from 'path';\\n\\nexport default {\\n  source: {\\n    include: [\\n      // 方法一:\\n      // 先通过 require.resolve 来获取模块的路径\\n      // 再通过 path.dirname 来指向对应的目录\\n      path.dirname(require.resolve('query-string')),\\n      // 方法二:\\n      // 通过正则表达式进行匹配\\n      // 所有包含 `/node_modules/query-string/` 的路径都会被匹配到\\n      /\\\\/node_modules\\\\/query-string\\\\//,\\n    ],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{'上述两种方法分别通过 \"路径前缀\" 和 \"正则表达式\" 来匹配文件的绝对路径，值得留意的是，项目中所有被引用的模块都会经过匹配，因此你不能使用过于松散的值进行匹配，避免造成编译性能问题或编译异常。'}</_components.p>{\"\\n\"}<_components.h3 id=\"编译-npm-包的子依赖\">{\"编译 npm 包的子依赖\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#编译-npm-包的子依赖\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当你通过 \"}<_components.code>{\"source.include\"}</_components.code>{\" 编译一个 npm 包时，Builder 默认只会编译匹配到的模块，不会编译对应模块的\"}<_components.strong>{\"子依赖\"}</_components.strong>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"以 \"}<_components.code>{\"query-string\"}</_components.code>{\" 为例，它依赖的 \"}<_components.code>{\"decode-uri-component\"}</_components.code>{\" 包中同样存在 ES6+ 代码，因此你需要将 \"}<_components.code>{\"decode-uri-component\"}</_components.code>{\" 也加入到 \"}<_components.code>{\"source.include\"}</_components.code>{\" 中：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  source: {\\n    include: [\\n      /\\\\/node_modules\\\\/query-string\\\\//,\\n      /\\\\/node_modules\\\\/decode-uri-component\\\\//,\\n    ],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"编译-monorepo-中的其他库\">{\"编译 Monorepo 中的其他库\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#编译-monorepo-中的其他库\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"在 Monorepo 中进行开发时，如果需要引用 Monorepo 中其他库的源代码，也可以直接在 \"}<_components.code>{\"source.include\"}</_components.code>{\" 进行配置:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import path from 'path';\\n\\nexport default {\\n  source: {\\n    include: [\\n      // 方法一:\\n      // 编译 Monorepo 的 package 目录下的所有文件\\n      path.resolve(__dirname, '../../packages'),\\n\\n      // 方法二:\\n      // 编译 Monorepo 的 package 目录里某个包的源代码\\n      // 这种写法匹配的范围更加精准，对整体编译性能的影响更小\\n      path.resolve(__dirname, '../../packages/xxx/src'),\\n    ],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"编译-commonjs-模块\">{\"编译 CommonJS 模块\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#编译-commonjs-模块\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Babel 默认无法编译 CommonJS 模块，如果你编译了一个 CommonJS 模块，可能会出现 \"}<_components.code>{\"exports is not defined\"}</_components.code>{\" 的运行时报错信息。\"}</_components.p>{\"\\n\"}<_components.p>{\"当你需要使用 \"}<_components.code>{\"source.include\"}</_components.code>{\" 来编译 CommonJS 模块时，可以将 Babel 的 \"}<_components.code>{\"sourceType\"}</_components.code>{\" 配置设置为 \"}<_components.code>{\"unambiguous\"}</_components.code>{\"：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  tools: {\\n    babel(config) {\\n      config.sourceType = 'unambiguous';\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"将 \"}<_components.code>{\"sourceType\"}</_components.code>{\" 设置为 \"}<_components.code>{\"unambiguous\"}</_components.code>{\" 可能会产生一些其他影响，请参考 \"}<_components.a href=\"https://babeljs.io/docs/en/options#sourcetype\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Babel 官方文档\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"匹配-symlink\">{\"匹配 Symlink\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#匹配-symlink\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"如果你匹配的模块是通过 symlink 链接到当前项目中的，那么需要匹配这个模块的\"}<_components.strong>{\"真实路径\"}</_components.strong>{\"，而不是 symlink 后的路径。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如，你将 Monorepo 中的 \"}<_components.code>{\"packages/foo\"}</_components.code>{\" 路径 symlink 到当前项目的 \"}<_components.code>{\"node_modules/foo\"}</_components.code>{\" 路径下，则需要去匹配 \"}<_components.code>{\"packages/foo\"}</_components.code>{\" 路径，而不是 \"}<_components.code>{\"node_modules/foo\"}</_components.code>{\" 路径。\"}</_components.p>{\"\\n\"}<_components.p>{\"该行为可以通过 webpack 的 \"}<_components.a href=\"https://webpack.js.org/configuration/resolve/#resolvesymlinks\" target=\"_blank\" rel=\"noopener noreferrer\">{\"resolve.symlinks\"}</_components.a>{\" 配置项来进行控制。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"注意事项\">{\"注意事项\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#注意事项\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"注意，\"}<_components.code>{\"source.include\"}</_components.code>{\" 不应该被用于编译整个 \"}<_components.code>{\"node_modules\"}</_components.code>{\" 目录，比如下面的写法是错误的：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  source: {\\n    include: [/\\\\/node_modules\\\\//],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"如果你对整个 \"}<_components.code>{\"node_modules\"}</_components.code>{\" 进行编译，不仅会使编译时间大幅度增加，并且可能会产生不可预期的错误。因为 \"}<_components.code>{\"node_modules\"}</_components.code>{\" 中的大部分 npm 包发布的已经是编译后的产物，通常没必要经过二次编译。此外，\"}<_components.code>{\"core-js\"}</_components.code>{\" 等 npm 包被编译后可能会出现异常。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2FmoduleScopes.md\"] = {\"toc\":[{\"text\":\"示例\",\"id\":\"示例\",\"depth\":3},{\"text\":\"Array 类型\",\"id\":\"array-类型\",\"depth\":3},{\"text\":\"Function 类型\",\"id\":\"function-类型\",\"depth\":3}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        h3: \"h3\",\n        a: \"a\",\n        pre: \"pre\",\n        img: \"img\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"Array<string | Regexp> | Function\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"undefined\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"打包工具：\"}</_components.strong>{\" \"}<_components.code>{\"仅支持 webpack\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"限制源代码的引用路径。配置该选项后，所有源文件只能从约定的目录下引用代码，从其他目录引用代码会产生对应的报错提示。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"首先我们配置 \"}<_components.code>{\"moduleScopes\"}</_components.code>{\" 仅包含 \"}<_components.code>{\"src\"}</_components.code>{\" 目录：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    moduleScopes: ['./src'],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"然后在 \"}<_components.code>{\"src/App.tsx\"}</_components.code>{\" 中导入 \"}<_components.code>{\"src\"}</_components.code>{\" 目录外部的 \"}<_components.code>{\"utils/a\"}</_components.code>{\" 模块:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import a from '../utils/a';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在编译时，会提示引用路径错误:\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/aphqeh7uhohpquloj/modern-js/docs/module-scopes-error.png\" alt=\"scopes-error\"/></_components.p>{\"\\n\"}<_components.p>{\"通过该选项配置 \"}<_components.code>{\"utils\"}</_components.code>{\" 目录，再进行编译，则不会出现错误提示。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    moduleScopes: ['./src', './utils'],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"array-类型\">{\"Array 类型\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#array-类型\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当 \"}<_components.code>{\"moduleScopes\"}</_components.code>{\" 的值为 \"}<_components.code>{\"Array\"}</_components.code>{\" 类型时，可以直接设置若干个代码路径，比如添加以下配置：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    moduleScopes: ['./src', './shared', './utils'],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"function-类型\">{\"Function 类型\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#function-类型\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"moduleScopes\"}</_components.code>{\" 也支持通过函数的形式来进行修改，避免覆盖默认值：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    moduleScopes: scopes => {\\n      scopes.push('./shared');\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2FpreEntry.md\"] = {\"toc\":[{\"text\":\"添加单个脚本\",\"id\":\"添加单个脚本\",\"depth\":4},{\"text\":\"添加全局样式\",\"id\":\"添加全局样式\",\"depth\":4},{\"text\":\"添加多个脚本\",\"id\":\"添加多个脚本\",\"depth\":4}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        h4: \"h4\",\n        a: \"a\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"string | string[]\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"undefined\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"在每个页面的入口文件前添加一段代码，这段代码会早于页面的代码执行，因此可以用于执行一些全局的代码逻辑，比如注入 polyfill、设置全局样式等。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"添加单个脚本\">{\"添加单个脚本\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#添加单个脚本\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"首先创建一个 \"}<_components.code>{\"src/polyfill.ts\"}</_components.code>{\" 文件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"console.log('I am a polyfill');\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"然后将 \"}<_components.code>{\"src/polyfill.ts\"}</_components.code>{\" 配置到 \"}<_components.code>{\"source.preEntry\"}</_components.code>{\" 上：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    preEntry: './src/polyfill.ts',\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"重新运行编译并访问任意页面，可以看到 \"}<_components.code>{\"src/polyfill.ts\"}</_components.code>{\" 中的代码已经执行，并在 console 中输出了对应的内容。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"添加全局样式\">{\"添加全局样式\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#添加全局样式\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"你也可以通过 \"}<_components.code>{\"source.preEntry\"}</_components.code>{\" 来配置全局样式，这段 CSS 代码会早于页面代码加载，比如引入一个 \"}<_components.code>{\"normalize.css\"}</_components.code>{\" 文件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    preEntry: './src/normalize.css',\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"添加多个脚本\">{\"添加多个脚本\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#添加多个脚本\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"你可以将 \"}<_components.code>{\"preEntry\"}</_components.code>{\" 设置为数组来添加多个脚本，它们会按数组顺序执行：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    preEntry: ['./src/polyfill-a.ts', './src/polyfill-b.ts'],\\n  },\\n};\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2FresolveExtensionPrefix.md\"] = {\"toc\":[{\"text\":\"示例\",\"id\":\"示例\",\"depth\":3},{\"text\":\"根据产物类型设置\",\"id\":\"根据产物类型设置\",\"depth\":4}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        a: \"a\",\n        h3: \"h3\",\n        pre: \"pre\",\n        h4: \"h4\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"string | Record<BuilderTarget, string>\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"undefined\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"用于为 \"}<_components.a href=\"https://webpack.js.org/configuration/resolve/#resolveextensions\" target=\"_blank\" rel=\"noopener noreferrer\">{\"resolve.extensions\"}</_components.a>{\" 添加统一的前缀。\"}</_components.p>{\"\\n\"}<_components.p>{\"如果多个文件拥有相同的名称，但具有不同的文件后缀，Builder 会根据 extensions 数组的顺序进行识别，解析数组中第一个被识别的文件，并跳过其余文件。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"下面是配置 \"}<_components.code>{\".web\"}</_components.code>{\" 前缀的例子。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    resolveExtensionPrefix: '.web',\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"配置完成后，extensions 数组会发生以下变化：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"// 配置前\\nconst extensions = ['.js', '.ts', ...];\\n\\n// 配置后\\nconst extensions = ['.web.js', '.js', '.web.ts' , '.ts', ...];\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在代码中 \"}<_components.code>{\"import './foo'\"}</_components.code>{\" 时，会优先识别 \"}<_components.code>{\"foo.web.js\"}</_components.code>{\" 文件，再识别 \"}<_components.code>{\"foo.js\"}</_components.code>{\" 文件。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"根据产物类型设置\">{\"根据产物类型设置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#根据产物类型设置\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"当你同时构建多种类型的产物时，你可以为不同的产物类型设置不同的 extension 前缀。此时，你需要把 \"}<_components.code>{\"resolveExtensionPrefix\"}</_components.code>{\" 设置为一个对象，对象的 key 为对应的产物类型。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如为 \"}<_components.code>{\"web\"}</_components.code>{\" 和 \"}<_components.code>{\"node\"}</_components.code>{\" 设置不同的 extension 前缀：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  output: {\\n    source: {\\n      resolveExtensionPrefix: {\\n        web: '.web',\\n        node: '.node',\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在代码中 \"}<_components.code>{\"import './foo'\"}</_components.code>{\" 时，对于 node 产物，会优先识别 \"}<_components.code>{\"foo.node.js\"}</_components.code>{\" 文件，而对于 web 产物，则会优先识别 \"}<_components.code>{\"foo.web.js\"}</_components.code>{\" 文件。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2FresolveMainFields.md\"] = {\"toc\":[{\"text\":\"示例\",\"id\":\"示例\",\"depth\":3},{\"text\":\"根据产物类型设置\",\"id\":\"根据产物类型设置\",\"depth\":4}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        pre: \"pre\",\n        code: \"code\",\n        p: \"p\",\n        a: \"a\",\n        h3: \"h3\",\n        h4: \"h4\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"type Fields = (string | string[])[];\\n\\ntype ResolveMainFields = Fields | Record<BuilderTarget, Fields>;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"undefined\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"该配置项将决定你使用 \"}<_components.code>{\"package.json\"}</_components.code>{\" 哪个字段导入 \"}<_components.code>{\"npm\"}</_components.code>{\" 模块。对应 webpack 的 \"}<_components.a href=\"https://webpack.js.org/configuration/resolve/#resolvemainfields\" target=\"_blank\" rel=\"noopener noreferrer\">{\"resolve.mainFields\"}</_components.a>{\" 配置。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    resolveMainFields: ['main', 'browser', 'exports'],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"根据产物类型设置\">{\"根据产物类型设置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#根据产物类型设置\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"当你同时构建多种类型的产物时，你可以为不同的产物类型设置不同的 mainFields。此时，你需要把 \"}<_components.code>{\"resolveMainFields\"}</_components.code>{\" 设置为一个对象，对象的 key 为对应的产物类型。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如为 \"}<_components.code>{\"web\"}</_components.code>{\" 和 \"}<_components.code>{\"node\"}</_components.code>{\" 设置不同的 mainFields：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  output: {\\n    source: {\\n      resolveMainFields: {\\n        web: ['main', 'browser', 'exports'],\\n        node: ['main', 'node', 'exports'],\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfig%2Fsource%2FtransformImport.md\"] = {\"toc\":[{\"text\":\"示例\",\"id\":\"示例\",\"depth\":3},{\"text\":\"禁用默认配置\",\"id\":\"禁用默认配置\",\"depth\":3},{\"text\":\"配置\",\"id\":\"配置\",\"depth\":3},{\"text\":\"libraryName\",\"id\":\"libraryname\",\"depth\":4},{\"text\":\"libraryDirectory\",\"id\":\"librarydirectory\",\"depth\":4},{\"text\":\"style\",\"id\":\"style\",\"depth\":4},{\"text\":\"styleLibraryDirectory\",\"id\":\"stylelibrarydirectory\",\"depth\":4},{\"text\":\"camelToDashComponentName\",\"id\":\"cameltodashcomponentname\",\"depth\":4},{\"text\":\"transformToDefaultImport\",\"id\":\"transformtodefaultimport\",\"depth\":4},{\"text\":\"customName\",\"id\":\"customname\",\"depth\":4},{\"text\":\"customStyleName\",\"id\":\"customstylename\",\"depth\":4}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        p: \"p\",\n        a: \"a\",\n        code: \"code\",\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        pre: \"pre\",\n        div: \"div\",\n        h3: \"h3\",\n        h4: \"h4\"\n    }, _provideComponents(), props.components);\n    return <><_components.p>{\"用于按需引入组件库的代码和样式，能力等价于 \"}<_components.a href=\"https://www.npmjs.com/package/babel-plugin-import\" target=\"_blank\" rel=\"noopener noreferrer\">{\"babel-plugin-import\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"它与 \"}<_components.a href=\"https://www.npmjs.com/package/babel-plugin-import\" target=\"_blank\" rel=\"noopener noreferrer\">{\"babel-plugin-import\"}</_components.a>{\" 的区别在于，\"}<_components.code>{\"source.transformImport\"}</_components.code>{\" 不与 Babel 耦合。Builder 会自动识别当前使用的编译工具是 Babel、SWC 还是 Rspack，并添加相应的按需引入配置。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"type Config =\\n  | false\\n  | Array<{\\n      libraryName: string;\\n      libraryDirectory?: string;\\n      style?: string | boolean;\\n      styleLibraryDirectory?: string;\\n      camelToDashComponentName?: boolean;\\n      transformToDefaultImport?: boolean;\\n      customName?: ((member: string) => string | undefined) | string;\\n      customStyleName?: ((member: string) => string | undefined) | string;\\n    }>;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"当项目中安装了 \"}<_components.a href=\"https://www.npmjs.com/package/antd\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Ant Design 组件库\"}</_components.a>{\" <= 4.x 版本时，Builder 会自动添加以下默认配置：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const defaultAntdConfig = {\\n  libraryName: 'antd',\\n  libraryDirectory: isServer ? 'lib' : 'es',\\n  style: true,\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"当项目中安装了 \"}<_components.a href=\"https://www.npmjs.com/package/@arco-design/web-react\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Arco Design 组件库\"}</_components.a>{\" 时，Builder 会自动添加以下默认配置：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const defaultArcoConfig = [\\n  {\\n    libraryName: '@arco-design/web-react',\\n    libraryDirectory: isServer ? 'lib' : 'es',\\n    camelToDashComponentName: false,\\n    style: true,\\n  },\\n  {\\n    libraryName: '@arco-design/web-react/icon',\\n    libraryDirectory: isServer ? 'react-icon-cjs' : 'react-icon',\\n    camelToDashComponentName: false,\\n  },\\n];\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"当你添加了 \"}<_components.code>{\"antd\"}</_components.code>{\" 或 \"}<_components.code>{\"@arco-design/web-react\"}</_components.code>{\" 相关的配置时，优先级会高于上述默认配置。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当使用上述 antd 默认配置：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    transformImport: [\\n      {\\n        libraryName: 'antd',\\n        libraryDirectory: 'es',\\n        style: true,\\n      },\\n    ],\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"源代码如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import { Button } from 'antd';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"会被转换成：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import Button from 'antd/es/button';\\nimport 'antd/es/button/style';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"禁用默认配置\">{\"禁用默认配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#禁用默认配置\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"你可以手动设置 \"}<_components.code>{\"transformImport: false\"}</_components.code>{\" 来关掉 transformImport 的默认行为。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    transformImport: false,\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"比如，当你使用了 \"}<_components.code>{\"externals\"}</_components.code>{\" 来避免打包 antd 时，由于 \"}<_components.code>{\"transformImport\"}</_components.code>{\" 默认会转换 antd 的引用路径，导致匹配的路径发生了变化，因此 externals 无法正确生效，此时你可以设置关闭 \"}<_components.code>{\"transformImport\"}</_components.code>{\" 来避免该问题。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"配置\">{\"配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.h4 id=\"libraryname\">{\"libraryName\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#libraryname\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"string\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"用于指定需要按需加载的模块名称。当 Builder 遍历代码时，如果遇到了对应模块的 import 语句，则会对其进行转换。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"librarydirectory\">{\"libraryDirectory\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#librarydirectory\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"string\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"'lib'\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"用于拼接转换后的路径，拼接规则为 \"}<_components.code>{\"${libraryName}/${libraryDirectory}/${member}\"}</_components.code>{\"，其中 member 为引入成员。\"}</_components.p>{\"\\n\"}<_components.p>{\"示例：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import { Button } from 'foo';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"转换结果:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import Button from 'foo/lib/button';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"style\">{\"style\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#style\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"boolean\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"undefined\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"确定是否需要引入相关样式，若为 \"}<_components.code>{\"true\"}</_components.code>{\"，则会引入路径 \"}<_components.code>{\"${libraryName}/${libraryDirectory}/${member}/style\"}</_components.code>{\"。\\n若为 \"}<_components.code>{\"false\"}</_components.code>{\" 或 \"}<_components.code>{\"undefined\"}</_components.code>{\" 则不会引入样式。\"}</_components.p>{\"\\n\"}<_components.p>{\"当配置为 \"}<_components.code>{\"true\"}</_components.code>{\" 时：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import { Button } from 'foo';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"转换结果:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import Button from 'foo/lib/button';\\nimport 'foo/lib/button/style';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"stylelibrarydirectory\">{\"styleLibraryDirectory\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#stylelibrarydirectory\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"string\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"undefined\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"该配置用于拼接引入样式时的引入路径，若该配置被指定，则 \"}<_components.code>{\"style\"}</_components.code>{\" 配置项会被忽略。拼接引入路径为 \"}<_components.code>{\"${libraryName}/${styleLibraryDirectory}/${member}\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"当配置为 \"}<_components.code>{\"styles\"}</_components.code>{\" 时：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import { Button } from 'foo';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"转换结果:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import Button from 'foo/lib/button';\\nimport 'foo/styles/button';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"cameltodashcomponentname\">{\"camelToDashComponentName\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#cameltodashcomponentname\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"boolean\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"true\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"是否需要将 camelCase 的引入转换成 kebab-case。\"}</_components.p>{\"\\n\"}<_components.p>{\"示例：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import { ButtonGroup } from 'foo';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"转换结果：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"// 设置成 true：\\nimport ButtonGroup from 'foo/button-group';\\n// 设置成 false：\\nimport ButtonGroup from 'foo/ButtonGroup';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"transformtodefaultimport\">{\"transformToDefaultImport\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#transformtodefaultimport\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"boolean\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"true\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"是否将导入语句转换成默认导入。\"}</_components.p>{\"\\n\"}<_components.p>{\"示例：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import { Button } from 'foo';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"转换结果：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"// 设置成 true：\\nimport Button from 'foo/button';\\n// 设置成 false：\\nimport { Button } from 'foo/button';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"customname\">{\"customName\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#customname\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"((member: string) => string | undefined) | string\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"undefined\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"注意\"}</_components.div><_components.div className=\"modern-directive-content\">{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"函数类型的配置只能在 Webpack 构建中使用。\"}</_components.li>{\"\\n\"}<_components.li>{\"模版类型的配置只能在 Rspack 构建或者使用了 SWC 的 Webpack 构建中使用。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"自定义转换后的导入路径，输入是引入的成员，例如配置成 \"}<_components.code>{\" (member) => `my-lib/${member}` \"}</_components.code>{\"，会将 \"}<_components.code>{\"import { foo } from 'bar'\"}</_components.code>{\" 转换成 \"}<_components.code>{\"import foo from 'my-lib/foo'\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"在使用 Rspack 构建时，不能使用函数配置，但可以使用 \"}<_components.a href=\"https://handlebarsjs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"handlebars\"}</_components.a>{\" 模版字符串，对于上面的函数配置，在使用模版字符串时可以用以下模版代替 \"}<_components.code>{\"my-lib/{{ member }}\"}</_components.code>{\"，也可以使用一些内置帮助方法，例如 \"}<_components.code>{\"my-lib/{{ kebabCase member }}\"}</_components.code>{\" 来转换成 kebab-case 格式，除了 kebabCase 以外还有 camelCase，snakeCase，upperCase，lowerCase 可以使用。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"customstylename\">{\"customStyleName\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#customstylename\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"((member: string) => string | undefined) | string\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"undefined\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"注意\"}</_components.div><_components.div className=\"modern-directive-content\">{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"函数类型的配置只能在 Webpack 构建中使用。\"}</_components.li>{\"\\n\"}<_components.li>{\"模版类型的配置只能在 Rspack 构建或者使用了 SWC 的 Webpack 构建中使用。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"自定义转换后的样式导入路径，输入是引入的成员，例如配置成 \"}<_components.code>{\" (member) => `my-lib/${member}` \"}</_components.code>{\"，会将 \"}<_components.code>{\"import { foo } from 'bar'\"}</_components.code>{\" 转换成 \"}<_components.code>{\"import foo from 'my-lib/foo'\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"在使用 Rspack 构建时，不能使用函数配置，但可以使用 \"}<_components.a href=\"https://handlebarsjs.com/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"handlebars\"}</_components.a>{\" 模版字符串，对于上面的函数配置，在使用模版字符串时可以用以下模版代替 \"}<_components.code>{\"my-lib/{{ member }}\"}</_components.code>{\"，也可以使用一些内置帮助方法，例如 \"}<_components.code>{\"my-lib/{{ kebabCase member }}\"}</_components.code>{\" 来转换成 kebab-case 格式，除了 kebabCase 以外还有 camelCase，snakeCase，upperCase，lowerCase 可以使用。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","components","id","className","href","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_","ul","li","strong","code","div","h3","pre","target","rel","meta","img","src","alt","h4"],"mappings":"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"}