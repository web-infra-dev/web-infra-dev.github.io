(self.webpackChunk_modern_js_builder_doc=self.webpackChunk_modern_js_builder_doc||[]).push([["docs_zh_guide_basic_builder-cli_mdx"],{54382:function(e,n,d){"use strict";d.r(n),d.d(n,{default:function(){return h}});var r,i=d("15169"),s=d("43932"),l=d("9880"),c=d("23169");function a(e){var n=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",h2:"h2",code:"code",pre:"pre",h3:"h3",strong:"strong"},(0,c.useMDXComponents)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.h1,{id:"使用-builder-cli",children:["使用 Builder CLI",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用-builder-cli",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"Modern.js Builder 提供了一个轻量的 CLI 工具，包含 dev、build 等基础命令，它主要用于构建非 React 项目。"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["对于 React 项目，我们建议直接使用 Modern.js 框架，参考 ",(0,l.jsx)(n.a,{href:"https://modernjs.dev/guides/get-started/quick-start.html",target:"_blank",rel:"noopener noreferrer",children:"Modern.js - 快速上手"}),"。"]}),"\n",(0,l.jsx)(n.li,{children:"对于非 React 项目，比如开发一个 Vue 项目，那么你可以使用 Builder CLI 工具来构建你的项目。"}),"\n"]}),"\n",(0,l.jsxs)(n.h2,{id:"安装",children:["安装",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#安装",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"你需要安装两个包，其中："}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@modern-js/builder-cli"})," 为 Builder 的 CLI 工具，提供基础的 CLI 命令，并会自动加载当前项目中安装的 Provider。"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@modern-js/builder-webpack-provider"})," 或 ",(0,l.jsx)(n.code,{children:"@modern-js/builder-rspack-provider"}),"，它们是 Builder 的 Provider，提供基于 webpack 或 Rspack 的构建能力。"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# 使用 webpack 打包\npnpm add @modern-js/builder-cli @modern-js/builder-webpack-provider -D\n\n# 使用 Rspack 打包\npnpm add @modern-js/builder-cli @modern-js/builder-rspack-provider -D\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"命令",children:["命令",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#命令",children:"#"})]}),"\n",(0,l.jsx)(n.p,{children:"Builder CLI 提供了以下命令，可以帮助你快速启动开发服务器、构建生产环境代码等。"}),"\n",(0,l.jsxs)(n.h3,{id:"builder-dev",children:["builder dev",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#builder-dev",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"builder dev"})," 命令用于启动一个本地开发服务器，对源代码进行开发环境编译。"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"Usage: builder dev [options]\n\nOptions:\n  -h, --help            display help for command\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"builder-build",children:["builder build",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#builder-build",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"builder build"})," 命令默认会在 ",(0,l.jsx)(n.code,{children:"dist/"})," 目录下构建出可用于生产环境的产物。"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"Usage: builder build [options]\n\nOptions:\n  -h, --help            display help for command\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"builder-serve",children:["builder serve",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#builder-serve",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"builder serve"})," 命令用于在本地预览生产环境构建的产物, 注意你需要提前执行 ",(0,l.jsx)(n.code,{children:"builder build"})," 命令构建出对应产物。"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"Usage: builder serve [options]\n\nOptions:\n  -h, --help            display help for command\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"配置",children:["配置",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["Builder CLI 默认会读取项目根目录下的 ",(0,l.jsx)(n.code,{children:"builder.config.ts"})," 配置文件，你可以在配置文件中使用 Builder 提供的",(0,l.jsx)(n.a,{href:"/api/index",children:"所有配置项"}),"。"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",meta:'title="builder.config.ts"',children:"import { defineConfig } from '@modern-js/builder-cli';\n\nexport default defineConfig({\n  output: {\n    disableTsChecker: true,\n  },\n});\n"})}),"\n",(0,l.jsxs)(n.p,{children:["当你使用 Rspack 作为打包工具时，由于 webpack 和 Rspack 的配置类型存在一些差异，需要为 defineConfig 指定 ",(0,l.jsx)(n.code,{children:"<'rspack'>"})," 泛型："]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",meta:'title="builder.config.ts"',children:"- export default defineConfig({\n+ export default defineConfig<'rspack'>({\n  // ...\n});\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"构建入口",children:["构建入口",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#构建入口",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["Builder CLI 默认会使用 ",(0,l.jsx)(n.code,{children:"src/index.(js|ts|jsx|tsx)"})," 作为构建入口，你可以使用 ",(0,l.jsx)(n.code,{children:"source.entries"})," 配置项来修改构建入口。"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"类型："})}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"type Entries = Record<string, string>;\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"默认值："})}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const defaultEntry = {\n  index: 'src/index.(js|ts|jsx|tsx)',\n};\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"示例："})}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",meta:'title="builder.config.ts"',children:"import { defineConfig } from '@modern-js/builder-cli';\n\nexport default defineConfig({\n  source: {\n    entries: {\n      foo: './src/pages/foo/index.ts',\n      bar: './src/pages/bar/index.ts',\n    },\n  },\n});\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"注册插件",children:["注册插件",(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#注册插件",children:"#"})]}),"\n",(0,l.jsxs)(n.p,{children:["你可以在 ",(0,l.jsx)(n.code,{children:"builder.config.ts"})," 中使用 ",(0,l.jsx)(n.code,{children:"builderPlugins"})," 选项来注册 Builder 插件。"]}),"\n",(0,l.jsx)(n.p,{children:"比如注册 Vue 插件："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",meta:'title="builder.config.ts"',children:"import { defineConfig } from '@modern-js/builder-cli';\nimport { builderPluginVue } from '@modern-js/builder-plugin-vue';\n\nexport default defineConfig({\n  builderPlugins: [builderPluginVue()],\n});\n"})})]})}(r=globalThis).__RSPRESS_PAGE_META||(r.__RSPRESS_PAGE_META={}),globalThis.__RSPRESS_PAGE_META["zh%2Fguide%2Fbasic%2Fbuilder-cli.mdx"]={toc:[{text:"安装",id:"安装",depth:2},{text:"命令",id:"命令",depth:2},{text:"builder dev",id:"builder-dev",depth:3},{text:"builder build",id:"builder-build",depth:3},{text:"builder serve",id:"builder-serve",depth:3},{text:"配置",id:"配置",depth:2},{text:"构建入口",id:"构建入口",depth:2},{text:"注册插件",id:"注册插件",depth:2}],title:"使用 Builder CLI",frontmatter:{}};var h=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,c.useMDXComponents)(),e.components).wrapper;return n?(0,l.jsx)(n,(0,s._)((0,i._)({},e),{children:(0,l.jsx)(a,(0,i._)({},e))})):a(e)}}}]);