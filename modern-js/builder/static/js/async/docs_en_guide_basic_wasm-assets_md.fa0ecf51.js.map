{"version":3,"file":"static/js/async/docs_en_guide_basic_wasm-assets_md.fa0ecf51.js","sources":["./docs/en/guide/basic/wasm-assets.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fguide%2Fbasic%2Fwasm-assets.md\"] = {\"toc\":[{\"text\":\"Import\",\"id\":\"import\",\"depth\":2},{\"text\":\"Output Directory\",\"id\":\"output-directory\",\"depth\":2},{\"text\":\"Add Type Declaration\",\"id\":\"add-type-declaration\",\"depth\":2}],\"title\":\"Import Wasm Assets\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        div: \"div\",\n        h2: \"h2\",\n        pre: \"pre\",\n        code: \"code\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"import-wasm-assets\">{\"Import Wasm Assets\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#import-wasm-assets\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Builder supports import WebAssembly assets in code.\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"What is WebAssembly\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"WebAssembly (Wasm) is a portable, high-performance binary format designed to execute CPU-intensive computing tasks in modern web browsers, bringing performance and reliability similar to native compiled code to the web platform.\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"import\">{\"Import\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#import\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"You can import a WebAssembly module directly in a JavaScript file:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"index.js\"'>{\"import { add } from './add.wasm';\\n\\nconsole.log(add); // [native code]\\nconsole.log(add(1, 2)); // 3\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"WebAssembly modules can also be imported via dynamic import:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"index.js\"'>{\"import('./add.wasm').then(({ add }) => {\\n  console.log('---- Async Wasm Module');\\n  console.log(add); // [native code]\\n  console.log(add(1, 2)); // 3\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"You can also get the path of a WebAssembly module using the \"}<_components.code>{\"new URL\"}</_components.code>{\" syntax:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"index.js\"'>{\"const wasmURL = new URL('./add.wasm', import.meta.url);\\n\\nconsole.log(wasmURL).pathname; // \\\"/static/wasm/[hash].module.wasm\\\"\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"output-directory\">{\"Output Directory\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#output-directory\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"When a \"}<_components.code>{\".wasm\"}</_components.code>{\" asset is imported, it will be output by Builder to the \"}<_components.code>{\"dist/static/wasm\"}</_components.code>{\" directory by default.\"}</_components.p>{\"\\n\"}<_components.p>{\"You can change the output directory of \"}<_components.code>{\".wasm\"}</_components.code>{\" files via \"}<_components.a href=\"/api/config-output#outputdistpath\">{\"output.distPath\"}</_components.a>{\" config.\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  output: {\\n    distPath: {\\n      wasm: 'resource/wasm',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"add-type-declaration\">{\"Add Type Declaration\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#add-type-declaration\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"When you import a Wasm file in TypeScript code, you usually need to add the corresponding type declaration.\"}</_components.p>{\"\\n\"}<_components.p>{\"For example, the \"}<_components.code>{\"add.wasm\"}</_components.code>{\" file exports an \"}<_components.code>{\"add()\"}</_components.code>{\" method, then you can create an \"}<_components.code>{\"add.wasm.d.ts\"}</_components.code>{\" file in the same directory and add the corresponding type declaration:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"add.wasm.d.ts\"'>{\"export const add = (num1: number, num2: number) => number;\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","div","h2","pre","code","components","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}