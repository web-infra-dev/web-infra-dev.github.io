{"version":3,"file":"static/js/async/docs_en_guide_basic_json-files_md.ec1e2ab1.js","sources":["./docs/en/guide/basic/json-files.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"en%2Fguide%2Fbasic%2Fjson-files.md\"] = {\"toc\":[{\"text\":\"JSON file\",\"id\":\"json-file\",\"depth\":2},{\"text\":\"Example\",\"id\":\"example\",\"depth\":3},{\"text\":\"Named Import\",\"id\":\"named-import\",\"depth\":3},{\"text\":\"YAML file\",\"id\":\"yaml-file\",\"depth\":2},{\"text\":\"Example\",\"id\":\"example-1\",\"depth\":3},{\"text\":\"Add type declaration\",\"id\":\"add-type-declaration\",\"depth\":3},{\"text\":\"Toml file\",\"id\":\"toml-file\",\"depth\":2},{\"text\":\"Example\",\"id\":\"example-2\",\"depth\":3},{\"text\":\"Add type declaration\",\"id\":\"add-type-declaration-1\",\"depth\":3}],\"title\":\"Import JSON Files\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        h3: \"h3\",\n        pre: \"pre\",\n        code: \"code\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"import-json-files\">{\"Import JSON Files\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#import-json-files\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Builder supports import JSON files in code, and also supports import \"}<_components.a href=\"https://yaml.org/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"YAML\"}</_components.a>{\" and \"}<_components.a href=\"https://toml.io/en/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Toml\"}</_components.a>{\" files and converting them to JSON format.\"}</_components.p>{\"\\n\"}<_components.h2 id=\"json-file\">{\"JSON file\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#json-file\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"You can import JSON files directly in JavaScript files.\"}</_components.p>{\"\\n\"}<_components.h3 id=\"example\">{\"Example\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#example\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\"example.json\"'>{'{\\n  \"name\": \"foo\",\\n  \"items\": [1, 2]\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"index.js\"'>{\"import example from './example.json';\\n\\nconsole.log(example.name); // 'foo';\\nconsole.log(example.items); // [1, 2];\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"named-import\">{\"Named Import\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#named-import\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Builder does not support importing JSON files via named import yet:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import { name } from './example.json';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"yaml-file\">{\"YAML file\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#yaml-file\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"YAML is a data serialization language commonly used for writing configuration files.\"}</_components.p>{\"\\n\"}<_components.p>{\"You can directly import \"}<_components.code>{\".yaml\"}</_components.code>{\" or \"}<_components.code>{\".yml\"}</_components.code>{\" files in JavaScript and they will be automatically converted to JSON format.\"}</_components.p>{\"\\n\"}<_components.h3 id=\"example-1\">{\"Example\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#example-1\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-yaml\" meta='title=\"example.yaml\"'>{\"---\\nhello: world\\nfoo:\\n  bar: baz\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import example from './example.yaml';\\n\\nconsole.log(example.hello); // 'world';\\nconsole.log(example.foo); // { bar: 'baz' };\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"add-type-declaration\">{\"Add type declaration\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#add-type-declaration\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"When you import a YAML file in your TypeScript code, please create a \"}<_components.code>{\"src/global.d.ts\"}</_components.code>{\" file in your project and add the corresponding type declaration:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"src/global.d.ts\"'>{\"declare module '*.yaml' {\\n  const content: Record<string, any>;\\n  export default content;\\n}\\n\\ndeclare module '*.yml' {\\n  const content: Record<string, any>;\\n  export default content;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"toml-file\">{\"Toml file\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#toml-file\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Toml is a semantically explicit, easy-to-read configuration file format.\"}</_components.p>{\"\\n\"}<_components.p>{\"You can directly import \"}<_components.code>{\".toml\"}</_components.code>{\" files in JavaScript and it will be automatically converted to JSON format.\"}</_components.p>{\"\\n\"}<_components.h3 id=\"example-2\">{\"Example\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#example-2\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-toml\" meta='title=\"example.toml\"'>{'hello = \"world\"\\n\\n[foo]\\nbar = \"baz\"\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import example from './example.toml';\\n\\nconsole.log(example.hello); // 'world';\\nconsole.log(example.foo); // { bar: 'baz' };\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"add-type-declaration-1\">{\"Add type declaration\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#add-type-declaration-1\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"When you import Toml files in TypeScript code, please create a \"}<_components.code>{\"src/global.d.ts\"}</_components.code>{\" file in your project and add the corresponding type declarations:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"src/global.d.ts\"'>{\"declare module '*.toml' {\\n  const content: Record<string, any>;\\n  export default content;\\n}\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","h3","pre","code","components","id","className","href","target","rel","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}