{"version":3,"file":"static/js/async/docs_zh_guide_debug_debug-mode_md.86f5ca26.js","sources":["./docs/zh/guide/debug/debug-mode.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Fdebug%2Fdebug-mode.md\"] = {\"toc\":[{\"text\":\"日志信息\",\"id\":\"日志信息\",\"depth\":2},{\"text\":\"Builder 配置文件\",\"id\":\"builder-配置文件\",\"depth\":2},{\"text\":\"webpack 配置文件\",\"id\":\"webpack-配置文件\",\"depth\":2},{\"text\":\"Rspack 配置文件\",\"id\":\"rspack-配置文件\",\"depth\":2}],\"title\":\"开启调试模式\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        pre: \"pre\",\n        h2: \"h2\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"开启调试模式\">{\"开启调试模式\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#开启调试模式\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"为了便于排查问题，Builder 提供了调试模式，你可以在执行构建时添加 \"}<_components.code>{\"DEBUG=builder\"}</_components.code>{\" 环境变量来开启 Builder 的调试模式。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"# 调试开发环境\\nDEBUG=builder pnpm dev\\n\\n# 调试生产环境\\nDEBUG=builder pnpm build\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在调试模式下，Builder 会输出一些额外的日志信息，并将内部最终生成的 Builder 配置和 webpack 配置写入到产物目录下，便于开发者查看和调试。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"日志信息\">{\"日志信息\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#日志信息\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"在调试模式下，你会看到 Shell 中输出了一些额外的信息，其中以 \"}<_components.code>{\"debug\"}</_components.code>{\" 开头的是一些流程日志，表明 Builder 内部执行了哪些操作。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"$ DEBUG=builder pnpm dev\\n\\ndebug   create context [1842.90 ms]\\ndebug   add default plugins [1874.45 ms]\\ndebug   add default plugins done [1938.57 ms]\\ndebug   init plugins [2388.29 ms]\\ndebug   init plugins done [2389.48 ms]\\n...\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"此外，Shell 中还会输出以下日志，表示 Builder 将内部生成的构建配置写入到磁盘中，此时你可以打开这些配置文件来查看相应的内容。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"Inspect config succeed, open following files to view the content:\\n\\n  - Builder Config: /Project/demo/dist/builder.config.js\\n  - Webpack Config (web): /Project/demo/dist/webpack.config.web.js\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"builder-配置文件\">{\"Builder 配置文件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#builder-配置文件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"在调试模式下，Builder 会自动生成 \"}<_components.code>{\"dist/builder.config.js\"}</_components.code>{\" 文件，这里面包含了最终生成的 Builder 配置。在这个文件里，你可以了解到你传入的 Builder 配置在经过框架层和 Builder 处理后的最终结果。\"}</_components.p>{\"\\n\"}<_components.p>{\"该文件的大致结构如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"module.exports = {\\n  dev: {\\n    // some configs...\\n  },\\n  source: {\\n    // some configs...\\n  },\\n  // other configs...\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"关于 Builder 配置项的完整介绍，请查看 \"}<_components.a href=\"/guide/basic/builder-config\">{\"Builder 配置项\"}</_components.a>{\" 章节。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"webpack-配置文件\">{\"webpack 配置文件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#webpack-配置文件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"如果当前项目是使用 webpack 进行构建的，那么在调试模式下，Builder 还会自动生成 \"}<_components.code>{\"dist/webpack.config.web.js\"}</_components.code>{\" 文件，这里面包含了最终生成的 webpack 配置。在这个文件里，你可以了解到 Builder 最终传递给 webpack 的配置里包含了哪些内容。\"}</_components.p>{\"\\n\"}<_components.p>{\"该文件的大致结构如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"module.exports = {\\n  resolve: {\\n    // some resolve configs...\\n  },\\n  module: {\\n    // some webpack loaders...\\n  },\\n  plugins: [\\n    // some webpack plugins...\\n  ],\\n  // other configs...\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"此外，如果项目配置了额外的构建产物类型，比如开启了框架的 SSR 能力（对应额外的 Node.js 构建产物），在 \"}<_components.code>{\"dist\"}</_components.code>{\" 目录会另外生成一份 \"}<_components.code>{\"webpack.config.node.js\"}</_components.code>{\" 文件，对应 SSR 构建时的 webpack 配置。\"}</_components.p>{\"\\n\"}<_components.p>{\"关于 webpack 配置项的完整介绍，请查看 \"}<_components.a href=\"https://webpack.js.org/concepts/configuration/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"webpack 官方文档\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"rspack-配置文件\">{\"Rspack 配置文件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#rspack-配置文件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"如果当前项目是使用 Rspack 进行构建的，那么在调试模式下，Builder 还会自动生成 \"}<_components.code>{\"dist/rspack.config.web.js\"}</_components.code>{\" 文件，这里面包含了最终生成的 Rspack 配置。在这个文件里，你可以了解到 Builder 最终传递给 Rspack 的配置里包含了哪些内容。\"}</_components.p>{\"\\n\"}<_components.p>{\"该文件的大致结构如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"module.exports = {\\n  resolve: {\\n    // some resolve configs...\\n  },\\n  module: {\\n    // some Rspack loaders...\\n  },\\n  plugins: [\\n    // some Rspack plugins...\\n  ],\\n  // other configs...\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"关于 Rspack 配置项的完整介绍，请查看 \"}<_components.a href=\"https://www.rspack.dev/zh/config.html\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Rspack 官方文档\"}</_components.a>{\"。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","pre","h2","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"uNAAA,E,mDAGA,SAASA,EAAkBC,CAAK,EAC5B,IAAMC,EAAcC,OAAOC,MAAM,CAAC,CAC9BC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,KAAM,OACNC,IAAK,MACLC,GAAI,IACR,EAAG,yBAAsBT,EAAMU,UAAU,EACzC,MAAO,uB,UAAE,WAACT,EAAYG,EAAE,EAACO,GAAG,S,UAAU,SAAS,UAACV,EAAYI,CAAC,EAACO,UAAU,gBAAgB,cAAY,OAAOC,KAAK,U,SAAW,G,MAAsC,KAAK,WAACZ,EAAYK,CAAC,E,UAAE,wCAAwC,UAACL,EAAYM,IAAI,E,SAAE,e,GAAoC,0B,GAA2C,KAAK,UAACN,EAAYO,GAAG,E,SAAC,UAACP,EAAYM,IAAI,EAACK,UAAU,gB,SAAiB,0E,KAAiH,KAAK,UAACX,EAAYK,CAAC,E,SAAE,kF,GAAoG,KAAK,WAACL,EAAYQ,EAAE,EAACE,GAAG,O,UAAQ,OAAO,UAACV,EAAYI,CAAC,EAACO,UAAU,gBAAgB,cAAY,OAAOC,KAAK,Q,SAAS,G,MAAsC,KAAK,WAACZ,EAAYK,CAAC,E,UAAE,qCAAqC,UAACL,EAAYM,IAAI,E,SAAE,O,GAA4B,oC,GAAqD,KAAK,UAACN,EAAYO,GAAG,E,SAAC,UAACP,EAAYM,IAAI,EAACK,UAAU,gB,SAAiB,4O,KAAmR,KAAK,UAACX,EAAYK,CAAC,E,SAAE,uE,GAAyF,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYM,IAAI,EAACK,UAAU,gB,SAAiB,qM,KAA4O,KAAK,WAACX,EAAYQ,EAAE,EAACE,GAAG,e,UAAgB,eAAe,UAACV,EAAYI,CAAC,EAACO,UAAU,gBAAgB,cAAY,OAAOC,KAAK,gB,SAAiB,G,MAAsC,KAAK,WAACZ,EAAYK,CAAC,E,UAAE,wBAAwB,UAACL,EAAYM,IAAI,E,SAAE,wB,GAA6C,mF,GAAoG,KAAK,UAACN,EAAYK,CAAC,E,SAAE,a,GAA+B,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYM,IAAI,EAACK,UAAU,c,SAAe,oI,KAA2K,KAAK,WAACX,EAAYK,CAAC,E,UAAE,2BAA2B,UAACL,EAAYI,CAAC,EAACQ,KAAK,8B,SAA+B,a,GAA+B,O,GAAwB,KAAK,WAACZ,EAAYQ,EAAE,EAACE,GAAG,e,UAAgB,eAAe,UAACV,EAAYI,CAAC,EAACO,UAAU,gBAAgB,cAAY,OAAOC,KAAK,gB,SAAiB,G,MAAsC,KAAK,WAACZ,EAAYK,CAAC,E,UAAE,mDAAmD,UAACL,EAAYM,IAAI,E,SAAE,4B,GAAiD,8E,GAA+F,KAAK,UAACN,EAAYK,CAAC,E,SAAE,a,GAA+B,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYM,IAAI,EAACK,UAAU,c,SAAe,4M,KAAmP,KAAK,WAACX,EAAYK,CAAC,E,UAAE,6DAA6D,UAACL,EAAYM,IAAI,E,SAAE,M,GAA2B,cAAc,UAACN,EAAYM,IAAI,E,SAAE,wB,GAA6C,8B,GAA+C,KAAK,WAACN,EAAYK,CAAC,E,UAAE,2BAA2B,UAACL,EAAYI,CAAC,EAACQ,KAAK,iDAAiDC,OAAO,SAASC,IAAI,sB,SAAuB,c,GAAgC,I,GAAqB,KAAK,WAACd,EAAYQ,EAAE,EAACE,GAAG,c,UAAe,cAAc,UAACV,EAAYI,CAAC,EAACO,UAAU,gBAAgB,cAAY,OAAOC,KAAK,e,SAAgB,G,MAAsC,KAAK,WAACZ,EAAYK,CAAC,E,UAAE,kDAAkD,UAACL,EAAYM,IAAI,E,SAAE,2B,GAAgD,4E,GAA6F,KAAK,UAACN,EAAYK,CAAC,E,SAAE,a,GAA+B,KAAK,UAACL,EAAYO,GAAG,E,SAAC,UAACP,EAAYM,IAAI,EAACK,UAAU,c,SAAe,0M,KAAiP,KAAK,WAACX,EAAYK,CAAC,E,UAAE,0BAA0B,UAACL,EAAYI,CAAC,EAACQ,KAAK,wCAAwCC,OAAO,SAASC,IAAI,sB,SAAuB,a,GAA+B,I,KACrlJ,CAbA,GAAAC,UAAA,EAAWC,mBAAmB,EAA9B,GAAWA,mBAAmB,CAAK,CAAC,GACpCD,WAAWC,mBAAmB,CAAC,qCAAqC,CAAG,CAAC,IAAM,CAAC,CAAC,KAAO,OAAO,GAAK,OAAO,MAAQ,CAAC,EAAE,CAAC,KAAO,eAAe,GAAK,eAAe,MAAQ,CAAC,EAAE,CAAC,KAAO,eAAe,GAAK,eAAe,MAAQ,CAAC,EAAE,CAAC,KAAO,cAAc,GAAK,cAAc,MAAQ,CAAC,EAAE,CAAC,MAAQ,SAAS,YAAc,CAAC,CAAC,EAiBvT,MAJA,W,IAAoBjB,EAAQ,UAAR,6CAAQ,CAAC,EACRkB,EAAc,AAAAhB,OAAOC,MAAM,CAAC,CAAC,EAAG,yBAAsBH,EAAMU,UAAU,EAA/ES,OAAO,CACf,OAAOD,EAAY,UAACA,EAAA,mBAAclB,GAAA,C,SAAO,UAACD,EAAA,KAAAqB,CAAA,AAAAA,EAAA,GAAsBpB,G,IAAuBD,EAAkBC,EAC7G,C"}