{"version":3,"file":"static/js/async/docs_zh_guide_optimization_split-chunk_md.99e6eed8.js","sources":["./docs/zh/guide/optimization/split-chunk.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Foptimization%2Fsplit-chunk.md\"] = {\"toc\":[{\"text\":\"拆包策略\",\"id\":\"拆包策略\",\"depth\":2},{\"text\":\"split-by-experience\",\"id\":\"split-by-experience\",\"depth\":3},{\"text\":\"分包策略\",\"id\":\"分包策略\",\"depth\":4},{\"text\":\"配置\",\"id\":\"配置\",\"depth\":4},{\"text\":\"注意事项\",\"id\":\"注意事项\",\"depth\":4},{\"text\":\"split-by-module\",\"id\":\"split-by-module\",\"depth\":3},{\"text\":\"分包策略\",\"id\":\"分包策略-1\",\"depth\":4},{\"text\":\"配置\",\"id\":\"配置-1\",\"depth\":4},{\"text\":\"注意事项\",\"id\":\"注意事项-1\",\"depth\":4},{\"text\":\"all-in-one\",\"id\":\"all-in-one\",\"depth\":3},{\"text\":\"分包策略\",\"id\":\"分包策略-2\",\"depth\":4},{\"text\":\"配置\",\"id\":\"配置-2\",\"depth\":4},{\"text\":\"注意事项\",\"id\":\"注意事项-2\",\"depth\":4},{\"text\":\"single-vendor\",\"id\":\"single-vendor\",\"depth\":3},{\"text\":\"分包策略\",\"id\":\"分包策略-3\",\"depth\":4},{\"text\":\"配置\",\"id\":\"配置-3\",\"depth\":4},{\"text\":\"注意事项\",\"id\":\"注意事项-3\",\"depth\":4},{\"text\":\"split-by-size\",\"id\":\"split-by-size\",\"depth\":3},{\"text\":\"分包策略\",\"id\":\"分包策略-4\",\"depth\":4},{\"text\":\"配置\",\"id\":\"配置-4\",\"depth\":4},{\"text\":\"自定义拆包\",\"id\":\"自定义拆包\",\"depth\":2},{\"text\":\"自定义分组\",\"id\":\"自定义分组\",\"depth\":3},{\"text\":\"注意事项\",\"id\":\"注意事项-4\",\"depth\":4},{\"text\":\"自定义 bundler 拆包配置\",\"id\":\"自定义-bundler-拆包配置\",\"depth\":3},{\"text\":\"使用 Dynamic Import 拆包\",\"id\":\"使用-dynamic-import-拆包\",\"depth\":2}],\"title\":\"拆包最佳实践\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        blockquote: \"blockquote\",\n        ul: \"ul\",\n        li: \"li\",\n        code: \"code\",\n        h3: \"h3\",\n        h4: \"h4\",\n        pre: \"pre\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"拆包最佳实践\">{\"拆包最佳实践\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#拆包最佳实践\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"良好的拆包策略对于提升应用的加载性能是十分重要的，可以充分利用浏览器的缓存机制，减少请求数量，加快页面加载速度。\"}</_components.p>{\"\\n\"}<_components.p>{\"在 Builder 中内置了多种拆包策略，可以满足大部分应用的需求，你也可以根据自己的业务场景，自定义拆包配置。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"拆包策略\">{\"拆包策略\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#拆包策略\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.blockquote>{\"\\n\"}<_components.p>{\"Builder 的拆包配置集中在 \"}<_components.a href=\"/api/config-performance#performancechunksplit\">{\"performance.chunkSplit\"}</_components.a>{\" 中。\"}</_components.p>{\"\\n\"}</_components.blockquote>{\"\\n\"}<_components.p>{\"Builder 支持设置以下几种拆包策略：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"split-by-experience\"}</_components.code>{\": 根据经验制定的拆分策略，自动将一些常用的 npm 包拆分为体积适中的 chunk。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"split-by-module\"}</_components.code>{\": 按 NPM 包的粒度拆分，每个 NPM 包对应一个 chunk。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"split-by-size\"}</_components.code>{\"：根据模块大小自动进行拆分。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"all-in-one\"}</_components.code>{\": 将所有代码全部打包到一个 chunk 中。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"single-vendor\"}</_components.code>{\": 将所有 NPM 包的代码打包到一个单独的 chunk 中。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"custom\"}</_components.code>{\": 自定义拆包配置。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"split-by-experience\">{\"split-by-experience\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#split-by-experience\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.h4 id=\"分包策略\">{\"分包策略\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#分包策略\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"Builder 默认采用 \"}<_components.code>{\"split-by-experience\"}</_components.code>{\" 策略，这是我们根据经验制定的策略。具体来说，当你的项目中引用了以下 npm 包时，它们会自动被拆分为单独的 chunk：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"lib-polyfill.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"core-js\"}</_components.code>{\"，\"}<_components.code>{\"@babel/runtime\"}</_components.code>{\"，\"}<_components.code>{\"@swc/helpers\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-react.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"react\"}</_components.code>{\"，\"}<_components.code>{\"react-dom\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-router.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"react-router\"}</_components.code>{\"，\"}<_components.code>{\"react-router-dom\"}</_components.code>{\"，\"}<_components.code>{\"history\"}</_components.code>{\"，\"}<_components.code>{\"@remix-run/router\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-lodash.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"lodash\"}</_components.code>{\"，\"}<_components.code>{\"lodash-es\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-antd.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"antd\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-arco.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"@arco-design/web-react\"}</_components.code>{\" 以及 \"}<_components.code>{\"@arco-design\"}</_components.code>{\" 组织下相关的包。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-semi.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"@douyinfe/semi-ui\"}</_components.code>{\" 以及 \"}<_components.code>{\"@ies\"}</_components.code>{\" 和 \"}<_components.code>{\"@douyinfe\"}</_components.code>{\" 组织下相关的包。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-axios.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"axios\"}</_components.code>{\" 以及相关的包。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"这种拆包策略将常用的包进行分组，然后拆分为单独的 chunk，一般 chunk 的数量不会很多，适合绝大部分应用，同时也是我们推荐的拆包策略。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"配置\">{\"配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'split-by-experience',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"注意事项\">{\"注意事项\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#注意事项\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"如果项目中没有安装或引用以上 npm 包，则不会生成相应的 chunk。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"split-by-module\">{\"split-by-module\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#split-by-module\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.h4 id=\"分包策略-1\">{\"分包策略\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#分包策略-1\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"将每一个 NPM 包拆分为一个单独的 chunk。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"配置-1\">{\"配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置-1\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'split-by-module',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"注意事项-1\">{\"注意事项\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#注意事项-1\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"这个配置会最细化地拆分 node_modules，产生大量的文件请求。\"}</_components.li>{\"\\n\"}<_components.li>{\"在使用 HTTP/2 时，由于存在多路复用，会加快资源的加载时间，并提高缓存命中率。\"}</_components.li>{\"\\n\"}<_components.li>{\"在未使用 HTTP/2 时，由于 HTTP 队头阻塞问题，会导致页面加载性能下降，请谨慎使用。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"all-in-one\">{\"all-in-one\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#all-in-one\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.h4 id=\"分包策略-2\">{\"分包策略\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#分包策略-2\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"此分包策略将业务代码、第三方依赖打包在同一个 chunk 中。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"配置-2\">{\"配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置-2\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'all-in-one',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"注意事项-2\">{\"注意事项\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#注意事项-2\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"这个配置会将构建生成的 JS 代码全部打包到一个文件里（除了 dynamic import 拆分的 chunk）\"}</_components.li>{\"\\n\"}<_components.li>{\"单个 JS 文件的体积可能会非常大，使页面加载性能下降。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"single-vendor\">{\"single-vendor\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#single-vendor\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.h4 id=\"分包策略-3\">{\"分包策略\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#分包策略-3\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"此分包策略将第三方依赖打包在一个 chunk 中，业务代码打包在另外的 chunk 中。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"配置-3\">{\"配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置-3\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'single-vendor',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h4 id=\"注意事项-3\">{\"注意事项\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#注意事项-3\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"单个 vendor 文件的体积可能会非常大，使页面加载性能下降。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"split-by-size\">{\"split-by-size\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#split-by-size\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.h4 id=\"分包策略-4\">{\"分包策略\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#分包策略-4\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"该策略下，设置 \"}<_components.code>{\"minSize\"}</_components.code>{\"、\"}<_components.code>{\"maxSize\"}</_components.code>{\" 为一个固定值后，Builder 会自动进行拆分，无需干预。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"配置-4\">{\"配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#配置-4\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'split-by-size',\\n      minSize: 30000,\\n      maxSize: 50000,\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"自定义拆包\">{\"自定义拆包\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自定义拆包\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"除了使用内置的拆包策略外，你也可以通过 Builder 自定义拆包功能来满足更多的定制化需求。自定义拆包分为两部分:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"自定义拆包分组\"}</_components.li>{\"\\n\"}<_components.li>{\"自定义原生 bundler 拆包配置\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"值得注意的是，这两种自定义拆包能力可以和内置的拆包策略一起使用，也就是说，你可以使用内置的拆包策略来拆分常用的包，然后再使用自定义拆包功能来拆分其他的包。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"自定义分组\">{\"自定义分组\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自定义分组\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Builder 支持自定义拆包分组，这样比内置拆包策略更灵活，同时比手写 bundler 底层配置更简单。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如将 node_modules 下的 \"}<_components.code>{\"axios\"}</_components.code>{\" 库拆分到 \"}<_components.code>{\"axios.js\"}</_components.code>{\" 中：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'split-by-experience',\\n      forceSplitting: {\\n        axios: /node_modules\\\\/axios/,\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"通过 \"}<_components.code>{\"forceSplitting\"}</_components.code>{\" 配置，你可以很方便把某些模块拆分为一个 chunk。\"}</_components.p>{\"\\n\"}<_components.h4 id=\"注意事项-4\">{\"注意事项\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#注意事项-4\">{\"#\"}</_components.a></_components.h4>{\"\\n\"}<_components.p>{\"通过 \"}<_components.code>{\"forceSplitting\"}</_components.code>{\" 配置拆分的 chunk 会通过 \"}<_components.code>{\"<script>\"}</_components.code>{\" 标签插入到 HTML 文件中，作为首屏请求的资源。因此，请根据实际场景来进行适当地拆分，避免首屏资源体积过大。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"自定义-bundler-拆包配置\">{\"自定义 bundler 拆包配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自定义-bundler-拆包配置\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"除了使用自定义分组外，你还可以通过 \"}<_components.code>{\"override\"}</_components.code>{\" 配置项来自定义底层 bundler 的拆包配置，比如:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'split-by-experience',\\n      override: {\\n        chunks: 'all',\\n        minSize: 30000,\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"其中 \"}<_components.code>{\"override\"}</_components.code>{\" 中的配置会和 bundler 的配置进行合并，具体配置项请参考 \"}<_components.a href=\"https://webpack.js.org/plugins/split-chunks-plugin/#splitchunkschunks\" target=\"_blank\" rel=\"noopener noreferrer\">{\"webpack - splitChunks\"}</_components.a>{\" 或 \"}<_components.a href=\"https://rspack.dev/zh/config/optimization.html#optimization-splitchunks\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Rspack - splitChunks\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"使用-dynamic-import-拆包\">{\"使用 Dynamic Import 拆包\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用-dynamic-import-拆包\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"除了 \"}<_components.code>{\"chunkSplit\"}</_components.code>{\" 配置，使用 dynamic import 拆包也是一项重要的优化手段，它可以有效减少首屏的包体积。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"关于 dynamic import\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"Dynamic import 是 ECMAScript 2020 引入的一个新特性，它允许你动态地加载一些 JavaScript 模块。Builder 底层的 Rspack / webpack 默认支持 dynamic import，所以你可以直接在代码中使用它。\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.p>{\"当打包工具遇到 \"}<_components.code>{\"import()\"}</_components.code>{\" 语法时，它会自动将相关的代码分割成一个新的 chunk，并在运行时按需加载。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如，项目中有一个大的模块 \"}<_components.code>{\"bigModule.ts\"}</_components.code>{\"（也可以是一个第三方依赖），你可以使用 dynamic import 来按需加载它：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"// 在某个需要使用 bigModule 的地方\\nimport('./bigModule.ts').then(bigModule => {\\n  // 使用 bigModule\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"当你运行构建命令时，\"}<_components.code>{\"bigModule.ts\"}</_components.code>{\" 就会被自动分割成一个新的 chunk，并在运行时按需加载。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","blockquote","ul","li","code","h3","h4","pre","div","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}