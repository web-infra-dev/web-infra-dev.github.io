{"version":3,"file":"static/js/async/docs_zh_guide_advanced_define_md.9f77ea81.js","sources":["./docs/zh/guide/advanced/define.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Fadvanced%2Fdefine.md\"] = {\"toc\":[{\"text\":\"默认环境变量\",\"id\":\"默认环境变量\",\"depth\":2},{\"text\":\"process.env.NODE_ENV\",\"id\":\"processenvnode_env\",\"depth\":3},{\"text\":\"process.env.ASSET_PREFIX\",\"id\":\"processenvasset_prefix\",\"depth\":3},{\"text\":\"使用 define 配置项\",\"id\":\"使用-define-配置项\",\"depth\":2},{\"text\":\"替换表达式\",\"id\":\"替换表达式\",\"depth\":3},{\"text\":\"process.env 注入方式\",\"id\":\"processenv-注入方式\",\"depth\":3},{\"text\":\"设置环境变量\",\"id\":\"设置环境变量\",\"depth\":2},{\"text\":\"声明环境变量类型\",\"id\":\"声明环境变量类型\",\"depth\":2},{\"text\":\"Tree Shaking\",\"id\":\"tree-shaking\",\"depth\":2},{\"text\":\"源码内联测试\",\"id\":\"源码内联测试\",\"depth\":2}],\"title\":\"环境变量\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        h3: \"h3\",\n        code: \"code\",\n        pre: \"pre\",\n        ul: \"ul\",\n        li: \"li\",\n        div: \"div\",\n        ol: \"ol\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"环境变量\">{\"环境变量\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#环境变量\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Builder 支持在编译过程中向代码中注入环境变量或表达式，这对于区分运行环境、注入常量值等场景很有帮助。本章节会介绍环境变量的使用方式。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"默认环境变量\">{\"默认环境变量\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#默认环境变量\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"processenvnode_env\">{\"process.env.NODE_ENV\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#processenvnode_env\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"默认情况下，Builder 会自动设置 \"}<_components.code>{\"process.env.NODE_ENV\"}</_components.code>{\" 环境变量，在开发模式为 \"}<_components.code>{\"'development'\"}</_components.code>{\"，生产模式为 \"}<_components.code>{\"'production'\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"你可以在 Node.js 和运行时代码中直接使用 \"}<_components.code>{\"process.env.NODE_ENV\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"if (process.env.NODE_ENV === 'development') {\\n  console.log('this is a development log');\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在开发环境，以上代码会被编译为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"if (true) {\\n  console.log('this is a development log');\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在生产环境，以上代码会被编译为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"if (false) {\\n  console.log('this is a development log');\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在代码压缩过程中，\"}<_components.code>{\"if (false) { ... }\"}</_components.code>{\" 会被识别为无效代码，并被自动移除。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"processenvasset_prefix\">{\"process.env.ASSET_PREFIX\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#processenvasset_prefix\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"你可以在运行时代码中使用 \"}<_components.code>{\"process.env.ASSET_PREFIX\"}</_components.code>{\" 来访问静态资源的前缀。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"在开发环境下，它等同于 \"}<_components.a href=\"/api/config-dev#dev-assetprefix\">{\"dev.assetPrefix\"}</_components.a>{\" 设置的值。\"}</_components.li>{\"\\n\"}<_components.li>{\"在生产环境下，它等同于 \"}<_components.a href=\"/api/config-output#output-assetprefix\">{\"output.assetPrefix\"}</_components.a>{\" 设置的值。\"}</_components.li>{\"\\n\"}<_components.li>{\"Builder 会自动移除 \"}<_components.code>{\"assetPrefix\"}</_components.code>{\" 尾部的斜线符号，以便于进行字符串拼接。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"比如，我们通过 \"}<_components.a href=\"/api/config-output#output-copy\">{\"output.copy\"}</_components.a>{\" 配置，将 \"}<_components.code>{\"static/icon.png\"}</_components.code>{\" 图片拷贝到 \"}<_components.code>{\"dist\"}</_components.code>{\" 目录下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  dev: {\\n    assetPrefix: '/',\\n  },\\n  output: {\\n    copy: [{ from: './static', to: 'static' }],\\n    assetPrefix: 'https://example.com',\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"此时，我们可以在前端代码中通过以下方式来拼接图片 URL：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-jsx\">{\"const Image = <img src={`${process.env.ASSET_PREFIX}/static/icon.png`} />;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在开发环境，以上代码会被编译为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-jsx\">{\"const Image = <img src={`/static/icon.png`} />;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在生产环境，以上代码会被编译为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-jsx\">{\"const Image = <img src={`https://example.com/static/icon.png`} />;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"使用-define-配置项\">{\"使用 define 配置项\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用-define-配置项\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"通过配置 \"}<_components.a href=\"/api/config-source#sourcedefine\">{\"source.define\"}</_components.a>{\" 选项，你可以在构建时将代码中的变量替换成其它值或者表达式。\"}</_components.p>{\"\\n\"}<_components.p>{\"define 类似于其它一些语言提供的宏定义能力，但得益于 JavaScript 强大的运行时表达能力，通常不需要像那些语言一样将其用作复杂代码的生成器。它常用于在构建环境向运行时传递环境变量等简单信息，或是辅助 Builder 进行 Tree Shaking 等操作。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"替换表达式\">{\"替换表达式\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#替换表达式\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"define 最基础的用途是在构建时替换代码中的表达式。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如环境变量 \"}<_components.code>{\"NODE_ENV\"}</_components.code>{\" 的值会影响许多第三方模块的行为，在构建线上应用的产物时通常需要将它设置为 \"}<_components.code>{'\"production\"'}</_components.code>{\"：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    define: {\\n      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"需要注意的是这里提供的值必须是 JSON 字符串，例如 \"}<_components.code>{\"process.env.NODE_ENV\"}</_components.code>{\" 的值为 \"}<_components.code>{'\"production\"'}</_components.code>{\" 则传入的值应当是 \"}<_components.code>{'\"\\\\\"production\\\\\"\"'}</_components.code>{\" 才能够正确被处理。\"}</_components.p>{\"\\n\"}<_components.p>{\"同理 \"}<_components.code>{'{ foo: \"bar\" }'}</_components.code>{\" 也应该被转换成 \"}<_components.code>{'\"{\\\\\"foo\\\\\":\\\\\"bar\\\\\"}\"'}</_components.code>{\"，如果直接传入原始对象则意味着把表达式 \"}<_components.code>{\"process.env.NODE_ENV.foo\"}</_components.code>{\" 替换为标识符 \"}<_components.code>{\"bar\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p><_components.code>{\"source.define\"}</_components.code>{\" 的具体行为请参考 \"}<_components.a href=\"/api/config-source#sourcedefine\">{\"API 文档\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"以上例子中的环境变量 \"}<_components.code>{\"NODE_ENV\"}</_components.code>{\" 已经由 Builder 自动注入，通常你不需要手动配置它的值。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"processenv-注入方式\">{\"process.env 注入方式\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#processenv-注入方式\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"在使用 \"}<_components.code>{\"source.define\"}</_components.code>{\" 或 \"}<_components.code>{\"source.globalVars\"}</_components.code>{\" 时，请避免注入整个 \"}<_components.code>{\"process.env\"}</_components.code>{\" 对象，比如下面的用法是不推荐的：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    define: {\\n      'process.env': JSON.stringify(process.env),\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"如果你采用了上述用法，将会导致如下问题：\"}</_components.p>{\"\\n\"}<_components.ol>{\"\\n\"}<_components.li>{\"额外注入了一些未使用的环境变量，导致开发环境的环境变量被泄露到前端代码中。\"}</_components.li>{\"\\n\"}<_components.li>{\"由于每一处 \"}<_components.code>{\"process.env\"}</_components.code>{\" 代码都会被替换为完整的环境变量对象，导致前端代码的包体积增加，性能降低。\"}</_components.li>{\"\\n\"}</_components.ol>{\"\\n\"}<_components.p>{\"因此，请按照实际需求来注入 \"}<_components.code>{\"process.env\"}</_components.code>{\" 上的环境变量，避免全量注入。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"设置环境变量\">{\"设置环境变量\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#设置环境变量\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"针对设置环境变量的高频场景，Builder 还提供了 \"}<_components.a href=\"/api/config-source#sourceglobalvars\">{\"source.globalVars\"}</_components.a>{\" 配置用于简化配置，它是 \"}<_components.code>{\"source.define\"}</_components.code>{\" 的一个语法糖，唯一的区别是 \"}<_components.code>{\"source.globalVars\"}</_components.code>{\" 会自动将传入的值进行 JSON 序列化处理，这使得设置环境变量的值更容易，避免大量书写 \"}<_components.code>{\"JSON.stringify(...)\"}</_components.code>{\" 转换语句：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    globalVars: {\\n      'process.env.NODE_ENV': 'production',\\n      'import.meta.foo': { bar: 42 },\\n      'import.meta.baz': false,\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"需要注意的是不论以上哪种方式都只会匹配完整的表达式，对表达式进行解构会让 Builder 无法正确识别：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"console.log(process.env.NODE_ENV);\\n// => production\\n\\nconst { NODE_ENV } = process.env;\\nconsole.log(NODE_ENV);\\n// => undefined\\n\\nconst vars = process.env;\\nconsole.log(vars.NODE_ENV);\\n// => undefined\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"声明环境变量类型\">{\"声明环境变量类型\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#声明环境变量类型\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"当你在 TypeScript 代码中读取环境变量时，TypeScript 可能会提示该变量缺少类型定义，此时你需要添加相应的类型声明。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如你引用了一个 \"}<_components.code>{\"CUSTOM_VAR\"}</_components.code>{\" 变量，在 TypeScript 文件中会出现如下提示：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code>{\"TS2304: Cannot find name 'CUSTOM_VAR'.\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"此时，你可以在项目中创建 \"}<_components.code>{\"src/env.d.ts\"}</_components.code>{\" 文件，并添加以下内容即可：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"src/env.d.ts\"'>{\"declare const CUSTOM_VAR: string;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"tree-shaking\">{\"Tree Shaking\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#tree-shaking\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Define 还可以用于标记死代码以协助 Builder 进行 Tree Shaking 优化。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如通过将 \"}<_components.code>{\"process.env.REGION\"}</_components.code>{\" 替换为具体值来实现针对不同地区的产物进行差异化构建：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    define: {\\n      'process.env.REGION': JSON.stringify(process.env.REGION),\\n    },\\n    // or...\\n    globalVars: {\\n      'process.env.REGION': process.env.REGION,\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"这样设置后对于存在地区控制的代码：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const App = () => {\\n  if (process.env.REGION === 'cn') {\\n    return <EntryFoo />;\\n  } else if (process.env.REGION === 'sg') {\\n    return <EntryBar />;\\n  } else {\\n    return <EntryBaz />;\\n  }\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"指定环境变量 \"}<_components.code>{\"REGION=sg\"}</_components.code>{\" 并执行构建得到的产物会被剔除多余的代码：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"const App = () => {\\n  if (false) {\\n  } else if (true) {\\n    return <EntryBar />;\\n  } else {\\n  }\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"未用到的组件不会被打包到产物中，它们的外部依赖也会对应地被优化，最终即可得到体积和性能都更优的产物代码。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"源码内联测试\">{\"源码内联测试\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#源码内联测试\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Vitest 支持将测试写在源码文件内，能够在不导出的情况下测试私有功能的行为，并且通过设置 Define 来在正式构建时剔除测试代码。详细指南请参考 \"}<_components.a href=\"https://cn.vitest.dev/guide/in-source.html\" target=\"_blank\" rel=\"noopener noreferrer\">{\"Vitest 官方文档\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"// 函数实现\\nfunction add(...args) {\\n  return args.reduce((a, b) => a + b, 0);\\n}\\n\\n// 源码内的测试套件\\nif (import.meta.vitest) {\\n  const { it, expect } = import.meta.vitest;\\n  it('add', () => {\\n    expect(add()).toBe(0);\\n    expect(add(1)).toBe(1);\\n    expect(add(1, 2, 3)).toBe(6);\\n  });\\n}\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","h3","code","pre","ul","li","div","ol","components","id","className","href","meta","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}