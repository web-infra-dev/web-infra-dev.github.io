{"version":3,"file":"static/js/async/docs_zh_plugins_introduction_md.faed8561.js","sources":["./docs/zh/plugins/introduction.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fplugins%2Fintroduction.md\"] = {\"toc\":[{\"text\":\"开发插件\",\"id\":\"开发插件\",\"depth\":2},{\"text\":\"生命周期钩子\",\"id\":\"生命周期钩子\",\"depth\":2},{\"text\":\"使用配置项\",\"id\":\"使用配置项\",\"depth\":2},{\"text\":\"修改 webpack 配置\",\"id\":\"修改-webpack-配置\",\"depth\":2},{\"text\":\"参考范例\",\"id\":\"参考范例\",\"depth\":2},{\"text\":\"修改 Loader\",\"id\":\"修改-loader\",\"depth\":3},{\"text\":\"添加模块入口\",\"id\":\"添加模块入口\",\"depth\":3},{\"text\":\"接入 webpack 插件\",\"id\":\"接入-webpack-插件\",\"depth\":3}],\"title\":\"插件系统\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        ul: \"ul\",\n        li: \"li\",\n        h2: \"h2\",\n        code: \"code\",\n        pre: \"pre\",\n        strong: \"strong\",\n        h3: \"h3\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"插件系统\">{\"插件系统\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#插件系统\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Builder 提供了一套轻量强大的插件系统，用以实现自身的大多数功能，并允许用户进行扩展。\\n开发者编写的插件能够修改 Builder 的默认行为并添加各类额外功能，包括但不限于：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"修改 bundler 配置\"}</_components.li>{\"\\n\"}<_components.li>{\"处理新的文件类型\"}</_components.li>{\"\\n\"}<_components.li>{\"修改或编译文件\"}</_components.li>{\"\\n\"}<_components.li>{\"部署产物\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"Builder 底层支持 webpack 和 Rspack 等 bundler，并提供统一的 Node.js API 来抹平插件开发的差异，进而接入不同的上层框架、降低用户对底层 bundler 切换的感知。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"开发插件\">{\"开发插件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#开发插件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"插件提供类似 \"}<_components.code>{\"(options?: PluginOptions) => BuilderPlugin\"}</_components.code>{\" 的函数作为入口，建议将插件函数命名为 \"}<_components.code>{\"builderPluginXXX\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { BuilderPlugin } from '@modern-js/builder-webpack-provider';\\n\\nexport interface PluginFooOptions {\\n  message?: string;\\n}\\n\\nexport const builderPluginFoo = (\\n  options?: PluginFooOptions,\\n): BuilderPlugin => ({\\n  name: 'plugin-foo',\\n  setup(api) {\\n    api.onExit(() => {\\n      const msg = options.message || 'finish.';\\n      console.log(msg);\\n    });\\n  },\\n});\\n\\nbuilder.addPlugins([builderPluginFoo({ message: 'some other message.' })]);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"函数形式的插件可以 \"}<_components.strong>{\"接受选项对象\"}</_components.strong>{\" 并 \"}<_components.strong>{\"返回插件实例\"}</_components.strong>{\"，并通过闭包机制管理内部状态。\"}</_components.p>{\"\\n\"}<_components.p>{\"其中各部分的作用分别为：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"name\"}</_components.code>{\" 属性用于标注插件名称\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"setup\"}</_components.code>{\" 作为插件逻辑的主入口\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"api\"}</_components.code>{\" 对象包含了各类钩子和工具函数\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"为了便于识别，插件名称需要包含约定的 \"}<_components.code>{\"builder-plugin\"}</_components.code>{\" 前缀，例如 \"}<_components.code>{\"builder-plugin-foo\"}</_components.code>{\" \"}<_components.code>{\"@scope/builder-plugin-bar\"}</_components.code>{\" 等。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"生命周期钩子\">{\"生命周期钩子\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#生命周期钩子\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Builder 在内部按照约定的生命周期进行任务调度，插件可以通过注册钩子来介入工作流程的任意阶段，并实现自己的功能。\"}</_components.p>{\"\\n\"}<_components.p>{\"Builder 生命周期钩子的完整列表参考 \"}<_components.a href=\"/api/plugin-hooks\">{\"API 文档\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"Builder 不会接管底层 Bundler 的生命周期，相关生命周期钩子的使用方式见对应文档：\"}<_components.a href=\"https://webpack.js.org/api/compiler-hooks/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"webpack hooks\"}</_components.a></_components.p>{\"\\n\"}<_components.h2 id=\"使用配置项\">{\"使用配置项\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用配置项\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"自行编写的插件通常使用初始化时传入函数的参数作为配置项即可，开发者可以随意定义和使用函数的入参。\"}</_components.p>{\"\\n\"}<_components.p>{\"但某些情况下插件可能需要读取 / 修改 Builder 公用的配置项，这时就需要了解 Builder 内部对配置项的生产和消费流程：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"读取、解析配置并合并默认值\"}</_components.li>{\"\\n\"}<_components.li>{\"插件通过 \"}<_components.code>{\"api.modifyBuilderConfig(...)\"}</_components.code>{\" 回调修改配置项\"}</_components.li>{\"\\n\"}<_components.li>{\"归一化配置项并提供给插件后续消费，此后无法再修改配置项\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"整套流程可以通过这个简单的插件体现：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const builderPluginUploadDist = (): BuilderPlugin => ({\\n  name: 'plugin-upload-dist',\\n  setup(api) {\\n    api.modifyBuilderConfig(config => {\\n      // 尝试关闭代码压缩，需要自己填充默认值\\n      config.output ||= {};\\n      config.output.disableMinimize = true;\\n      // 轮到其它插件修改配置...\\n    });\\n    api.onBeforeBuild(() => {\\n      // 读取最终的配置\\n      const config = api.getNormalizedConfig();\\n      if (!config.output.disableMinimize) {\\n        // 其它插件又启用了压缩则报错\\n        throw new Error(\\n          'You must disable minimize to upload readable dist files.',\\n        );\\n      }\\n    });\\n    api.onAfterBuild(() => {\\n      const config = api.getNormalizedConfig();\\n      const distRoot = config.output.distPath.root;\\n      // TODO: 上传 `distRoot` 目录下所有产物文件\\n    });\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"插件中有三种方式使用配置项对象：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"api.modifyBuilderConfig(config => {})\"}</_components.code>{\" 在回调中修改配置\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"api.getBuilderConfig()\"}</_components.code>{\" 获取配置项\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"api.getNormalizedConfig()\"}</_components.code>{\" 获取归一化后的配置项\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"归一化的配置项会再次合并默认值并移除大部分可选类型，对于 \"}<_components.code>{\"PluginUploadDist\"}</_components.code>{\" 的例子其部分类型定义为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"api.modifyBuilderConfig((config: BuilderConfig) => {});\\napi.getBuilderConfig() as BuilderConfig;\\ntype BuilderConfig = {\\n  output?: {\\n    disableMinimize?: boolean;\\n    distPath?: { root?: string };\\n  };\\n};\\n\\napi.getNormalizedConfig() as NormalizedConfig;\\ntype NormalizedConfig = {\\n  output: {\\n    disableMinimize: boolean;\\n    distPath: { root: string };\\n  };\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"getNormalizedConfig()\"}</_components.code>{\" 的返回值类型与 \"}<_components.code>{\"BuilderConfig\"}</_components.code>{\" 的略有不同、相比文档其它地方描述的类型进行了收窄，\\n在使用时无需自行判空、填充默认值。\"}</_components.p>{\"\\n\"}<_components.p>{\"因此使用配置项的最佳方式应该是：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"通过 \"}<_components.code>{\"api.modifyBuilderConfig(config => {})\"}</_components.code>{\" 来\"}<_components.strong>{\"修改配置\"}</_components.strong></_components.li>{\"\\n\"}<_components.li>{\"在其后的生命周期中读取 \"}<_components.code>{\"api.getNormalizedConfig()\"}</_components.code>{\" 作为插件\"}<_components.strong>{\"实际使用的配置\"}</_components.strong></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"修改-webpack-配置\">{\"修改 webpack 配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#修改-webpack-配置\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"插件可以通过多种方式修改 webpack 的配置项。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"api.modifyWebpackChain(chain => {})\"}</_components.code>{\" 修改 webpack-chain\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"api.modifyWebpackConfig(config => {})\"}</_components.code>{\" 修改最终的 webpack 配置\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"api.onAfterCreateCompiler(compiler => {})\"}</_components.code>{\" 直接操作 webpack 实例\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"通常推荐使用 \"}<_components.a href=\"https://github.com/neutrinojs/webpack-chain\" target=\"_blank\" rel=\"noopener noreferrer\">{\"neutrinojs/webpack-chain\"}</_components.a>{\" 提供的链式 API 来修改 webpack 配置的工作。\"}</_components.p>{\"\\n\"}<_components.p>{\"Builder 使用的是兼容 webpack5 的修改版本：\"}<_components.a href=\"https://github.com/sorrycc/webpack-chain\" target=\"_blank\" rel=\"noopener noreferrer\">{\"sorrycc/webpack-chain\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"参考范例\">{\"参考范例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#参考范例\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"修改-loader\">{\"修改 Loader\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#修改-loader\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Loader 可以读取和处理不同类型的文件模块，具体参考 \"}<_components.a href=\"https://webpack.js.org/concepts/loaders\" target=\"_blank\" rel=\"noopener noreferrer\">{\"concepts\"}</_components.a>{\" 和 \"}<_components.a href=\"https://webpack.js.org/loaders/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"loaders\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { BuilderPlugin } from '@modern-js/builder-webpack-provider';\\n\\nexport const builderPluginTypeScriptExt = (): BuilderPlugin => ({\\n  name: 'builder-typescript-ext',\\n  setup(api) {\\n    api.modifyWebpackChain(async chain => {\\n      // 设置 ts-loader 将更多的文件识别为 typescript 模块\\n      chain.module.rule(CHAIN_ID.RULE.TS).test(/\\\\.(ts|mts|cts|tsx|tss|tsm)$/);\\n    });\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"添加模块入口\">{\"添加模块入口\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#添加模块入口\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { BuilderPlugin } from '@modern-js/builder-webpack-provider';\\n\\nexport const builderPluginAdminPanel = (): BuilderPlugin => ({\\n  name: 'builder-admin-panel',\\n  setup(api) {\\n    api.modifyWebpackChain(async chain => {\\n      config.entry('admin-panel').add('src/admin/panel.js');\\n    });\\n  },\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"接入-webpack-插件\">{\"接入 webpack 插件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#接入-webpack-插件\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"开发者可以在 Builder 插件中接入已有的 webpack 插件来平缓迁移项目：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import type { BuilderPlugin } from '@modern-js/builder-webpack-provider';\\nimport type { Options } from '@modern-js/inspector-webpack-plugin';\\n\\nexport const builderPluginInspector = (options?: Options): BuilderPlugin => ({\\n  name: 'builder-plugin-inspector',\\n  setup(api) {\\n    api.modifyWebpackChain(async chain => {\\n      // 仅在需要的时候动态加载模块，避免不必要的性能消耗\\n      const { InspectorWebpackPlugin } = await import(\\n        '@modern-js/inspector-webpack-plugin'\\n      );\\n      // 修改 webpack chain 接入插件\\n      chain\\n        .plugin('inspector-webpack-plugin')\\n        .use(InspectorWebpackPlugin, [inspectorOptions]);\\n    });\\n  },\\n});\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","ul","li","h2","code","pre","strong","h3","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}