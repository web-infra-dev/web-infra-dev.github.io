{"version":3,"file":"static/js/async/docs_zh_guide_basic_typescript_md.ffe77855.js","sources":["./docs/zh/guide/basic/typescript.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Fbasic%2Ftypescript.md\"] = {\"toc\":[{\"text\":\"TypeScript 转译\",\"id\":\"typescript-转译\",\"depth\":2},{\"text\":\"为什么默认使用 Babel\",\"id\":\"为什么默认使用-babel\",\"depth\":3},{\"text\":\"类型检查\",\"id\":\"类型检查\",\"depth\":2}],\"title\":\"使用 TypeScript\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        h2: \"h2\",\n        strong: \"strong\",\n        pre: \"pre\",\n        h3: \"h3\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"使用-typescript\">{\"使用 TypeScript\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用-typescript\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Builder 对 TypeScript 的转译和类型检查做了默认支持，无需任何配置即可在项目中使用 \"}<_components.code>{\".ts\"}</_components.code>{\" 和 \"}<_components.code>{\".tsx\"}</_components.code>{\" 文件。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"typescript-转译\">{\"TypeScript 转译\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#typescript-转译\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Builder 有三种可选方式处理 TypeScript 文件。\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"Babel\"}</_components.strong></_components.p>{\"\\n\"}<_components.p>{\"在默认配置下，源码中所有的 TypeScript 文件会经过 Babel 转译。\\n可能你在查阅较老旧的资料时会发现，Babel 无法处理 \"}<_components.code>{\"const enum\"}</_components.code>{\" 以及 \"}<_components.code>{\"namespace alias\"}</_components.code>{\" 语法，但是其实在 \"}<_components.a href=\"https://babeljs.io/blog/2021/07/26/7.15.0\" target=\"_blank\" rel=\"noopener noreferrer\">{\"7.15\"}</_components.a>{\" 版本已经得到了支持。Babel 无需手动开启，直接在项目中使用 TypeScript 文件即可。\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"ts-loader\"}</_components.strong></_components.p>{\"\\n\"}<_components.p>{\"ts-loader 使用 TypeScript 官方的 TSC 转译。当开启 ts-loader 后 TypeScript 文件不会再经过 Babel 编译处理，但处理后的 JavaScript 产物仍然会由 Babel 进行语法降级以及 Polyfill 注入。\"}</_components.p>{\"\\n\"}<_components.p>{\"开启 ts-loader(使用默认配置):\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  tools: {\\n    tsLoader: {},\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"更详细配置可见 \"}<_components.a href=\"/api/config-tools#toolstsloader\">{\"tools.tsLoader\"}</_components.a>{\"。\\n如果开启 ts-loader，默认不会启用类型检查，只会进行转译。\"}</_components.p>{\"\\n\"}<_components.p><_components.strong>{\"SWC\"}</_components.strong></_components.p>{\"\\n\"}<_components.p>{\"如果想要更快的项目构建速度，并且项目没有依赖某些自定义的 Babel 插件，那么也可以选择 SWC 来对 JavaScript 和 TypeScript 进行转译和压缩。Builder 的 SWC 插件默认支持 TypeScript, TSX, Decorator，使用方式可见 \"}<_components.a href=\"/plugins/plugin-swc\">{\"SWC 插件\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"为什么默认使用-babel\">{\"为什么默认使用 Babel\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#为什么默认使用-babel\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Babel 除了没有类型检查以外，对 TypeScript 语法支持已经非常完善，而类型检查可以借助另外的工具更好地进行。转译到低版本的 JavaScript 时，某些语法 Babel 会处理得更符合标准，例如 Babel 会将类成员初始化为 undefined，将类方法标记不可枚举等行为。如果启用 ts-loader，为了更精确的语法降级和 Polyfill，最后还是会将处理后的产物再次经过 Babel 处理，产生不必要的性能开销。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"类型检查\">{\"类型检查\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#类型检查\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"目前生产可用的类型检查工具只有官方的 TSC，TSC 类型检查耗时在大项目中往往是很慢的过程，Builder 中默认使用 tsChecker(\"}<_components.a href=\"https://github.com/TypeStrong/fork-ts-checker-webpack-plugin\" target=\"_blank\" rel=\"noopener noreferrer\">{\"fork-ts-checker-webpack-plugin\"}</_components.a>{\") 在构建过程中异步进行类型检查，不阻塞项目的启动。\"}</_components.p>{\"\\n\"}<_components.p>{\"配置 tsChecker(使用默认配置):\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  tools: {\\n    tsChecker: {},\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"更多配置可见 \"}<_components.a href=\"/api/config-tools#toolstschecker\">{\"tsChecker 配置\"}</_components.a>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"如果开启 ts-loader 并且手动配置了 \"}<_components.code>{\"compileOnly: false\"}</_components.code>{\"，请关闭 tsChecker，避免重复类型检查。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"STC\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"SWC 作者新开源的基于 Rust 的类型检查工具 \"}<_components.a href=\"https://github.com/dudykr/stc\" target=\"_blank\" rel=\"noopener noreferrer\">{\"STC\"}</_components.a>{\" 目前还不可用于生产，还在起步阶段，不推荐用于项目中，等待更成熟之后，我们会考虑集成到 Builder 的 SWC 插件中作为实验功能，敬请期待。\\n\"}</_components.p></_components.div></_components.div></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","h2","strong","pre","h3","div","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}