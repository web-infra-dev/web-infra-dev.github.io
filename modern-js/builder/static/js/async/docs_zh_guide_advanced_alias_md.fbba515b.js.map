{"version":3,"file":"static/js/async/docs_zh_guide_advanced_alias_md.fbba515b.js","sources":["./docs/zh/guide/advanced/alias.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Fadvanced%2Falias.md\"] = {\"toc\":[{\"text\":\"通过 tsconfig.json 的 paths 配置\",\"id\":\"通过-tsconfigjson-的-paths-配置\",\"depth\":2},{\"text\":\"通过 source.alias 配置\",\"id\":\"通过-sourcealias-配置\",\"depth\":2},{\"text\":\"使用场景\",\"id\":\"使用场景\",\"depth\":3},{\"text\":\"对象用法\",\"id\":\"对象用法\",\"depth\":3},{\"text\":\"函数用法\",\"id\":\"函数用法\",\"depth\":3},{\"text\":\"优先级\",\"id\":\"优先级\",\"depth\":3}],\"title\":\"路径别名\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        ul: \"ul\",\n        li: \"li\",\n        h2: \"h2\",\n        pre: \"pre\",\n        div: \"div\",\n        h3: \"h3\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"路径别名\">{\"路径别名\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#路径别名\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"路径别名（alias）允许开发者为模块定义别名，以便于在代码中更方便的引用它们。当你想要使用一个简短、易于记忆的名称来代替冗长复杂的路径时，这将非常有用。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如，假如你在项目中经常引用 \"}<_components.code>{\"src/common/request.ts\"}</_components.code>{\" 模块，你可以为它定义一个别名 \"}<_components.code>{\"@request\"}</_components.code>{\"，然后在代码中通过 \"}<_components.code>{\"import request from '@request'\"}</_components.code>{\" 来引用它，而不需要每次都写出完整的相对路径。同时，这也允许你将模块移动到不同的位置，而不需要更新代码中的所有 import 语法。\"}</_components.p>{\"\\n\"}<_components.p>{\"在 Builder 中，你有两种方式可以设置路径别名:\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"通过 \"}<_components.code>{\"tsconfig.json\"}</_components.code>{\" 中的 \"}<_components.code>{\"paths\"}</_components.code>{\" 配置。\"}</_components.li>{\"\\n\"}<_components.li>{\"通过 \"}<_components.a href=\"/api/config-source#sourcealias\">{\"source.alias\"}</_components.a>{\" 配置。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"通过-tsconfigjson-的-paths-配置\">{\"通过 \"}<_components.code>{\"tsconfig.json\"}</_components.code>{\" 的 \"}<_components.code>{\"paths\"}</_components.code>{\" 配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#通过-tsconfigjson-的-paths-配置\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"你可以通过 \"}<_components.code>{\"tsconfig.json\"}</_components.code>{\" 中的 \"}<_components.code>{\"paths\"}</_components.code>{\" 来配置别名，这是我们在 TypeScript 项目中推荐使用的方式，因为它可以解决路径别名的 TS 类型问题。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-json\" meta='title=\"tsconfig.json\"'>{'{\\n  \"compilerOptions\": {\\n    \"paths\": {\\n      \"@common/*\": [\"./src/common/*\"]\\n    }\\n  }\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"以上配置完成后，如果你在代码中引用 \"}<_components.code>{\"@common/Foo.tsx\"}</_components.code>{\", 则会映射到 \"}<_components.code>{\"<project>/src/common/Foo.tsx\"}</_components.code>{\" 路径上。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"你可以阅读 \"}<_components.a href=\"https://www.typescriptlang.org/tsconfig#paths\" target=\"_blank\" rel=\"noopener noreferrer\">{\"TypeScript - paths\"}</_components.a>{\" 文档来了解更多用法。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"通过-sourcealias-配置\">{\"通过 \"}<_components.code>{\"source.alias\"}</_components.code>{\" 配置\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#通过-sourcealias-配置\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Builder 提供了 \"}<_components.a href=\"/api/config-source#sourcealias\">{\"source.alias\"}</_components.a>{\" 配置项，对应 webpack / Rspack 原生的 \"}<_components.a href=\"https://webpack.js.org/configuration/resolve/#resolvealias\" target=\"_blank\" rel=\"noopener noreferrer\">{\"resolve.alias\"}</_components.a>{\" 配置，你可以通过对象或者函数的方式来配置这个选项。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"使用场景\">{\"使用场景\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用场景\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"由于 \"}<_components.code>{\"tsconfig.json\"}</_components.code>{\" 的 \"}<_components.code>{\"paths\"}</_components.code>{\" 配置是写在静态 JSON 文件里的，因此它不具备动态性。\"}</_components.p>{\"\\n\"}<_components.p>{\"而 \"}<_components.code>{\"source.alias\"}</_components.code>{\" 则可以弥补这一不足，你可以通过 JavaScript 代码来动态设置 \"}<_components.code>{\"source.alias\"}</_components.code>{\"（比如基于环境变量来设置）。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"对象用法\">{\"对象用法\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#对象用法\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"你可以通过对象的方式来配置 \"}<_components.code>{\"source.alias\"}</_components.code>{\"，其中的相对路径会被 Builder 自动补全为绝对路径。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    alias: {\\n      '@common': './src/common',\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"以上配置完成后，如果你在代码中引用 \"}<_components.code>{\"@common/Foo.tsx\"}</_components.code>{\", 则会映射到 \"}<_components.code>{\"<project>/src/common/Foo.tsx\"}</_components.code>{\" 路径上。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"函数用法\">{\"函数用法\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#函数用法\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"你也可以将 \"}<_components.code>{\"source.alias\"}</_components.code>{\" 配置为一个函数，拿到内置的 \"}<_components.code>{\"alias\"}</_components.code>{\" 对象，对其进行修改。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  source: {\\n    alias: alias => {\\n      alias['@common'] = './src/common';\\n      return alias;\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"优先级\">{\"优先级\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#优先级\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p><_components.code>{\"tsconfig.json\"}</_components.code>{\" 的 \"}<_components.code>{\"paths\"}</_components.code>{\" 配置的优先级高于 \"}<_components.code>{\"source.alias\"}</_components.code>{\"，当一个路径同时匹配到这两者定义的规则时，会优先使用 \"}<_components.code>{\"tsconfig.json\"}</_components.code>{\" 的 \"}<_components.code>{\"paths\"}</_components.code>{\" 定义的值。\"}</_components.p>{\"\\n\"}<_components.p>{\"你可以通过 \"}<_components.a href=\"/api/config-source#sourcealiasstrategy\">{\"source.aliasStrategy\"}</_components.a>{\" 来调整这两个选项的优先级。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","ul","li","h2","pre","div","h3","components","id","className","href","meta","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}