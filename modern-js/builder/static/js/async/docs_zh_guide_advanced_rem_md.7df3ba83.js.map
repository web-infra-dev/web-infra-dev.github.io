{"version":3,"file":"static/js/async/docs_zh_guide_advanced_rem_md.7df3ba83.js","sources":["./docs/zh/guide/advanced/rem.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Fadvanced%2Frem.md\"] = {\"toc\":[{\"text\":\"开启 REM 的适配能力\",\"id\":\"开启-rem-的适配能力\",\"depth\":2},{\"text\":\"CSS 属性值转换\",\"id\":\"css-属性值转换\",\"depth\":2},{\"text\":\"根元素字体大小计算\",\"id\":\"根元素字体大小计算\",\"depth\":2},{\"text\":\"自定义最大根元素字体值\",\"id\":\"自定义最大根元素字体值\",\"depth\":2},{\"text\":\"如何判断 REM 是否生效？\",\"id\":\"如何判断-rem-是否生效\",\"depth\":2},{\"text\":\"如何获取页面实际生效的 rootFontSize 值？\",\"id\":\"如何获取页面实际生效的-rootfontsize-值\",\"depth\":2}],\"title\":\"开启 REM 适配\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        code: \"code\",\n        ol: \"ol\",\n        li: \"li\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"开启-rem-适配\">{\"开启 REM 适配\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#开启-rem-适配\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Builder 支持通过 \"}<_components.a href=\"/api/config-output#outputconverttorem\">{\"output.convertToRem\"}</_components.a>{\" 一键开启 REM 适配能力，能够根据屏幕大小来动态调整字体大小，让网页在不同大小的屏幕上都能够自适应显示。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"开启-rem-的适配能力\">{\"开启 REM 的适配能力\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#开启-rem-的适配能力\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"开启 \"}<_components.code>{\"convertToRem\"}</_components.code>{\" 后，会对页面进行如下两个操作：\"}</_components.p>{\"\\n\"}<_components.ol>{\"\\n\"}<_components.li>{\"将 CSS 属性中的 px 转成 rem。\"}</_components.li>{\"\\n\"}<_components.li>{\"对根元素的字体大小进行动态设置。\"}</_components.li>{\"\\n\"}</_components.ol>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  output: {\\n    convertToRem: true,\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"css-属性值转换\">{\"CSS 属性值转换\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#css-属性值转换\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"由于默认的 rootFontSize 为 50。开启 rem 转换后，会按照 1rem = 50px 的比例，对 CSS 样式做如下转换：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-css\">{\"/* input */\\nh1 {\\n  margin: 0 0 16px;\\n  font-size: 32px;\\n  line-height: 1.2;\\n  letter-spacing: 1px;\\n}\\n\\n/* output */\\nh1 {\\n  margin: 0 0 0.32rem;\\n  font-size: 0.64rem;\\n  line-height: 1.2;\\n  letter-spacing: 0.02rem;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Builder 默认会对所有 CSS 属性进行转换，如果希望仅对 font-size 属性进行转换，可通过设置 pxtorem.propList 实现。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  output: {\\n    convertToRem: {\\n      pxtorem: {\\n        propList: ['font-size'],\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"根元素字体大小计算\">{\"根元素字体大小计算\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#根元素字体大小计算\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"页面根元素的字体大小的计算公式为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code>{\"根元素字体大小 = 当前客户端屏幕宽度  * 根元素字体值 / UI 设计图宽度\\n\\n(即：pageRootFontSize = clientWidth * rootFontSize / screenWidth)\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"以屏幕宽度为 390 的手机端浏览器为例，根元素字体值的默认值为 50， UI 设计图宽度为 375。\"}</_components.p>{\"\\n\"}<_components.p>{\"此时计算出的页面根元素的字体大小为 52 (\"}<_components.code>{\"390 * 50 / 375\"}</_components.code>{\")。\\n此时 1 rem 为 52px，CSS 样式中的 32px（0.64 rem），实际页面效果为 33.28 px。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  output: {\\n    convertToRem: {\\n      rootFontSize: 50,\\n      screenWidth: 375,\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"自定义最大根元素字体值\">{\"自定义最大根元素字体值\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自定义最大根元素字体值\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"在桌面浏览器端，根据计算公式得到的页面根元素字体值往往过大，当计算出的结果超出了默认的最大根元素字体值时，则采用当前设置的最大根元素字体值为当前根元素字体值。\"}</_components.p>{\"\\n\"}<_components.p>{\"以屏幕宽度为 1920 的桌面浏览器为例，此时计算出的根元素的字体大小为 349，超出了最大根元素字体值 64。则采用 64 为当前的根元素字体值。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  output: {\\n    convertToRem: {\\n      maxRootFontSize: 64,\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"如何判断-rem-是否生效\">{\"如何判断 REM 是否生效？\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#如何判断-rem-是否生效\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.ol>{\"\\n\"}<_components.li>{\"CSS：查看生成的 \"}<_components.code>{\".css\"}</_components.code>{\" 文件中对应属性的值是否从 px 转换成 rem。\"}</_components.li>{\"\\n\"}<_components.li>{\"HTML：打开页面控制台查看 \"}<_components.code>{\"document.documentElement.style.fontSize\"}</_components.code>{\" 是否存在有效值。\"}</_components.li>{\"\\n\"}</_components.ol>{\"\\n\"}<_components.h2 id=\"如何获取页面实际生效的-rootfontsize-值\">{\"如何获取页面实际生效的 rootFontSize 值？\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#如何获取页面实际生效的-rootfontsize-值\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"页面实际生效的 rootFontSize 会根据当前页面的情况动态计算。 可通过打印 \"}<_components.code>{\"document.documentElement.style.fontSize\"}</_components.code>{\" 查看，也可通过 \"}<_components.code>{\"window.ROOT_FONT_SIZE\"}</_components.code>{\" 获取。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","code","ol","li","pre","components","id","className","href","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}