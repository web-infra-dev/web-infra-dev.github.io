{"version":3,"file":"static/js/async/docs_zh_guide_optimization_inline-assets_md.37170119.js","sources":["./docs/zh/guide/optimization/inline-assets.md"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguide%2Foptimization%2Finline-assets.md\"] = {\"toc\":[{\"text\":\"自动内联\",\"id\":\"自动内联\",\"depth\":2},{\"text\":\"强制内联\",\"id\":\"强制内联\",\"depth\":2},{\"text\":\"从 CSS 文件中引用\",\"id\":\"从-css-文件中引用\",\"depth\":3},{\"text\":\"强制不内联\",\"id\":\"强制不内联\",\"depth\":2},{\"text\":\"从 CSS 文件中引用\",\"id\":\"从-css-文件中引用-1\",\"depth\":3},{\"text\":\"内联 JS 文件\",\"id\":\"内联-js-文件\",\"depth\":2},{\"text\":\"内联 CSS 文件\",\"id\":\"内联-css-文件\",\"depth\":2},{\"text\":\"添加类型声明\",\"id\":\"添加类型声明\",\"depth\":2}],\"title\":\"静态资源内联\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        pre: \"pre\",\n        code: \"code\",\n        h3: \"h3\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"静态资源内联\">{\"静态资源内联\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#静态资源内联\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"静态资源内联是一种优化网页性能的方法，它指的是将静态资源直接内联到 HTML 或 JS 文件中，而不是使用外部文件引用的方式。这样做的好处是减少了浏览器发起的请求数，从而提高页面的加载速度。\"}</_components.p>{\"\\n\"}<_components.p>{\"不过，静态资源内联也有一些缺点，比如增加了单个文件的体积，可能会导致加载变慢。所以在实际应用中，需要根据具体情况来决定是否使用静态资源内联。\"}</_components.p>{\"\\n\"}<_components.p>{\"Builder 默认会自动内联体积小于 10KB 的静态资源，但有时候你可能需要手动控制某些特殊资源，让其强制内联或者强制不内联，这篇文档阐述了如何进行精确地控制静态资源内联行为。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"自动内联\">{\"自动内联\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#自动内联\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"默认情况下，当图片、字体、媒体等类型的文件体积小于阈值（默认为 10KB）时，Builder 会将资源进行内联处理，资源内联后，会被转换成一个 Base64 编码的字符串，不再会发送独立的 HTTP 请求。当文件体积大于或等于该阈值时，则会被作为单独的资源文件，通过独立的 HTTP 请求来加载。\"}</_components.p>{\"\\n\"}<_components.p>{\"自动内联的体积阈值可以通过 \"}<_components.a href=\"/api/config-output#outputdataurilimit\">{\"output.dataUriLimit\"}</_components.a>{\" 配置项修改。例如，修改图片资源的阈值为 5000 字节，设置视频资源不内联：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  output: {\\n    dataUriLimit: {\\n      image: 5000,\\n      media: 0,\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"强制内联\">{\"强制内联\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#强制内联\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"你可以通过在引入资源时添加 \"}<_components.code>{\"inline\"}</_components.code>{\" URL 参数来强制内联该资源，无论该资源的体积是否小于阈值。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import React from 'react';\\nimport img from './foo.png?inline';\\n\\nexport default function Foo() {\\n  return <img src={img} />;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在上面这个例子中，\"}<_components.code>{\"foo.png\"}</_components.code>{\" 图片将始终被内联，无论该图片的大小是否大于阈值。\"}</_components.p>{\"\\n\"}<_components.p>{\"除了 \"}<_components.code>{\"inline\"}</_components.code>{\" 参数以外，你也可以使用 \"}<_components.code>{\"__inline\"}</_components.code>{\" 参数来强制内联该资源：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import img from './foo.png?__inline';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"从-css-文件中引用\">{\"从 CSS 文件中引用\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#从-css-文件中引用\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当你在 CSS 文件中引用静态资源时，同样可以通过 \"}<_components.code>{\"inline\"}</_components.code>{\" 或 \"}<_components.code>{\"__inline\"}</_components.code>{\" 参数来强制内联资源。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-css\">{\".foo {\\n  background-image: url('./icon.png?inline');\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"你真的需要强制内联吗？\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"内联体积过大的资源时，会显著增加页面的白屏时间或首次可交互时间，这会损害用户体验。并且当你将一个静态资源多次内联到 CSS 文件中时，base64 内容会重复注入，导致产物体积增大。因此，请酌情使用强制内联。\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"强制不内联\">{\"强制不内联\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#强制不内联\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"当你想把一些资源始终作为单独的资源文件来处理，无论该资源的体积多小时，你可以添加 \"}<_components.code>{\"url\"}</_components.code>{\" URL 参数来强制不内联该资源。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import React from 'react';\\nimport img from './foo.png?url';\\n\\nexport default function Foo() {\\n  return <img src={img} />;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在上面这个例子中，\"}<_components.code>{\"foo.png\"}</_components.code>{\" 图片将始终通过单独的资源文件加载，无论该图片的大小是否小于阈值。\"}</_components.p>{\"\\n\"}<_components.p>{\"除了 \"}<_components.code>{\"url\"}</_components.code>{\" 参数以外，你也可以使用 \"}<_components.code>{\"__inline=false\"}</_components.code>{\" 参数来强制不内联该资源：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import img from './foo.png?__inline=false';\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"从-css-文件中引用-1\">{\"从 CSS 文件中引用\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#从-css-文件中引用-1\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当你在 CSS 文件中引用静态资源时，同样可以通过 \"}<_components.code>{\"url\"}</_components.code>{\" 或 \"}<_components.code>{\"__inline=false\"}</_components.code>{\" 参数来强制不内联资源。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-css\">{\".foo {\\n  background-image: url('./icon.png?url');\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"你真的需要把资源排除内联吗？\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"将资源排除内联将增加 Web App 需要加载的资源数量，这对于弱网环境，或是未开启 HTTP2 的场景下，将会降低资源加载效率，因此，请酌情使用强制不内联。\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"内联-js-文件\">{\"内联 JS 文件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#内联-js-文件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"除了将静态资源文件内联到 JS 文件里，Builder 也支持将 JS 文件内联到 HTML 文件中。\"}</_components.p>{\"\\n\"}<_components.p>{\"只需要开启 \"}<_components.a href=\"/api/config-output#outputenableinlinescripts\">{\"output.enableInlineScripts\"}</_components.a>{\" 配置项，构建生成的 JS 文件将不会被写入产物目录下，而是会直接内联到对应的 HTML 文件中。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  output: {\\n    enableInlineScripts: true,\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"内联 JS 文件可能会导致 HTML 单文件体积过大，并且不利于静态资源缓存，请酌情使用。\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"内联-css-文件\">{\"内联 CSS 文件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#内联-css-文件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"你也可以将 CSS 文件内联到 HTML 文件中。\"}</_components.p>{\"\\n\"}<_components.p>{\"只需要开启 \"}<_components.a href=\"/api/config-output#outputenableinlinestyles\">{\"output.enableInlineStyles\"}</_components.a>{\" 配置项，构建生成的 CSS 文件将不会被写入产物目录下，而是会直接内联到对应的 HTML 文件中。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export default {\\n  output: {\\n    enableInlineStyles: true,\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"添加类型声明\">{\"添加类型声明\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#添加类型声明\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"当你在 TypeScript 代码中使用 \"}<_components.code>{\"?inline\"}</_components.code>{\" 和 \"}<_components.code>{\"?url\"}</_components.code>{\" 等 URL 参数时，TypeScript 可能会提示该模块缺少类型定义：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code>{\"TS2307: Cannot find module './logo.png?inline' or its corresponding type declarations.\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"此时你需要为这些 URL 参数添加类型声明，请在项目中创建 \"}<_components.code>{\"src/global.d.ts\"}</_components.code>{\" 文件，并添加以下类型声明：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"declare module '*?inline' {\\n  const content: string;\\n  export default content;\\n}\\n\\ndeclare module '*?inline' {\\n  const content: string;\\n  export default content;\\n}\\n\\ndeclare module '*?__inline' {\\n  const content: string;\\n  export default content;\\n}\\n\\ndeclare module '*?inline=false' {\\n  const content: string;\\n  export default content;\\n}\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","pre","code","h3","div","components","id","className","href","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}