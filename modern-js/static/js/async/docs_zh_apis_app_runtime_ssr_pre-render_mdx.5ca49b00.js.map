{"version":3,"file":"static/js/async/docs_zh_apis_app_runtime_ssr_pre-render_mdx.5ca49b00.js","sources":["./docs/zh/apis/app/runtime/ssr/pre-render.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fapis%2Fapp%2Fruntime%2Fssr%2Fpre-render.mdx\"] = {\"toc\":[{\"text\":\"使用姿势\",\"id\":\"使用姿势\",\"depth\":2},{\"text\":\"函数签名\",\"id\":\"函数签名\",\"depth\":2},{\"text\":\"参数\",\"id\":\"参数\",\"depth\":3},{\"text\":\"示例\",\"id\":\"示例\",\"depth\":2}],\"title\":\"PreRender\",\"frontmatter\":{\"title\":\"PreRender\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        h2: \"h2\",\n        pre: \"pre\",\n        code: \"code\",\n        h3: \"h3\",\n        ul: \"ul\",\n        li: \"li\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"prerender\">{\"PreRender\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#prerender\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"无展示内容的高阶组件，通过类似 Helmet 的方式实现 SPA 路由级的缓存，无需额外配置。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"使用姿势\">{\"使用姿势\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用姿势\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { PreRender } from '@modern-js/runtime/ssr';\\n\\nexport default () => (\\n  <>\\n    <PreRender interval={5} />\\n  </>\\n);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"函数签名\">{\"函数签名\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#函数签名\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p><_components.code>{\"PreRender\"}</_components.code>{\" 组件提供了一套常用的配置参数，用于控制缓存的规则、过期时间、缓存算法等。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"type Props {\\n  interval: number;\\n  staleLimit: number;\\n  level: number;\\n  include: { header?: string[], query?: string[] };\\n  matches: { header?: Record<string, any>, query?: Record<string, any> }\\n}\\n\\nfunction PreRender(props: Props): React.Component\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"参数\">{\"参数\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#参数\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"interval\"}</_components.code>{\"：设置缓存保持新鲜的时间，单位秒。在该时间内，将直接使用缓存，并且不做异步渲染。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"staleLimit\"}</_components.code>{\"：设置缓存完全过期的时间，单位秒。在该时间内，缓存可以被返回，并且会做一步渲染，否则必须使用重新渲染的结果。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"level\"}</_components.code>{\"：设置缓存标识的计算规则等级，通常配合 \"}<_components.code>{\"includes\"}</_components.code>{\" 与 \"}<_components.code>{\"matches\"}</_components.code>{\" 使用。默认值为 \"}<_components.code>{\"0\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"0：路由路径\\n1：路由路径 + 查询字符串\\n2：路由路径 + 请求头\\n3：路由路径 + 查询字符串 + 请求头\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"includes\"}</_components.code>{\"：设置需要被纳入缓存标识的内容，在 level 非 0 时使用。默认值为 \"}<_components.code>{\"null\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"matches\"}</_components.code>{\"：设置 query 或 header 的值在缓存标识计算中的重写规则，通常用在缓存分类时，支持正则表达式。默认值为 \"}<_components.code>{\"null\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { PreRender } from '@modern-js/runtime/ssr';\\n\\nexport default function App() {\\n  return (\\n    <>\\n      <PreRender interval={10} />\\n      <div>Hello Modern</div>\\n    </>\\n  );\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"下面例子展示了如何将 query、header 中指定的参数纳入缓存计算中：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"/* 使用 query 中的 channel 和 header 中的 language 计算缓存标识 */\\n<PreRender\\n  interval={10}\\n  level={2}\\n  includes={{\\n    query: ['channel'],\\n    header: ['language'],\\n  }}\\n/>\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"下面例子展示了如何不让测试频道影响线上缓存：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{'/* 将 query 中 channel 值为 test_ 开头的重写为 testChannel，否则重写为 otherChannel */\\n<PreRender interval={10} level={2} includes={{\\n  query: [\"channel\"],\\n  header: [\"language\"]\\n}} matches={{\\n  query: {\\n    channel: {\\n      \"testChannel\", \"^test_\",\\n      \"otherChannel\", \".*\"\\n    }\\n  }\\n}} />\\n'}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","h2","pre","code","h3","ul","li","components","id","className","href","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}