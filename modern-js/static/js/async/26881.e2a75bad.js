/*! For license information please see 26881.e2a75bad.js.LICENSE.txt */
(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["26881"],{26744:function(e,n,i){"use strict";i.r(n);var t=i("39980"),r=i("9580");function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",strong:"strong"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"bff",children:["BFF",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#bff",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"BFF (Backends for Frontends) is an architectural pattern primarily used to address issues of data aggregation in front-end and back-end collaboration. Under the BFF architecture, front-end applications do not communicate directly with backend services. Instead, they interact with backend services through a dedicated BFF middleware layer, custom-made for the front end."}),"\n",(0,t.jsx)(n.p,{children:"The main problems it to solve include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Aggregation, mapping, clipping, and proxying of lower-level APIs according to their own business needs."}),"\n",(0,t.jsx)(n.li,{children:"Cache data for some specific scenarios to improve performance and thus improve user experience."}),"\n",(0,t.jsx)(n.li,{children:"Quickly development of new products based on existing interfaces."}),"\n",(0,t.jsx)(n.li,{children:"Interface with third-party systems, such as login authentication."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Modern.js officially supported the BFF and provided the ",(0,t.jsx)(n.strong,{children:"Integrated BFF"})," to further strengthen the BFF's capabilities, mainly including the following capabilities:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Quick development and debugging go live, running, building, and deploying BFF code in the same project."}),"\n",(0,t.jsx)(n.li,{children:"Minimal pure function call, directly import BFF function on the front end, and can be automatically converted into HTTP request when called."}),"\n",(0,t.jsx)(n.li,{children:"No private protocol, follow RESTful API specification, all BFF interfaces are standardized."}),"\n",(0,t.jsx)(n.li,{children:"Full TypeScript support."}),"\n",(0,t.jsx)(n.li,{children:"Meet user preferences and support multi-frame extension writing."}),"\n"]})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}n.default=s,s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["en%2Fguides%2Fadvanced-features%2Fbff%2Findex.mdx"]={toc:[],title:"BFF",frontmatter:{title:"BFF"}}}}]);