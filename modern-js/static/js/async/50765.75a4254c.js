"use strict";(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["50765"],{22269:function(e,n,s){s.r(n),s.d(n,{default:function(){return t}});var i=s(39980),l=s(9580);function r(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",p:"p",div:"div",h3:"h3"},(0,l.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"devwatchfiles",children:["dev.watchFiles",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#devwatchfiles",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Type:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type WatchFiles = {\n  paths: string | string[];\n  // watch options for chokidar\n  options?: WatchOptions;\n};\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:"undefined"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Watch files and directories for changes. When a file changes, the page will be reloaded."}),"\n",(0,i.jsxs)(n.p,{children:["If both ",(0,i.jsx)(n.code,{children:"dev.hmr"})," and ",(0,i.jsx)(n.code,{children:"dev.liveReload"})," are set to false, ",(0,i.jsx)(n.code,{children:"watchFiles"})," will be ignored."]}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,i.jsx)(n.div,{className:"rspress-directive-content",children:(0,i.jsx)(n.p,{children:"When files in WatchFiles change, reloading and recompilation of the configuration file will not be triggered."})})]}),"\n",(0,i.jsxs)(n.h3,{id:"example",children:["Example",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#example",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"You can configure a list of globs/directories/files to watch for file changes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    watchFiles: {\n      // watch a single file\n      paths: 'public/demo.txt',\n      // use a glob pattern\n      paths: 'src/**/*.txt',\n      // watch multiple file paths\n      paths: ['src/**/*.txt', 'public/**/*'],\n    },\n  },\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can also specify ",(0,i.jsx)(n.a,{href:"https://github.com/paulmillr/chokidar#api",target:"_blank",rel:"noopener noreferrer",children:"chokidar"})," watcher options by passing an object with ",(0,i.jsx)(n.code,{children:"paths"})," and ",(0,i.jsx)(n.code,{children:"options"})," properties."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"export default {\n  dev: {\n    watchFiles: {\n      paths: 'src/**/*.txt',\n      options: {\n        usePolling: false,\n      },\n    },\n  },\n};\n"})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}let t=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["en%2Fconfigure%2Fapp%2Fdev%2Fwatch-files.mdx"]={toc:[{text:"Example",id:"example",depth:3}],title:"dev.watchFiles",frontmatter:{sidebar_label:"watchFiles"}}}}]);