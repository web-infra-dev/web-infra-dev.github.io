{"version":3,"file":"static/js/async/docs_zh_configure_app_performance_chunk-split_mdx.656f3c16.js","sources":["../builder-doc/docs/zh/config/performance/chunkSplit.md","./docs/zh/configure/app/performance/chunk-split.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"..%2F..%2Fbuilder-doc%2Fdocs%2Fzh%2Fconfig%2Fperformance%2FchunkSplit.md\"] = {\"toc\":[{\"text\":\"chunkSplit.strategy\",\"id\":\"chunksplitstrategy\",\"depth\":3},{\"text\":\"默认拆包策略\",\"id\":\"默认拆包策略\",\"depth\":3},{\"text\":\"chunkSplit.minSize\",\"id\":\"chunksplitminsize\",\"depth\":3},{\"text\":\"chunkSplit.maxSize\",\"id\":\"chunksplitmaxsize\",\"depth\":3},{\"text\":\"chunkSplit.forceSplitting\",\"id\":\"chunksplitforcesplitting\",\"depth\":3},{\"text\":\"chunkSplit.splitChunks\",\"id\":\"chunksplitsplitchunks\",\"depth\":3},{\"text\":\"chunkSplit.override\",\"id\":\"chunksplitoverride\",\"depth\":3}],\"title\":\"\",\"frontmatter\":{}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        ul: \"ul\",\n        li: \"li\",\n        strong: \"strong\",\n        code: \"code\",\n        p: \"p\",\n        pre: \"pre\",\n        h3: \"h3\",\n        a: \"a\",\n        div: \"div\",\n        blockquote: \"blockquote\"\n    }, _provideComponents(), props.components);\n    return <><_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"Object\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"{ strategy: 'split-by-experience' }\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p><_components.code>{\"performance.chunkSplit\"}</_components.code>{\" 用于配置 Builder 的拆包策略。配置项的类型 \"}<_components.code>{\"ChunkSplit\"}</_components.code>{\" 如下:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"type ForceSplitting = RegExp[] | Record<string, RegExp>;\\n\\ninterface BaseChunkSplit {\\n  strategy?:\\n    | 'split-by-module'\\n    | 'split-by-experience'\\n    | 'all-in-one'\\n    | 'single-vendor';\\n  override?: SplitChunks;\\n  forceSplitting?: ForceSplitting;\\n}\\n\\ninterface SplitBySize {\\n  strategy?: 'split-by-size';\\n  minSize?: number;\\n  maxSize?: number;\\n  override?: SplitChunks;\\n  forceSplitting?: ForceSplitting;\\n}\\n\\ninterface SplitCustom {\\n  strategy?: 'custom';\\n  splitChunks?: SplitChunks;\\n  forceSplitting?: ForceSplitting;\\n}\\n\\nexport type ChunkSplit = BaseChunkSplit | SplitBySize | SplitCustom;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"chunksplitstrategy\">{\"chunkSplit.strategy\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#chunksplitstrategy\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Builder 支持设置以下几种拆包策略：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"split-by-experience\"}</_components.code>{\": 根据经验制定的拆分策略，自动将一些常用的 npm 包拆分为体积适中的 chunk。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"split-by-module\"}</_components.code>{\": 按 NPM 包的粒度拆分，每个 NPM 包对应一个 chunk。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"split-by-size\"}</_components.code>{\"：根据模块大小自动进行拆分。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"all-in-one\"}</_components.code>{\": 将所有代码全部打包到一个 chunk 中。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"single-vendor\"}</_components.code>{\": 将所有 NPM 包的代码打包到一个单独的 chunk 中。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"custom\"}</_components.code>{\": 自定义拆包配置。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"默认拆包策略\">{\"默认拆包策略\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#默认拆包策略\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"Builder 默认采用 \"}<_components.code>{\"split-by-experience\"}</_components.code>{\" 策略，这是我们根据经验制定的策略。具体来说，当你的项目中引用了以下 npm 包时，它们会自动被拆分为单独的 chunk：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"lib-polyfill.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"core-js\"}</_components.code>{\"，\"}<_components.code>{\"@babel/runtime\"}</_components.code>{\"，\"}<_components.code>{\"@swc/helpers\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-react.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"react\"}</_components.code>{\"，\"}<_components.code>{\"react-dom\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-router.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"react-router\"}</_components.code>{\"，\"}<_components.code>{\"react-router-dom\"}</_components.code>{\"，\"}<_components.code>{\"history\"}</_components.code>{\"，\"}<_components.code>{\"@remix-run/router\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-lodash.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"lodash\"}</_components.code>{\"，\"}<_components.code>{\"lodash-es\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-antd.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"antd\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-arco.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"@arco-design/web-react\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"lib-semi.js\"}</_components.code>{\"：包含 \"}<_components.code>{\"@douyinfe/semi-ui\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"如果项目中没有安装或引用以上 npm 包，则不会生成相应的 chunk。\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.p>{\"如果你想使用其他拆包策略，可以通过 \"}<_components.code>{\"performance.chunkSplit.strategy\"}</_components.code>{\" 配置项来指定。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"在使用 Rspack 作为打包工具时，暂时不支持采用 \"}<_components.code>{\"split-by-module\"}</_components.code>{\" 策略。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"chunksplitminsize\">{\"chunkSplit.minSize\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#chunksplitminsize\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"number\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"10000\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"当 \"}<_components.code>{\"performance.chunkSplit.strategy\"}</_components.code>{\" 为 \"}<_components.code>{\"split-by-size\"}</_components.code>{\" 时，可以通过 \"}<_components.code>{\"performance.chunkSplit.minSize\"}</_components.code>{\" 配置项来指定 chunk 的最小大小，单位为字节。默认值为 10000。比如:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'split-by-size',\\n      minSize: 20000,\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"chunksplitmaxsize\">{\"chunkSplit.maxSize\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#chunksplitmaxsize\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"number\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"Infinity\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"当 \"}<_components.code>{\"performance.chunkSplit.strategy\"}</_components.code>{\" 为 \"}<_components.code>{\"split-by-size\"}</_components.code>{\" 时，可以通过 \"}<_components.code>{\"performance.chunkSplit.maxSize\"}</_components.code>{\" 配置项来指定 chunk 的最大大小，单位为字节。默认值为 \"}<_components.code>{\"Infinity\"}</_components.code>{\"。比如:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'split-by-size',\\n      maxSize: 50000,\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"chunksplitforcesplitting\">{\"chunkSplit.forceSplitting\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#chunksplitforcesplitting\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.strong>{\"类型：\"}</_components.strong>{\" \"}<_components.code>{\"RegExp[] | Record<string, RegExp>\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.strong>{\"默认值：\"}</_components.strong>{\" \"}<_components.code>{\"[]\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"通过 \"}<_components.code>{\"performance.chunkSplit.forceSplitting\"}</_components.code>{\" 配置项可以将指定的模块强制拆分为一个独立的 chunk。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如将 node_modules 下的 \"}<_components.code>{\"axios\"}</_components.code>{\" 库拆分到 \"}<_components.code>{\"axios.js\"}</_components.code>{\" 中：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'split-by-experience',\\n      forceSplitting: {\\n        axios: /node_modules\\\\/axios/,\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"相比直接配置 webpack 的 splitChunks，这是一个更加简便的方式。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"注意，通过 \"}<_components.code>{\"forceSplitting\"}</_components.code>{\" 配置拆分的 chunk 会通过 \"}<_components.code>{\"<script>\"}</_components.code>{\" 标签插入到 HTML 文件中，作为首屏请求的资源。因此，请根据实际场景来进行适当地拆分，避免首屏资源体积过大。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"chunksplitsplitchunks\">{\"chunkSplit.splitChunks\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#chunksplitsplitchunks\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当 \"}<_components.code>{\"performance.chunkSplit.strategy\"}</_components.code>{\" 为 \"}<_components.code>{\"custom\"}</_components.code>{\" 时，可以通过 \"}<_components.code>{\"performance.chunkSplit.splitChunks\"}</_components.code>{\" 配置项来指定自定义的 webpack 拆包配置。此配置会和 webpack 的 splitChunks 配置进行合并（cacheGroups 配置也会合并）。比如:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'custom',\\n      splitChunks: {\\n        cacheGroups: {\\n          react: {\\n            test: /[\\\\\\\\/]node_modules[\\\\\\\\/](react|react-dom)[\\\\\\\\/]/,\\n            name: 'react',\\n            chunks: 'all',\\n          },\\n        },\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"chunksplitoverride\">{\"chunkSplit.override\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#chunksplitoverride\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"当 \"}<_components.code>{\"performance.chunkSplit.strategy\"}</_components.code>{\" 为 \"}<_components.code>{\"split-by-experience\"}</_components.code>{\"、\"}<_components.code>{\"split-by-module\"}</_components.code>{\"、\"}<_components.code>{\"split-by-size\"}</_components.code>{\" 或 \"}<_components.code>{\"single-vendor\"}</_components.code>{\" 时，可以通过 \"}<_components.code>{\"performance.chunkSplit.override\"}</_components.code>{\" 配置项来自定义 webpack 拆包配置，此配置会和 webpack 的 splitChunks 配置进行合并（cacheGroups 配置也会合并）。比如:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"export default {\\n  performance: {\\n    chunkSplit: {\\n      strategy: 'split-by-experience',\\n      override: {\\n        cacheGroups: {\\n          react: {\\n            test: /[\\\\\\\\/]node_modules[\\\\\\\\/](react|react-dom)[\\\\\\\\/]/,\\n            name: 'react',\\n            chunks: 'all',\\n          },\\n        },\\n      },\\n    },\\n  },\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.blockquote>{\"\\n\"}<_components.p>{'当 Builder 构建 \"node\" 类型的产物时，由于 Node Bundles 不需要通过拆包来优化加载性能，因此 chunkSplit 规则不会生效。'}</_components.p>{\"\\n\"}</_components.blockquote></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n","globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fconfigure%2Fapp%2Fperformance%2Fchunk-split.mdx\"] = {\"toc\":[],\"title\":\"performance.chunkSplit\",\"frontmatter\":{\"sidebar_label\":\"chunkSplit\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport Main from '@modern-js/builder-doc/docs/zh/config/performance/chunkSplit.md';\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        div: \"div\",\n        p: \"p\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"performancechunksplit\">{\"performance.chunkSplit\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#performancechunksplit\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"TIP\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"该配置由 Modern.js Builder 提供，更多信息可参考 \"}<_components.a href=\"https://modernjs.dev/builder/api/config-performance.html#performancechunksplit\" target=\"_blank\" rel=\"noopener noreferrer\">{\"performance.chunkSplit\"}</_components.a>{\"。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}{\"\\n\"}<Main/></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","ul","li","strong","code","p","pre","h3","a","div","blockquote","components","className","id","href","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_","h1","target","rel"],"mappings":"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"}