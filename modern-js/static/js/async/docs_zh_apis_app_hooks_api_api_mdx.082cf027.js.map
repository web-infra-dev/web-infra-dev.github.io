{"version":3,"file":"static/js/async/docs_zh_apis_app_hooks_api_api_mdx.082cf027.js","sources":["./docs/zh/apis/app/hooks/api/api.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fapis%2Fapp%2Fhooks%2Fapi%2Fapi.mdx\"] = {\"toc\":[{\"text\":\"该文件约定路由如下：\",\"id\":\"该文件约定路由如下\",\"depth\":2},{\"text\":\"默认路由\",\"id\":\"默认路由\",\"depth\":3},{\"text\":\"嵌套路由\",\"id\":\"嵌套路由\",\"depth\":3},{\"text\":\"动态路由\",\"id\":\"动态路由\",\"depth\":3},{\"text\":\"白名单\",\"id\":\"白名单\",\"depth\":3},{\"text\":\"函数定义\",\"id\":\"函数定义\",\"depth\":2}],\"title\":\"**/*.[tj]s\",\"frontmatter\":{\"title\":\"**/*.[tj]s\",\"sidebar_position\":1}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        div: \"div\",\n        h2: \"h2\",\n        h3: \"h3\",\n        ul: \"ul\",\n        li: \"li\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"tjs\">{\"**/*.[tj]s\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#tjs\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"在 \"}<_components.a href=\"/guides/advanced-features/bff/type#%E5%87%BD%E6%95%B0%E5%86%99%E6%B3%95\">{\"BFF 函数写法\"}</_components.a>{\"下，声明 API 路由的文件。除了\"}<_components.a href=\"/apis/app/hooks/api/api#%E7%99%BD%E5%90%8D%E5%8D%95\">{\"某些约定文件\"}</_components.a>{\"外，\"}<_components.code>{\"api\"}</_components.code>{\" 目录下的文件会被注册为接口的路由。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"使用 \"}<_components.code>{\"api\"}</_components.code>{\" 目录需要开启 BFF 功能，需要在项目下执行 new 命令启用「BFF」功能。\"}</_components.p>{\"\\n\"}<_components.p>{\"该文件支持使用 \"}<_components.code>{\"js\"}</_components.code>{\" 或 \"}<_components.code>{\"ts\"}</_components.code>{\" 语言，但必须使用 \"}<_components.code>{\"esm\"}</_components.code>{\" 语法导出函数。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"该文件约定路由如下\">{\"该文件约定路由如下：\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#该文件约定路由如下\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"默认路由\">{\"默认路由\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#默认路由\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"路由系统会将以 \"}<_components.code>{\"index\"}</_components.code>{\" 命名的文件会被映射到上一层目录。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"api/index.ts\"}</_components.code>{\" -> \"}<_components.code>{\"$BASENAME/\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"api/user/index.ts\"}</_components.code>{\" -> \"}<_components.code>{\"$BASENAME/user\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"嵌套路由\">{\"嵌套路由\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#嵌套路由\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"路由系统也支持解析嵌套的文件，如果创建嵌套文件夹结构，文件仍会以相同方式自动解析路由。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"api/hello.ts\"}</_components.code>{\" -> \"}<_components.code>{\"$BASENAME/hello\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"api/user/list.ts\"}</_components.code>{\" -> \"}<_components.code>{\"$BASENAME/user/list\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h3 id=\"动态路由\">{\"动态路由\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#动态路由\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"路由系统支持通过 \"}<_components.code>{\"[]\"}</_components.code>{\" 命名的文件目录生成动态路由。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"api/user/[username]/info.ts\"}</_components.code>{\" -> \"}<_components.code>{\"$BASENAME/user/:username/info\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"api/user/[username]/delete.ts\"}</_components.code>{\" -> \"}<_components.code>{\"$BASENAME/user/:username/delete\"}</_components.code></_components.li>{\"\\n\"}<_components.li><_components.code>{\"api/article/[id]/info.ts\"}</_components.code>{\" -> \"}<_components.code>{\"$BASENAME/article/:id/info\"}</_components.code></_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"其中的 \"}<_components.code>{\"$BASENAME\"}</_components.code>{\" 可以在 \"}<_components.code>{\"modern.config.js\"}</_components.code>{\" 中进行配置，默认值为 \"}<_components.code>{\"/api\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"白名单\">{\"白名单\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#白名单\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"默认 \"}<_components.code>{\"api\"}</_components.code>{\" 目录下所有文件都会当作 BFF 函数文件去解析，但同样我们也设置了白名单，这些文件不被被解析：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"命名以 \"}<_components.code>{\"_\"}</_components.code>{\" 开头的文件。例如：\"}<_components.code>{\"_utils.ts\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li>{\"命名以 \"}<_components.code>{\"_\"}</_components.code>{\" 开头的文件夹下所有文件。例如：\"}<_components.code>{\"_utils/index.ts\"}</_components.code>{\"、\"}<_components.code>{\"_utils/cp.ts\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li>{\"测试文件。例如：\"}<_components.code>{\"foo.test.ts\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li>{\"TypeScript 类型文件。例如：\"}<_components.code>{\"hello.d.ts\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"node_module\"}</_components.code>{\" 下的文件。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"函数定义\">{\"函数定义\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#函数定义\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"除了上面的路由规则之外，代码中函数定义与导出也有相应的约定。\"}</_components.p>{\"\\n\"}<_components.p>{\"函数通过具名导出，导出函数的名字为对应接口接受的 HTTP Method，即：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export const get = async () => {\\n  return {\\n    name: 'Modern.js',\\n    desc: '现代 web 工程方案',\\n  };\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"这样导出函数，则会得到一个 \"}<_components.code>{\"GET\"}</_components.code>{\" 接口。\"}</_components.p>{\"\\n\"}<_components.p>{\"应用工程中支持了 9 个 Method 定义，即：\"}<_components.code>{\"GET\"}</_components.code>{\"、\"}<_components.code>{\"POST\"}</_components.code>{\"、\"}<_components.code>{\"PUT\"}</_components.code>{\"、\"}<_components.code>{\"DELETE\"}</_components.code>{\"、\"}<_components.code>{\"CONNECT\"}</_components.code>{\"、\"}<_components.code>{\"TRACE\"}</_components.code>{\"、\"}<_components.code>{\"PATCH\"}</_components.code>{\"、\"}<_components.code>{\"OPTION\"}</_components.code>{\"、\"}<_components.code>{\"HEAD\"}</_components.code>{\"，即可以用这些 Method 作为函数导出的名字。\"}</_components.p>{\"\\n\"}<_components.p>{\"名字是大小不敏感的，就是说，如果是 \"}<_components.code>{\"GET\"}</_components.code>{\"，写成 \"}<_components.code>{\"get\"}</_components.code>{\"、\"}<_components.code>{\"Get\"}</_components.code>{\"、\"}<_components.code>{\"GEt\"}</_components.code>{\"、\"}<_components.code>{\"GET\"}</_components.code>{\"，都可以准确识别。而默认导出，即 \"}<_components.code>{\"export default xxx\"}</_components.code>{\" 则会被映射为 \"}<_components.code>{\"Get\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"因为 \"}<_components.code>{\"delete\"}</_components.code>{\" 是 JavaScript 中的关键字，可以使用 \"}<_components.code>{\"del\"}</_components.code>{\" 或者 \"}<_components.code>{\"DELETE\"}</_components.code>{\" 代替。\"}</_components.p>{\"\\n\"}<_components.p>{\"可以在一个文件中定义多个不同 Method 的函数，但如果定义多个相同 Method 的函数，则只有第一个会生效。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"需要注意的是，定义的函数都应该是异步的，这个与函数调用时类型有关。\"}</_components.p>{\"\\n\"}</_components.div></_components.div></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","div","h2","h3","ul","li","pre","components","id","className","href","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"kNAAA,E,mDAGA,SAASA,EAAkBC,CAAK,EAC5B,IAAMC,EAAcC,OAAOC,MAAM,CAAC,CAC9BC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,KAAM,OACNC,IAAK,MACLC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,IAAK,KACT,EAAG,yBAAsBb,EAAMc,UAAU,EACzC,MAAO,uB,UAAE,WAACb,EAAYG,EAAE,EAACW,GAAG,M,UAAO,aAAa,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,O,SAAQ,G,MAAsC,KAAK,WAAChB,EAAYK,CAAC,E,UAAE,KAAK,UAACL,EAAYI,CAAC,EAACY,KAAK,0E,SAA2E,U,GAA4B,oBAAoB,UAAChB,EAAYI,CAAC,EAACY,KAAK,sD,SAAuD,Q,GAA0B,KAAK,UAAChB,EAAYM,IAAI,E,SAAE,K,GAA0B,qB,GAAsC,KAAK,WAACN,EAAYO,GAAG,EAACQ,UAAU,wB,UAAwB,UAACf,EAAYO,GAAG,EAACQ,UAAU,yB,SAA0B,M,GAAyB,WAACf,EAAYO,GAAG,EAACQ,UAAU,2B,UAA2B,WAACf,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYM,IAAI,E,SAAE,K,GAA0B,2C,GAA4D,KAAK,WAACN,EAAYK,CAAC,E,UAAE,WAAW,UAACL,EAAYM,IAAI,E,SAAE,I,GAAyB,MAAM,UAACN,EAAYM,IAAI,E,SAAE,I,GAAyB,aAAa,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,W,GAA4B,K,MAA0C,KAAK,WAACN,EAAYQ,EAAE,EAACM,GAAG,Y,UAAa,aAAa,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,a,SAAc,G,MAAsC,KAAK,WAAChB,EAAYS,EAAE,EAACK,GAAG,O,UAAQ,OAAO,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,Q,SAAS,G,MAAsC,KAAK,WAAChB,EAAYK,CAAC,E,UAAE,WAAW,UAACL,EAAYM,IAAI,E,SAAE,O,GAA4B,oB,GAAqC,KAAK,WAACN,EAAYU,EAAE,E,UAAE,KAAK,WAACV,EAAYW,EAAE,E,UAAC,UAACX,EAAYM,IAAI,E,SAAE,c,GAAmC,OAAO,UAACN,EAAYM,IAAI,E,SAAE,Y,MAAkD,KAAK,WAACN,EAAYW,EAAE,E,UAAC,UAACX,EAAYM,IAAI,E,SAAE,mB,GAAwC,OAAO,UAACN,EAAYM,IAAI,E,SAAE,gB,MAAsD,K,GAAuB,KAAK,WAACN,EAAYS,EAAE,EAACK,GAAG,O,UAAQ,OAAO,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,Q,SAAS,G,MAAsC,KAAK,UAAChB,EAAYK,CAAC,E,SAAE,6C,GAA+D,KAAK,WAACL,EAAYU,EAAE,E,UAAE,KAAK,WAACV,EAAYW,EAAE,E,UAAC,UAACX,EAAYM,IAAI,E,SAAE,c,GAAmC,OAAO,UAACN,EAAYM,IAAI,E,SAAE,iB,MAAuD,KAAK,WAACN,EAAYW,EAAE,E,UAAC,UAACX,EAAYM,IAAI,E,SAAE,kB,GAAuC,OAAO,UAACN,EAAYM,IAAI,E,SAAE,qB,MAA2D,K,GAAuB,KAAK,WAACN,EAAYS,EAAE,EAACK,GAAG,O,UAAQ,OAAO,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,Q,SAAS,G,MAAsC,KAAK,WAAChB,EAAYK,CAAC,E,UAAE,YAAY,UAACL,EAAYM,IAAI,E,SAAE,I,GAAyB,kB,GAAmC,KAAK,WAACN,EAAYU,EAAE,E,UAAE,KAAK,WAACV,EAAYW,EAAE,E,UAAC,UAACX,EAAYM,IAAI,E,SAAE,6B,GAAkD,OAAO,UAACN,EAAYM,IAAI,E,SAAE,+B,MAAqE,KAAK,WAACN,EAAYW,EAAE,E,UAAC,UAACX,EAAYM,IAAI,E,SAAE,+B,GAAoD,OAAO,UAACN,EAAYM,IAAI,E,SAAE,iC,MAAuE,KAAK,WAACN,EAAYW,EAAE,E,UAAC,UAACX,EAAYM,IAAI,E,SAAE,0B,GAA+C,OAAO,UAACN,EAAYM,IAAI,E,SAAE,4B,MAAkE,K,GAAuB,KAAK,WAACN,EAAYK,CAAC,E,UAAE,OAAO,UAACL,EAAYM,IAAI,E,SAAE,W,GAAgC,QAAQ,UAACN,EAAYM,IAAI,E,SAAE,kB,GAAuC,eAAe,UAACN,EAAYM,IAAI,E,SAAE,M,GAA2B,I,GAAqB,KAAK,WAACN,EAAYS,EAAE,EAACK,GAAG,M,UAAO,MAAM,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,O,SAAQ,G,MAAsC,KAAK,WAAChB,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYM,IAAI,E,SAAE,K,GAA0B,mD,GAAoE,KAAK,WAACN,EAAYU,EAAE,E,UAAE,KAAK,WAACV,EAAYW,EAAE,E,UAAE,OAAO,UAACX,EAAYM,IAAI,E,SAAE,G,GAAwB,aAAa,UAACN,EAAYM,IAAI,E,SAAE,W,GAAgC,I,GAAsB,KAAK,WAACN,EAAYW,EAAE,E,UAAE,OAAO,UAACX,EAAYM,IAAI,E,SAAE,G,GAAwB,mBAAmB,UAACN,EAAYM,IAAI,E,SAAE,iB,GAAsC,IAAI,UAACN,EAAYM,IAAI,E,SAAE,c,GAAmC,I,GAAsB,KAAK,WAACN,EAAYW,EAAE,E,UAAE,WAAW,UAACX,EAAYM,IAAI,E,SAAE,a,GAAkC,I,GAAsB,KAAK,WAACN,EAAYW,EAAE,E,UAAE,sBAAsB,UAACX,EAAYM,IAAI,E,SAAE,Y,GAAiC,I,GAAsB,KAAK,WAACN,EAAYW,EAAE,E,UAAC,UAACX,EAAYM,IAAI,E,SAAE,a,GAAkC,S,GAA2B,K,GAAuB,KAAK,WAACN,EAAYQ,EAAE,EAACM,GAAG,O,UAAQ,OAAO,UAACd,EAAYI,CAAC,EAACW,UAAU,gBAAgB,cAAY,OAAOC,KAAK,Q,SAAS,G,MAAsC,KAAK,UAAChB,EAAYK,CAAC,E,SAAE,gC,GAAkD,KAAK,UAACL,EAAYK,CAAC,E,SAAE,yC,GAA2D,KAAK,UAACL,EAAYY,GAAG,E,SAAC,UAACZ,EAAYM,IAAI,EAACS,UAAU,c,SAAe,4G,KAAmJ,KAAK,WAACf,EAAYK,CAAC,E,UAAE,iBAAiB,UAACL,EAAYM,IAAI,E,SAAE,K,GAA0B,O,GAAwB,KAAK,WAACN,EAAYK,CAAC,E,UAAE,4BAA4B,UAACL,EAAYM,IAAI,E,SAAE,K,GAA0B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,M,GAA2B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,Q,GAA6B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,S,GAA8B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,O,GAA4B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,O,GAA4B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,Q,GAA6B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,M,GAA2B,4B,GAA6C,KAAK,WAACN,EAAYK,CAAC,E,UAAE,qBAAqB,UAACL,EAAYM,IAAI,E,SAAE,K,GAA0B,OAAO,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,IAAI,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,oBAAoB,UAACN,EAAYM,IAAI,E,SAAE,oB,GAAyC,WAAW,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,I,GAAqB,KAAK,WAACN,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYM,IAAI,E,SAAE,Q,GAA6B,4BAA4B,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,OAAO,UAACN,EAAYM,IAAI,E,SAAE,Q,GAA6B,O,GAAwB,KAAK,UAACN,EAAYK,CAAC,E,SAAE,2D,GAA6E,KAAK,WAACL,EAAYO,GAAG,EAACQ,UAAU,wB,UAAwB,UAACf,EAAYO,GAAG,EAACQ,UAAU,yB,SAA0B,M,GAAyB,WAACf,EAAYO,GAAG,EAACQ,UAAU,2B,UAA2B,UAACf,EAAYK,CAAC,E,SAAE,mC,GAAqD,K,QACvpN,CAjBA,GAAAY,UAAA,EAAWC,mBAAmB,EAA9B,GAAWA,mBAAmB,CAAK,CAAC,GACpCD,WAAWC,mBAAmB,CAAC,0CAA0C,CAAG,CAAC,IAAM,CAAC,CAAC,KAAO,aAAa,GAAK,YAAY,MAAQ,CAAC,EAAE,CAAC,KAAO,OAAO,GAAK,OAAO,MAAQ,CAAC,EAAE,CAAC,KAAO,OAAO,GAAK,OAAO,MAAQ,CAAC,EAAE,CAAC,KAAO,OAAO,GAAK,OAAO,MAAQ,CAAC,EAAE,CAAC,KAAO,MAAM,GAAK,MAAM,MAAQ,CAAC,EAAE,CAAC,KAAO,OAAO,GAAK,OAAO,MAAQ,CAAC,EAAE,CAAC,MAAQ,aAAa,YAAc,CAAC,MAAQ,aAAa,iBAAmB,CAAC,CAAC,EAqBhZ,MAJA,W,IAAoBnB,EAAQ,UAAR,6CAAQ,CAAC,EACRoB,EAAc,AAAAlB,OAAOC,MAAM,CAAC,CAAC,EAAG,yBAAsBH,EAAMc,UAAU,EAA/EO,OAAO,CACf,OAAOD,EAAY,UAACA,EAAA,mBAAcpB,GAAA,C,SAAO,UAACD,EAAA,KAAAuB,CAAA,AAAAA,EAAA,GAAsBtB,G,IAAuBD,EAAkBC,EAC7G,C"}