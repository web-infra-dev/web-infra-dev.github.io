{"version":3,"file":"static/js/async/docs_zh_tutorials_first-app_c07-container_mdx.18dc3ac7.js","sources":["./docs/zh/tutorials/first-app/c07-container.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Ftutorials%2Ffirst-app%2Fc07-container.mdx\"] = {\"toc\":[{\"text\":\"使用完整 Model\",\"id\":\"使用完整-model\",\"depth\":2},{\"text\":\"抽离容器组件\",\"id\":\"抽离容器组件\",\"depth\":2}],\"title\":\"添加容器组件\",\"frontmatter\":{\"title\":\"添加容器组件\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport { Tabs, Tab as TabItem } from \"@theme\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        strong: \"strong\",\n        code: \"code\",\n        h2: \"h2\",\n        pre: \"pre\",\n        img: \"img\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"添加容器组件\">{\"添加容器组件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#添加容器组件\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}{\"\\n\"}<_components.p>{\"上一章节中，我们初步引入\"}<_components.strong>{\"业务模型\"}</_components.strong>{\"，从 UI 组件中拆分出这部分逻辑。\"}<_components.code>{\"page.tsx\"}</_components.code>{\" 中不再包含 UI 无关的业务逻辑实现细节，只需要使用 Model，就能实现同样的功能。\"}</_components.p>{\"\\n\"}<_components.p>{\"这一章节中，我们要进一步利用 Model 中实现的业务逻辑，让 \"}<_components.code>{\"page.tsx\"}</_components.code>{\" 和 \"}<_components.code>{\"archived/page.tsx\"}</_components.code>{\" 获取同一份数据。并实现 Archive 按钮，点击按钮能把联系人归档，只显示在 Archives 列表里，不显示在 All 列表里。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"使用完整-model\">{\"使用完整 Model\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#使用完整-model\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"因为两个页面需要共用同一套状态（联系人列表数据、联系人是否被归档），都需要包含加载初始数据的逻辑，因此我们需要在更上一层完成数据获取。\"}</_components.p>{\"\\n\"}<_components.p>{\"Modern.js 支持在 \"}<_components.code>{\"layout.tsx\"}</_components.code>{\" 通过 Data Loader 获取数据，我们先数据获取这部分代码移动到 \"}<_components.code>{\"src/routes/layout.tsx\"}</_components.code>{\" 中：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta='title=\"src/routes/layout.loader.ts\"'>{\"export type LoaderData = {\\n  code: number;\\n  data: {\\n    name: string;\\n    avatar: string;\\n    email: string;\\n  }[];\\n};\\n\\nexport default async (): Promise<LoaderData> => {\\n  const data = new Array(20).fill(0).map(() => {\\n    const firstName = name.firstName();\\n    return {\\n      name: firstName,\\n      avatar: `https://avatars.dicebear.com/api/identicon/${firstName}.svg`,\\n      email: internet.email(),\\n    };\\n  });\\n\\n  return {\\n    code: 200,\\n    data,\\n  };\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\" meta='title=\"src/routes/layout.tsx\"'>{\"import { name, internet } from 'faker';\\nimport {\\n  Outlet,\\n  useLoaderData,\\n  useLocation,\\n  useNavigate,\\n} from '@modern-js/runtime/router';\\nimport { useState } from 'react';\\nimport { Radio, RadioChangeEvent } from 'antd';\\nimport { useModel } from '@modern-js/runtime/model';\\nimport contacts from '../models/contacts';\\nimport 'tailwindcss/base.css';\\nimport 'tailwindcss/components.css';\\nimport 'tailwindcss/utilities.css';\\nimport '../styles/utils.css';\\nimport type { LoaderData } from './layout.loader';\\n\\nexport default function Layout() {\\n  const { data } = useLoaderData() as LoaderData;\\n  const [{ items }, { setItems }] = useModel(contacts);\\n  if (items.length === 0) {\\n    setItems(data);\\n  }\\n\\n  const navigate = useNavigate();\\n  ...\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"在 \"}<_components.code>{\"src/routes/page.tsx\"}</_components.code>{\" 中，直接使用 Model，获取数据：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { Helmet } from '@modern-js/runtime/head';\\nimport { useModel } from '@modern-js/runtime/model';\\nimport { List } from 'antd';\\nimport Item from '../components/Item';\\nimport contacts from '../models/contacts';\\n\\nfunction Index() {\\n  const [{ items }, { archive }] = useModel(contacts);\\n\\n  return (\\n    <div className=\\\"container lg mx-auto\\\">\\n      <Helmet>\\n        <title>All</title>\\n      </Helmet>\\n      <List\\n        dataSource={items}\\n        renderItem={info => (\\n          <Item\\n            key={info.name}\\n            info={info}\\n            onArchive={() => {\\n              archive(info.email);\\n            }}\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\nexport default Index;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"同样在 \"}<_components.code>{\"archived/page.tsx\"}</_components.code>{\" 中，删除原本的 \"}<_components.code>{\"mockData\"}</_components.code>{\" 逻辑，使用 Model 中 computed 的 \"}<_components.code>{\"archived\"}</_components.code>{\" 值作为数据源：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { Helmet } from '@modern-js/runtime/head';\\nimport { useModel } from '@modern-js/runtime/model';\\nimport { List } from 'antd';\\nimport Item from '../../components/Item';\\nimport contacts from '../../models/contacts';\\n\\nfunction Index() {\\n  const [{ archived }, { archive }] = useModel(contacts);\\n\\n  return (\\n    <div className=\\\"container lg mx-auto\\\">\\n      <Helmet>\\n        <title>Archives</title>\\n      </Helmet>\\n      <List\\n        dataSource={archived}\\n        renderItem={info => (\\n          <Item\\n            key={info.name}\\n            info={info}\\n            onArchive={() => {\\n              archive(info.email);\\n            }}\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\nexport default Index;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"执行 \"}<_components.code>{\"pnpm run dev\"}</_components.code>{\"，访问 \"}<_components.code>{\"http://localhost:8080/\"}</_components.code>{\"，点击 Archive 按钮后，可以看到按钮置灰：\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/nuvjhpqnuvr/modern-website/tutorials/c07-contacts-all.png\" alt=\"display\"/></_components.p>{\"\\n\"}<_components.p>{\"接下来点击顶部导航，切换到 Archives 列表，可以发现刚才 \"}<_components.strong>{\"Archive\"}</_components.strong>{\" 的联系人已经出现在列表当中：\"}</_components.p>{\"\\n\"}<_components.p><_components.img src=\"https://lf3-static.bytednsdoc.com/obj/eden-cn/nuvjhpqnuvr/modern-website/tutorials/c07-contacts-archives.png\" alt=\"display\"/></_components.p>{\"\\n\"}<_components.h2 id=\"抽离容器组件\">{\"抽离容器组件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#抽离容器组件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"前面章节中，我们把项目中的业务逻辑拆分成了两个 layer，一个是\"}<_components.strong>{\"视图组件\"}</_components.strong>{\"，另一个是\"}<_components.strong>{\"业务模块\"}</_components.strong>{\"。前者负责 UI 展示、交互等，后者负责实现 UI 无关的业务逻辑，专门管理状态。\"}</_components.p>{\"\\n\"}<_components.p>{\"像 \"}<_components.code>{\"src/routes/page.tsx\"}</_components.code>{\" 和 \"}<_components.code>{\"src/routes/archives/page.tsx\"}</_components.code>{\" 这样使用了 \"}<_components.code>{\"useModel\"}</_components.code>{\" API 的组件，负责把 View 和 Model 这两个 layer 连接起来，类似传统 MVC 架构中 Controller 的角色，在 Modern.js 里我们沿用习惯，把它们称作\"}<_components.strong>{\"容器组件（Container）\"}</_components.strong>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"容器组件推荐放在专门的 \"}<_components.code>{\"containers/\"}</_components.code>{\" 目录里，我们执行以下命令，创建新的文件：\"}</_components.p>{\"\\n\"}<Tabs><TabItem value=\"macOS\" label=\"macOS\" default><_components.pre><_components.code className=\"language-bash\">{\"mkdir -p src/containers\\ntouch src/containers/Contacts.tsx\\n\"}</_components.code></_components.pre></TabItem><TabItem value=\"Windows\" label=\"Windows\"><_components.pre><_components.code className=\"language-powershell\">{\"mkdir -p src/containers\\nni src/containers/Contacts.tsx\\n\"}</_components.code></_components.pre></TabItem></Tabs>{\"\\n\"}<_components.p>{\"我们将原本两个 \"}<_components.code>{\"page.tsx\"}</_components.code>{\" 中公共的部分抽离出来，\"}<_components.code>{\"src/containers/Contacts.tsx\"}</_components.code>{\" 的代码如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { Helmet } from '@modern-js/runtime/head';\\nimport { useModel } from '@modern-js/runtime/model';\\nimport { List } from 'antd';\\nimport Item from '../components/Item';\\nimport { Helmet } from '@modern-js/runtime/head';\\nimport { useModel } from '@modern-js/runtime/model';\\nimport { List } from 'antd';\\nimport Item from '../components/Item';\\nimport contacts from '../models/contacts';\\n\\nfunction Contacts({\\n  title,\\n  source,\\n}: {\\n  title: string;\\n  source: 'items' | 'archived';\\n}) {\\n  const [state, { archive }] = useModel(contacts);\\n\\n  return (\\n    <div className=\\\"container lg mx-auto\\\">\\n      <Helmet>\\n        <title>{title}</title>\\n      </Helmet>\\n      <List\\n        dataSource={state[source]}\\n        renderItem={info => (\\n          <Item\\n            key={info.name}\\n            info={info}\\n            onArchive={() => {\\n              archive(info.email);\\n            }}\\n          />\\n        )}\\n      />\\n    </div>\\n  );\\n}\\n\\nexport default Contacts;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"修改 \"}<_components.code>{\"src/routes/page.tsx\"}</_components.code>{\" 和 \"}<_components.code>{\"src/routes/archives/page.tsx\"}</_components.code>{\" 的代码：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\" meta='title=\"src/routes/page.tsx\"'>{'import Contacts from \\'../containers/Contacts\\';\\n\\nfunction Index() {\\n  return <Contacts title=\"All\" source=\"items\" />;\\n}\\n\\nexport default Index;\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\" meta='title=\"src/routes/archives/page.tsx\"'>{'import Contacts from \\'../../containers/Contacts\\';\\n\\nfunction Index() {\\n  return <Contacts title=\"Archives\" source=\"archived\" />;\\n}\\n\\nexport default Index;\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"重构完成，现在的项目结构是：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\".\\n├── README.md\\n├── dist\\n├── modern.config.ts\\n├── node_modules\\n├── package.json\\n├── pnpm-lock.yaml\\n├── src\\n│   ├── components\\n│   │   ├── Avatar\\n│   │   │   └── index.tsx\\n│   │   └── Item\\n│   │       └── index.tsx\\n│   ├── containers\\n│   │   └── Contacts.tsx\\n│   ├── models\\n│   │   └── contacts.ts\\n│   ├── modern-app-env.d.ts\\n│   ├── routes\\n│   │   ├── archives\\n│   │   │   └── page.tsx\\n│   │   ├── layout.tsx\\n│   │   └── page.tsx\\n│   └── styles\\n│       └── utils.css\\n└── tsconfig.json\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"components/\"}</_components.code>{\" 里的\"}<_components.strong>{\"视图组件\"}</_components.strong>{\"，都是目录形式，如 \"}<_components.code>{\"Avatar/index.tsx\"}</_components.code>{\"。而 \"}<_components.code>{\"containers/\"}</_components.code>{\" 里的\"}<_components.strong>{\"容器组件\"}</_components.strong>{\"，都是单文件形式，如 \"}<_components.code>{\"contacts.tsx\"}</_components.code>{\"。\"}<_components.strong>{\"这是我们推荐的一种最佳实践\"}</_components.strong>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"在 ​ \"}<_components.a href=\"/zh/tutorials/first-app/c02-component\">{\"添加 UI 组件（Component）\"}</_components.a>{\" 章节提到过，视图组件用目录形式，是因为视图组件负责实现 UI 展示和交互细节，可以演变的复杂。用目录形式，可以方便增加子文件，包括专用的资源（图片等）、专用子组件、CSS 文件等。在这个目录内部可以随意重构，只考虑最小局部。\"}</_components.p>{\"\\n\"}<_components.p>{\"而容器组件只负责连接，是一个胶水层，复杂的业务逻辑和实现细节都交给 View 层和 Model 层去实现。容器组件自己应该保持简单清晰，不应该包含复杂实现细节，所以不应该有内部结构。采用单文件形式不但更简洁，也能起到约束作用，提醒开发者不要把容器组件写复杂。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","strong","code","h2","pre","img","components","id","className","href","meta","src","alt","Tabs","Tab","value","label","default","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}