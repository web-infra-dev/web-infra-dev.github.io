(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["28454"],{76506:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return l},frontmatter:function(){return u}});var n=s("15169"),a=s("43932"),d=s("9880"),c=s("23169"),o=s("18138");function i(e){var t=Object.assign({h1:"h1",a:"a",p:"p",code:"code",pre:"pre",h2:"h2",div:"div"},(0,c.useMDXComponents)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(t.h1,{id:"usestaticmodel",children:["useStaticModel",(0,d.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#usestaticmodel",children:"#"})]}),"\n","\n",(0,d.jsx)(o.default,{}),"\n",(0,d.jsxs)(t.p,{children:["If want to consume a Model in the form of React Hook in the component, and can get the current latest state at any time, but you don't want the Model state to be updated, which will cause the component to be re-rendered, we can use ",(0,d.jsx)(t.code,{children:"useStaticModel"}),"."]}),"\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.code,{children:"useStaticModel"})," API is same as ",(0,d.jsx)(t.code,{children:"useModel"}),".For detail, see ",(0,d.jsx)(t.a,{href:"/en/apis/app/runtime/model/use-model",children:(0,d.jsx)(t.code,{children:"useModel"})}),"."]}),"\n",(0,d.jsxs)(t.p,{children:["To ensure that the latest state is always available, be careful not to deconstruct the returned ",(0,d.jsx)(t.code,{children:"state"}),"."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-tsx",children:"function App() {\n  // \u274C Do not deconstruct state, but can deconstruct actions.\n  const [{ username }, { logout }] = useStaticModel(userModel);\n\n  // \u2705 True Usage.\n  const [state, { logout }] = useStaticModel(userModel);\n\n  useEffect(() => {\n    state.username;\n  }, []);\n}\n"})}),"\n",(0,d.jsxs)(t.h2,{id:"example",children:["Example",(0,d.jsx)(t.a,{className:"header-anchor","aria-hidden":"true",href:"#example",children:"#"})]}),"\n",(0,d.jsxs)(t.p,{children:["The following ",(0,d.jsx)(t.code,{children:"App"})," component consumes the ",(0,d.jsx)(t.code,{children:"userModel"})," state, but does not use it directly in JSX. It can be found that changes in the ",(0,d.jsx)(t.code,{children:"userModel"})," state do not necessarily cause the component to re-render. This situation can be optimized using ",(0,d.jsx)(t.code,{children:"useStaticModel"}),"."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-tsx",children:"function App() {\n  const [state] = useStaticModel(userModel);\n\n  useEffect(() => {\n    // Statistical UV Data\n    send('pageview', { user: state.user });\n  }, [state]);\n\n  return <div>Hello</div>;\n}\n"})}),"\n",(0,d.jsxs)(t.div,{className:"rspress-directive info",children:[(0,d.jsx)(t.div,{className:"rspress-directive-title",children:"More"}),(0,d.jsxs)(t.div,{className:"rspress-directive-content",children:[(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.a,{href:"/guides/topic-detail/model/use-model",children:"Use Model"}),"."]}),"\n"]})]})]})}function r(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},(0,c.useMDXComponents)(),e.components).wrapper;return t?(0,d.jsx)(t,(0,a._)((0,n._)({},e),{children:(0,d.jsx)(i,(0,n._)({},e))})):i(e)}var l=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["en%2Fapis%2Fapp%2Fruntime%2Fmodel%2Fuse-static-model.mdx"]={toc:[{text:"Example",id:"example",depth:2}],title:"useStaticModel"};var u={sidebar_position:3,title:"useStaticModel"}}}]);