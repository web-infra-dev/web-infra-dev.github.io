{"version":3,"file":"static/js/async/docs_zh_apis_app_runtime_router_router_mdx.56be5455.js","sources":["./docs/zh/apis/app/runtime/router/router.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fapis%2Fapp%2Fruntime%2Frouter%2Frouter.mdx\"] = {\"toc\":[{\"text\":\"hooks\",\"id\":\"hooks\",\"depth\":2},{\"text\":\"useNavigate\",\"id\":\"usenavigate\",\"depth\":3},{\"text\":\"useLocation\",\"id\":\"uselocation\",\"depth\":3},{\"text\":\"useParams\",\"id\":\"useparams\",\"depth\":3},{\"text\":\"useRouteError\",\"id\":\"userouteerror\",\"depth\":3},{\"text\":\"组件\",\"id\":\"组件\",\"depth\":2},{\"text\":\"Link\",\"id\":\"link\",\"depth\":3},{\"text\":\"NavLink\",\"id\":\"navlink\",\"depth\":3},{\"text\":\"Outlet\",\"id\":\"outlet\",\"depth\":3},{\"text\":\"Route\",\"id\":\"route\",\"depth\":3},{\"text\":\"更多 API\",\"id\":\"更多-api\",\"depth\":2}],\"title\":\"router\",\"frontmatter\":{\"title\":\"router\",\"sidebar_position\":1}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        div: \"div\",\n        p: \"p\",\n        h2: \"h2\",\n        h3: \"h3\",\n        pre: \"pre\",\n        code: \"code\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"router\">{\"router\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#router\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"补充信息\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"基于 \"}<_components.a href=\"https://reactrouter.com/\" target=\"_blank\" rel=\"noopener noreferrer\">{\"react-router\"}</_components.a>{\" 的路由解决方案。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.h2 id=\"hooks\">{\"hooks\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#hooks\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"usenavigate\">{\"useNavigate\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#usenavigate\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"declare function useNavigate(): NavigateFunction;\\n\\ninterface NavigateFunction {\\n  (\\n    to: To,\\n    options?: {\\n      replace?: boolean;\\n      state?: any;\\n      relative?: RelativeRoutingType;\\n    },\\n  ): void;\\n  (delta: number): void;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"useNavigate\"}</_components.code>{\" 返回一个可以用于执行导航操作的函数。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { useNavigate } from '@modern-js/runtime/router';\\n\\nexport function HomeButton() {\\n  let navigate = useNavigate();\\n\\n  function handleClick() {\\n    navigate('/home');\\n  }\\n\\n  return (\\n    <button type=\\\"button\\\" onClick={handleClick}>\\n      Go home\\n    </button>\\n  );\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"uselocation\">{\"useLocation\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#uselocation\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"declare function useLocation(): Location;\\n\\ninterface Location extends Path {\\n  state: unknown;\\n  key: Key;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"useLocation\"}</_components.code>{\" 返回当前 url 对应的 \"}<_components.a href=\"https://reactrouter.com/web/api/location\" target=\"_blank\" rel=\"noopener noreferrer\">{\"location\"}</_components.a>{\" 对象。每当路由更新的时候，都会拿到一个新的 \"}<_components.code>{\"location\"}</_components.code>{\" 对象。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{'import { useLocation } from \"@modern-js/runtime/router\";\\n\\nfunction usePageViews() {\\n  let location = useLocation();\\n  React.useEffect(() => {\\n    ga.send([\"pageview\", location.pathname]);\\n  }, [location]);\\n}\\n\\nfunction App() {\\n  usePageViews();\\n  return (\\n    //...\\n  );\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"useparams\">{\"useParams\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#useparams\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"declare function useParams<K extends string = string>(): Readonly<Params<K>>;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"useParams\"}</_components.code>{\" 返回一个 key/value 的键值对，表示当前匹配的路由 \"}<_components.code>{\"<Route path>\"}</_components.code>{\" 中的参数信息。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{'import { Switch, Route, useParams } from \\'@modern-js/runtime/router\\';\\n\\nfunction BlogPost() {\\n  const { slug } = useParams();\\n  return <div>Now showing post {slug}</div>;\\n}\\n\\nfunction App() {\\n  return (\\n    <Routes>\\n      <Route path=\"/\" element={<div>home</div>} />\\n      <Route path=\"/blog/:slug\" element={<BlogPost />} />\\n    </Routes>\\n  );\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"userouteerror\">{\"useRouteError\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#userouteerror\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"export declare function useRouteError(): unknown;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"useRouteError\"}</_components.code>{\" 返回离 ErrorBoundary 定义最近的路由渲染错误信息。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{\"import { useRouteError } from '@modern-js/runtime/router';\\nconst ErrorBoundary = () => {\\n  const error = useRouteError();\\n  return (\\n    <div>\\n      <h1>{error.status}</h1>\\n      <h2>{error.message}</h2>\\n    </div>\\n  );\\n};\\nexport default ErrorBoundary;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"组件\">{\"组件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#组件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"link\">{\"Link\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#link\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"declare function Link(props: LinkProps): React.ReactElement;\\n\\ninterface LinkProps\\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'href'> {\\n  replace?: boolean;\\n  state?: any;\\n  to: To;\\n  reloadDocument?: boolean;\\n}\\n\\ntype To = string | Partial<Path>;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"可以使用 \"}<_components.code>{\"Link\"}</_components.code>{\" 组件进行路由跳转。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{'<Link to=\"/about\">About</Link>\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"navlink\">{\"NavLink\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#navlink\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"declare function NavLink(props: NavLinkProps): React.ReactElement;\\n\\ninterface NavLinkProps\\n  extends Omit<LinkProps, 'className' | 'style' | 'children'> {\\n  caseSensitive?: boolean;\\n  children?:\\n    | React.ReactNode\\n    | ((props: { isActive: boolean }) => React.ReactNode);\\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\\n  end?: boolean;\\n  style?:\\n    | React.CSSProperties\\n    | ((props: { isActive: boolean }) => React.CSSProperties);\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"<NavLink>\"}</_components.code>{\" 是一种特殊的 \"}<_components.code>{\"<Link>\"}</_components.code>{\"，当 \"}<_components.code>{\"<NavLink>\"}</_components.code>{\" 对应的链接和当前 URL 匹配时，会给 \"}<_components.code>{\"<NavLink>\"}</_components.code>{\" 所渲染的元素添加“激活”态样式。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"outlet\">{\"Outlet\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#outlet\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"interface OutletProps {\\n  context?: unknown;\\n}\\ndeclare function Outlet(props: OutletProps): React.ReactElement | null;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"<Outlet>\"}</_components.code>{\" 用于嵌套路由场景。在父路由的元素中使用，代表待渲染的子路由的元素在父组件中的位置。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-tsx\">{'function Dashboard() {\\n  return (\\n    <div>\\n      <h1>Dashboard</h1>\\n\\n      {/* This element will render either <DashboardMessages> when the URL is\\n          \"/messages\", <DashboardTasks> at \"/tasks\", or null if it is \"/\"\\n      */}\\n      <Outlet />\\n    </div>\\n  );\\n}\\n\\nfunction App() {\\n  return (\\n    <Routes>\\n      <Route path=\"/\" element={<Dashboard />}>\\n        <Route path=\"messages\" element={<DashboardMessages />} />\\n        <Route path=\"tasks\" element={<DashboardTasks />} />\\n      </Route>\\n    </Routes>\\n  );\\n}\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"route\">{\"Route\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#route\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"interface RouteObject {\\n  path?: string;\\n  index?: boolean;\\n  children?: React.ReactNode;\\n  caseSensitive?: boolean;\\n  id?: string;\\n  loader?: LoaderFunction;\\n  action?: ActionFunction;\\n  element?: React.ReactNode | null;\\n  errorElement?: React.ReactNode | null;\\n  handle?: RouteObject['handle'];\\n  shouldRevalidate?: ShouldRevalidateFunction;\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"Route\"}</_components.code>{\" 用于定义路由。一个 \"}<_components.code>{\"Route\"}</_components.code>{\" 对象，将 URL 片段和组件、数据获取关联起来。\"}</_components.p>{\"\\n\"}<_components.p><_components.code>{\"Route\"}</_components.code>{\" 可以作为普通对象，传给创建 router 的函数的参数：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"const router = createBrowserRouter([\\n  {\\n    // it renders this element\\n    element: <Team />,\\n\\n    // when the URL matches this segment\\n    path: 'teams/:teamId',\\n\\n    // with this data loaded before rendering\\n    loader: async ({ request, params }) => {\\n      return fetch(`/fake/api/teams/${params.teamId}.json`, {\\n        signal: request.signal,\\n      });\\n    },\\n\\n    // performing this mutation when data is submitted to it\\n    action: async ({ request }) => {\\n      return updateFakeTeam(await request.formData());\\n    },\\n\\n    // and renders this element in case something went wrong\\n    errorElement: <ErrorBoundary />,\\n  },\\n]);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"Route\"}</_components.code>{\" 还可以作为组件使用，通过 \"}<_components.code>{\"createRoutesFromElements\"}</_components.code>{\" 转换后，再传给创建 router 的函数的参数：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{'const router = createBrowserRouter(\\n  createRoutesFromElements(\\n    <Route\\n      element={<Team />}\\n      path=\"teams/:teamId\"\\n      loader={async ({ params }) => {\\n        return fetch(`/fake/api/teams/${params.teamId}.json`);\\n      }}\\n      action={async ({ request }) => {\\n        return updateFakeTeam(await request.formData());\\n      }}\\n      errorElement={<ErrorBoundary />}\\n    />,\\n  ),\\n);\\n'}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"更多-api\">{\"更多 API\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#更多-api\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"若想要了解完整的路由 API 信息，可至 \"}<_components.a href=\"https://reactrouter.com/web/guides/start\" target=\"_blank\" rel=\"noopener noreferrer\">{\"react-router 官网\"}</_components.a>{\" 查看。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","h2","h3","pre","code","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}