{"version":3,"file":"static/js/async/docs_zh_apis_app_runtime_model_connect_mdx.df2f8ca5.js","sources":["./docs/zh/apis/app/runtime/model/connect.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fapis%2Fapp%2Fruntime%2Fmodel%2Fconnect.mdx\"] = {\"toc\":[{\"text\":\"类型\",\"id\":\"类型\",\"depth\":2},{\"text\":\"参数\",\"id\":\"参数\",\"depth\":2},{\"text\":\"返回值\",\"id\":\"返回值\",\"depth\":2},{\"text\":\"示例\",\"id\":\"示例\",\"depth\":2},{\"text\":\"简单用法\",\"id\":\"简单用法\",\"depth\":3},{\"text\":\"筛选 State 和 Actions\",\"id\":\"筛选-state-和-actions\",\"depth\":3},{\"text\":\"转发组件的 ref\",\"id\":\"转发组件的-ref\",\"depth\":3}],\"title\":\"connect\",\"frontmatter\":{\"sidebar_position\":5,\"title\":\"connect\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nimport ReduckTip from \"@site-docs/components/reduck-tip\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        div: \"div\",\n        p: \"p\",\n        strong: \"strong\",\n        code: \"code\",\n        h2: \"h2\",\n        pre: \"pre\",\n        ul: \"ul\",\n        li: \"li\",\n        h3: \"h3\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"connect\">{\"connect\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#connect\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}{\"\\n\"}<ReduckTip/>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"提示\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"Reduck 原始类型较为复杂，以下涉及类型定义的地方，展示的是简化后的类型信息。原始类型见 \"}<_components.a href=\"https://github.com/web-infra-dev/reduck/blob/main/packages/react/src/connect.ts\" target=\"_blank\" rel=\"noopener noreferrer\"><_components.strong>{\"connect\"}</_components.strong></_components.a>{\"。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p><_components.code>{\"connect\"}</_components.code>{\" 功能上同 \"}<_components.code>{\"useModel\"}</_components.code>{\" 一致，是对应的 HOC 风格的 API。建议优先使用 Hook 风格的 \"}<_components.code>{\"useModel\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"类型\">{\"类型\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#类型\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"type SelectStateToProps = (\\n  ...modelStates: State[],\\n  ownProps?: any,\\n) => PlainObject;\\ntype SelectActionsToProps = (\\n  ...modelActions: Actions[],\\n  ownProps?: any,\\n) => PlainObject;\\n\\nfunction connect(models: Model, options?: ConnectOptions);\\nfunction connect(\\n  models: [...Model[], SelectStateToProps?, SelectActionsToProps?],\\n  options?: ConnectOptions,\\n);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h2 id=\"参数\">{\"参数\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#参数\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p><_components.code>{\"models\"}</_components.code>{\"：传入的 1 个或多个 Model，当 \"}<_components.code>{\"models\"}</_components.code>{\" 为数组类型参数时，最后两项元素可以是用于筛选 State 的函数（ \"}<_components.code>{\"SelectStateToProps\"}</_components.code>{\" 类型）和用于筛选 Actions 的函数（ \"}<_components.code>{\"SelectActionsToProps\"}</_components.code>{\" 类型）。\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"SelectStateToProps\"}</_components.code>{\"： \"}<_components.code>{\"modelStates\"}</_components.code>{\" 是传入的 Model 对象的 State 组成的数组，\"}<_components.code>{\"ownProps\"}</_components.code>{\" 是当前组件接收外部传递的 \"}<_components.code>{\"props\"}</_components.code>{\"，\"}<_components.code>{\"SelectStateToProps\"}</_components.code>{\" 返回的数据会传递到组件的 \"}<_components.code>{\"props\"}</_components.code>{\" 上。当 \"}<_components.code>{\"models\"}</_components.code>{\" 中没有传入 \"}<_components.code>{\"SelectStateToProps\"}</_components.code>{\" 参数时，所有 Model 的 State 进行合并后传递到组件的 \"}<_components.code>{\"props\"}</_components.code>{\" 上。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"SelectActionsToProps\"}</_components.code>{\"： \"}<_components.code>{\"modelActions\"}</_components.code>{\" 是传入的 Model 对象的 Actions 组成的数组，\"}<_components.code>{\"ownProps\"}</_components.code>{\" 是当前组件接收外部传递的 \"}<_components.code>{\"props\"}</_components.code>{\"，\"}<_components.code>{\"SelectActionsToProps\"}</_components.code>{\" 返回的数据也会传递到组件的 \"}<_components.code>{\"props\"}</_components.code>{\" 上。当 \"}<_components.code>{\"models\"}</_components.code>{\" 中没有传入 \"}<_components.code>{\"SelectActionsToProps\"}</_components.code>{\" 参数时，所有 Model 的 Actions 进行合并后传递到组件的 \"}<_components.code>{\"props\"}</_components.code>{\" 上。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.li>{\"\\n\"}<_components.li>{\"\\n\"}<_components.p><_components.code>{\"options\"}</_components.code>{\"：可选参数，用于辅助配置。目前支持设置 \"}<_components.code>{\"forwardRef\"}</_components.code>{\"，用于控制是否转发组件的 \"}<_components.code>{\"ref\"}</_components.code>{\"，默认值为 \"}<_components.code>{\"false\"}</_components.code>{\"，表示不转发 \"}<_components.code>{\"ref\"}</_components.code>{\"。设置为 \"}<_components.code>{\"{forwardRef: true}\"}</_components.code>{\"，表示转发 \"}<_components.code>{\"ref\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.h2 id=\"返回值\">{\"返回值\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#返回值\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"返回一个高阶组件：接收一个传入的组件，返回一个在 \"}<_components.code>{\"props\"}</_components.code>{\" 上注入了额外 State 和 Actions 的组件。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"示例\">{\"示例\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#示例\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.h3 id=\"简单用法\">{\"简单用法\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#简单用法\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"const modelA = model('modelA').define({\\n  state: {\\n    a: 1,\\n  },\\n  actions: {\\n    incA(state) {\\n      return {\\n        ...state,\\n        a: state.a + 1,\\n      };\\n    },\\n  },\\n});\\n\\nconst modelB = model('modelB').define({\\n  state: {\\n    b: 10,\\n  },\\n  actions: {\\n    incB(state) {\\n      return {\\n        ...state,\\n        b: state.b + 1,\\n      };\\n    },\\n  },\\n});\\n\\nfunction Test(props) {\\n  props.incA(); // 调用 modelA 的 action\\n  props.incB(); // 调用 modelB 的 action\\n\\n  props.a; // 获取 modelA 的 state: a\\n  props.b; // 获取 modelB 的 state: b\\n}\\n\\nexport default connect([modelA, modelB])(Test);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"筛选-state-和-actions\">{\"筛选 State 和 Actions\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#筛选-state-和-actions\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"function Test(props) {\\n  props.incAll();\\n  props.c;\\n}\\n\\nconst stateSelector = (stateA, stateB) => ({\\n  ...stateA,\\n  ...stateB,\\n  c: stateA.a + stateA.b,\\n});\\nconst actionsSelector = (actionsA, actionsB) => ({\\n  ...actionsA,\\n  ...actionsB,\\n  incAll: () => {\\n    actionsA.incA();\\n    actionsB.incB();\\n  },\\n});\\n\\nexport default connect([modelA, modelB, stateSelector, actionsSelector])(Test);\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.h3 id=\"转发组件的-ref\">{\"转发组件的 ref\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#转发组件的-ref\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import { useRef, forwardRef } from 'react';\\n\\nfunction Test(props, ref) {\\n  const { a, b } = props;\\n\\n  return (\\n    <div ref={ref}>\\n      <span>{a}</span>\\n      <span>{b}</span>\\n    </div>\\n  );\\n}\\n\\nconst TestWrapper = connect([modelA, modelB], { forwardRef: true })(\\n  forwardRef(Test),\\n);\\n\\nfunction App() {\\n  const testRef = useRef();\\n\\n  return <TestWrapper ref={testRef} />;\\n}\\n\"}</_components.code></_components.pre></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","strong","code","h2","pre","ul","li","h3","components","id","className","href","target","rel","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}