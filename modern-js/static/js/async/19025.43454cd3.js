"use strict";(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["19025"],{48224:function(e,r,t){t.r(r),t.d(r,{default:function(){return i}});var n=t(38093),s=t(75878);function o(e){let r=Object.assign({h1:"h1",a:"a",div:"div",p:"p",code:"code",h2:"h2",pre:"pre"},(0,s.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"indextjs",children:["index.[tj]s",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#indextjs",children:"#"})]}),"\n",(0,n.jsxs)(r.div,{className:"rspress-directive warning",children:[(0,n.jsx)(r.div,{className:"rspress-directive-title",children:"WARNING"}),(0,n.jsx)(r.div,{className:"rspress-directive-content",children:(0,n.jsxs)(r.p,{children:["Soon to be deprecated, it is recommended to use ",(0,n.jsx)(r.a,{href:"/apis/app/hooks/src/entry",children:(0,n.jsx)(r.code,{children:"entry.[tj]s"})}),"\u3002\n"]})})]}),"\n",(0,n.jsxs)(r.p,{children:["The identifier for the entry point when the application uses custom ",(0,n.jsx)(r.code,{children:"bootstrap"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["In general, the ",(0,n.jsx)(r.a,{href:"/apis/app/hooks/src/app",children:(0,n.jsx)(r.code,{children:"App.[tj]sx"})})," hook file can already meet our needs. When we need to add custom behavior before ",(0,n.jsx)(r.code,{children:"bootstrap"})," or completely take over the webpack packaging entry, we can place ",(0,n.jsx)(r.code,{children:"index.[tj]s"})," in the ",(0,n.jsx)(r.code,{children:"src"})," or entry directory. There are two cases below:"]}),"\n",(0,n.jsxs)(r.h2,{id:"add-custom-behavior-before-bootstrap",children:["Add custom behavior before bootstrap",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#add-custom-behavior-before-bootstrap",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:["Just export a function in ",(0,n.jsx)(r.code,{children:"src/index.[tj]s"}),":"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",meta:"title=src/index.js",children:"import { bootstrap } from '@modern-js/runtime';\n\nexport default App => {\n  // do something before bootstrap...\n  bootstrap(App, 'root');\n};\n"})}),"\n",(0,n.jsxs)(r.h2,{id:"completely-take-over-the-webpack-entry",children:["Completely take over the webpack entry",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#completely-take-over-the-webpack-entry",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:["When there is no default export function in ",(0,n.jsx)(r.code,{children:"src/index.[tj]sx?"}),", the file is the real webpack packaging entry file and the code can be organized directly as using create-react-app and other scaffolding tools:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",meta:"title=src/index.jsx",children:"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,s.ah)(),e.components);return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}let i=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["en%2Fapis%2Fapp%2Fhooks%2Fsrc%2Findex_.mdx"]={toc:[{text:"Add custom behavior before bootstrap",id:"add-custom-behavior-before-bootstrap",depth:2},{text:"Completely take over the webpack entry",id:"completely-take-over-the-webpack-entry",depth:2}],title:"index.[tj]s",frontmatter:{title:"index.[tj]s",sidebar_position:4}}}}]);