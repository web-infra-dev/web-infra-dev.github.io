{"version":3,"file":"static/js/async/docs_zh_guides_topic-detail_model_test-model_mdx.dde326ad.js","sources":["./docs/zh/guides/topic-detail/model/test-model.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguides%2Ftopic-detail%2Fmodel%2Ftest-model.mdx\"] = {\"toc\":[],\"title\":\"测试 Model\",\"frontmatter\":{\"sidebar_position\":9,\"title\":\"测试 Model\"}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        pre: \"pre\",\n        div: \"div\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"测试-model\">{\"测试 Model\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#测试-model\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"好的测试对代码的稳健性至关重要。下面以 \"}<_components.a href=\"/guides/topic-detail/model/quick-start\">{\"快速上手\"}</_components.a>{\" 的 \"}<_components.code>{\"countModel\"}</_components.code>{\" 为例，演示在 Modern.js 中，如何对 Model 进行单元测试。\"}</_components.p>{\"\\n\"}<_components.p>{\"使用测试功能，需要先开启该功能。在项目根目录下，执行 \"}<_components.code>{\"pnpm run new\"}</_components.code>{\"，进行如下选择：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"? 请选择你想要的操作 启用可选功能\\n? 请选择功能名称 启用「单元测试 / 集成测试」功能\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"即可开启测试功能支持。\"}</_components.p>{\"\\n\"}<_components.p>{\"新增 \"}<_components.code>{\"count.test.ts\"}</_components.code>{\" 文件，代码如下：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\">{\"import { createStore } from '@modern-js/runtime/testing';\\nimport countModel from './count';\\n\\ndescribe('test model', () => {\\n  it('count value should plus one after add', () => {\\n    const store = createStore();\\n    const [state, { add }] = store.use(countModel);\\n\\n    expect(state).toEqual({ value: 1 });\\n\\n    add();\\n\\n    expect(store.use(countModel)[0]).toEqual({ value: 2 });\\n  });\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"这里使用的 \"}<_components.a href=\"/apis/app/runtime/model/create-store\"><_components.code>{\"createStore\"}</_components.code></_components.a>{\" 是从 \"}<_components.code>{\"@modern-js/runtime/testing\"}</_components.code>{\" 导入的，内部会使用 \"}<_components.a href=\"/configure/app/runtime/state\"><_components.code>{\"runtime.state\"}</_components.code></_components.a>{\" 的配置去创建 \"}<_components.code>{\"store\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.p>{\"在测试用例里，我们新建一个 \"}<_components.code>{\"store\"}</_components.code>{\" 来挂载 \"}<_components.code>{\"countModel\"}</_components.code>{\"，通过 \"}<_components.code>{\"store.use\"}</_components.code>{\" 获取 \"}<_components.code>{\"countModel\"}</_components.code>{\" 的 State 和 Actions。然后调用 \"}<_components.code>{\"add\"}</_components.code>{\" Action 更新状态，并断言更新后的状态值。\"}</_components.p>{\"\\n\"}<_components.p>{\"执行 \"}<_components.code>{\"pnpm run test\"}</_components.code>{\" 命令，触发测试用例的执行。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","pre","div","components","id","className","href","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"gOAAA,E,mDAGA,SAASA,EAAkBC,CAAK,EAC5B,IAAMC,EAAcC,OAAOC,MAAM,CAAC,CAC9BC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,KAAM,OACNC,IAAK,MACLC,IAAK,KACT,EAAG,yBAAsBT,EAAMU,UAAU,EACzC,MAAO,uB,UAAE,WAACT,EAAYG,EAAE,EAACO,GAAG,W,UAAY,WAAW,UAACV,EAAYI,CAAC,EAACO,UAAU,gBAAgB,cAAY,OAAOC,KAAK,Y,SAAa,G,MAAsC,KAAK,WAACZ,EAAYK,CAAC,E,UAAE,uBAAuB,UAACL,EAAYI,CAAC,EAACQ,KAAK,yC,SAA0C,M,GAAwB,MAAM,UAACZ,EAAYM,IAAI,E,SAAE,Y,GAAiC,wC,GAAyD,KAAK,WAACN,EAAYK,CAAC,E,UAAE,8BAA8B,UAACL,EAAYM,IAAI,E,SAAE,c,GAAmC,W,GAA4B,KAAK,UAACN,EAAYO,GAAG,E,SAAC,UAACP,EAAYM,IAAI,EAACK,UAAU,gB,SAAiB,mD,KAA0F,KAAK,UAACX,EAAYK,CAAC,E,SAAE,a,GAA+B,KAAK,WAACL,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYM,IAAI,E,SAAE,e,GAAoC,Y,GAA6B,KAAK,UAACN,EAAYO,GAAG,E,SAAC,UAACP,EAAYM,IAAI,EAACK,UAAU,c,SAAe,qZ,KAA4b,KAAK,WAACX,EAAYQ,GAAG,EAACG,UAAU,wB,UAAwB,UAACX,EAAYQ,GAAG,EAACG,UAAU,yB,SAA0B,M,GAAyB,WAACX,EAAYQ,GAAG,EAACG,UAAU,2B,UAA2B,WAACX,EAAYK,CAAC,E,UAAE,SAAS,UAACL,EAAYI,CAAC,EAACQ,KAAK,uC,SAAuC,UAACZ,EAAYM,IAAI,E,SAAE,a,KAAkD,OAAO,UAACN,EAAYM,IAAI,E,SAAE,4B,GAAiD,cAAc,UAACN,EAAYI,CAAC,EAACQ,KAAK,+B,SAA+B,UAACZ,EAAYM,IAAI,E,SAAE,e,KAAoD,WAAW,UAACN,EAAYM,IAAI,E,SAAE,O,GAA4B,I,GAAqB,K,MAA0C,KAAK,WAACN,EAAYK,CAAC,E,UAAE,iBAAiB,UAACL,EAAYM,IAAI,E,SAAE,O,GAA4B,QAAQ,UAACN,EAAYM,IAAI,E,SAAE,Y,GAAiC,OAAO,UAACN,EAAYM,IAAI,E,SAAE,W,GAAgC,OAAO,UAACN,EAAYM,IAAI,E,SAAE,Y,GAAiC,2BAA2B,UAACN,EAAYM,IAAI,E,SAAE,K,GAA0B,2B,GAA4C,KAAK,WAACN,EAAYK,CAAC,E,UAAE,MAAM,UAACL,EAAYM,IAAI,E,SAAE,e,GAAoC,iB,KAC/8E,CAbA,GAAAO,UAAA,EAAWC,mBAAmB,EAA9B,GAAWA,mBAAmB,CAAK,CAAC,GACpCD,WAAWC,mBAAmB,CAAC,sDAAsD,CAAG,CAAC,IAAM,EAAE,CAAC,MAAQ,WAAW,YAAc,CAAC,iBAAmB,EAAE,MAAQ,UAAU,CAAC,EAiB5K,MAJA,W,IAAoBf,EAAQ,UAAR,6CAAQ,CAAC,EACRgB,EAAc,AAAAd,OAAOC,MAAM,CAAC,CAAC,EAAG,yBAAsBH,EAAMU,UAAU,EAA/EO,OAAO,CACf,OAAOD,EAAY,UAACA,EAAA,mBAAchB,GAAA,C,SAAO,UAACD,EAAA,KAAAmB,CAAA,AAAAA,EAAA,GAAsBlB,G,IAAuBD,EAAkBC,EAC7G,C"}