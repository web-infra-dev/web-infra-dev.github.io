{"version":3,"file":"static/js/async/docs_zh_guides_topic-detail_framework-plugin_relationship_mdx.fccd6668.js","sources":["./docs/zh/guides/topic-detail/framework-plugin/relationship.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fguides%2Ftopic-detail%2Fframework-plugin%2Frelationship.mdx\"] = {\"toc\":[{\"text\":\"插件排序\",\"id\":\"插件排序\",\"depth\":2},{\"text\":\"前置插件\",\"id\":\"前置插件\",\"depth\":3},{\"text\":\"后置插件\",\"id\":\"后置插件\",\"depth\":3},{\"text\":\"互斥插件\",\"id\":\"互斥插件\",\"depth\":2},{\"text\":\"必需插件\",\"id\":\"必需插件\",\"depth\":2},{\"text\":\"注册插件\",\"id\":\"注册插件\",\"depth\":2}],\"title\":\"插件之间的关系\",\"frontmatter\":{\"title\":\"插件之间的关系\",\"sidebar_position\":4}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        ul: \"ul\",\n        li: \"li\",\n        code: \"code\",\n        h2: \"h2\",\n        h3: \"h3\",\n        pre: \"pre\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"插件之间的关系\">{\"插件之间的关系\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#插件之间的关系\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"Modern.js 的插件配置对象提供了一系列的字段，用于控制插件顺序、互斥等能力，可用的字段如下：\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li><_components.code>{\"name\"}</_components.code>{\": \"}<_components.code>{\"string\"}</_components.code>{\"，设置当前插件的名称。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"pre\"}</_components.code>{\": \"}<_components.code>{\"string[]\"}</_components.code>{\"，这些插件最终会调整到当前插件前面。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"post\"}</_components.code>{\": \"}<_components.code>{\"string[]\"}</_components.code>{\"，这些插件最终会调整到当前插件后面。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"rivals\"}</_components.code>{\": \"}<_components.code>{\"string[]\"}</_components.code>{\"，互斥插件，遇到这些插件时会报错。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"required\"}</_components.code>{\": \"}<_components.code>{\"string[]\"}</_components.code>{\"，必需插件，插件列表中没有对应的插件时会报错。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\"usePlugin\"}</_components.code>{\": \"}<_components.code>{\"CliPlugin[]\"}</_components.code>{\"，注册其他插件。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"通过以上参数可以实现插件的前置、后置、互斥、必需等逻辑。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"插件排序\">{\"插件排序\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#插件排序\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"Modern.js 的插件通过 \"}<_components.code>{\"pre\"}</_components.code>{\"、\"}<_components.code>{\"post\"}</_components.code>{\" 参数来实现了插件排序的功能。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"前置插件\">{\"前置插件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#前置插件\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"默认情况下，插件会按照添加顺序依次执行，通过 \"}<_components.code>{\"pre\"}</_components.code>{\" 字段可以声明前置执行的插件。\"}</_components.p>{\"\\n\"}<_components.p>{\"比如有下面两个插件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=foo.ts\">{\"const foo = {\\n  name: 'plugin-foo',\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=bar.ts\">{\"const bar = {\\n  name: 'plugin-bar',\\n  pre: ['plugin-foo'],\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"bar\"}</_components.code>{\" 插件在 \"}<_components.code>{\"pre\"}</_components.code>{\" 字段中配置了 \"}<_components.code>{\"foo\"}</_components.code>{\" 插件，因此 \"}<_components.code>{\"foo\"}</_components.code>{\" 插件一定会在 \"}<_components.code>{\"bar\"}</_components.code>{\" 插件之前执行。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"后置插件\">{\"后置插件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#后置插件\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"同样的，通过 \"}<_components.code>{\"post\"}</_components.code>{\" 字段可以声明后置执行的插件。\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=foo.ts\">{\"const foo = {\\n  name: 'plugin-foo',\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=bar.ts\">{\"const bar = {\\n  name: 'plugin-bar',\\n  post: ['plugin-foo'],\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"bar\"}</_components.code>{\" 插件在 \"}<_components.code>{\"post\"}</_components.code>{\" 字段中配置了 \"}<_components.code>{\"foo\"}</_components.code>{\" 插件，因此 \"}<_components.code>{\"foo\"}</_components.code>{\" 插件一定会在 \"}<_components.code>{\"bar\"}</_components.code>{\" 插件之后执行。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"互斥插件\">{\"互斥插件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#互斥插件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"通过 \"}<_components.code>{\"rivals\"}</_components.code>{\" 字段可以声明插件间的互斥关系。\"}</_components.p>{\"\\n\"}<_components.p>{\"有下面两个插件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=foo.ts\">{\"const foo = {\\n  name: 'plugin-foo',\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=bar.ts\">{\"const bar = {\\n  name: 'plugin-bar',\\n  rivals: ['plugin-foo'],\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"bar\"}</_components.code>{\" 插件在 \"}<_components.code>{\"rivals\"}</_components.code>{\" 字段中配置了 \"}<_components.code>{\"foo\"}</_components.code>{\" 插件，因此同时添加了 \"}<_components.code>{\"foo\"}</_components.code>{\" 插件和 \"}<_components.code>{\"bar\"}</_components.code>{\" 插件就会报错。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"必需插件\">{\"必需插件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#必需插件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"通过 \"}<_components.code>{\"required\"}</_components.code>{\" 字段可以声明插件间的依赖关系。\"}</_components.p>{\"\\n\"}<_components.p>{\"有下面两个插件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=foo.ts\">{\"const foo = {\\n  name: 'plugin-foo',\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=bar.ts\">{\"const bar = {\\n  name: 'plugin-bar',\\n  required: ['plugin-foo'],\\n};\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p><_components.code>{\"bar\"}</_components.code>{\" 插件在 \"}<_components.code>{\"required\"}</_components.code>{\" 字段中配置了 \"}<_components.code>{\"foo\"}</_components.code>{\" 插件，因此使用 \"}<_components.code>{\"bar\"}</_components.code>{\" 插件时，如果未配置 \"}<_components.code>{\"foo\"}</_components.code>{\" 插件就会报错。\"}</_components.p>{\"\\n\"}<_components.h2 id=\"注册插件\">{\"注册插件\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#注册插件\">{\"#\"}</_components.a></_components.h2>{\"\\n\"}<_components.p>{\"当插件之间存在依赖关系时，我们也可以在一个插件中通过 \"}<_components.code>{\"usePlugin\"}</_components.code>{\" 主动注册另一个插件：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-ts\" meta=\"title=foo.ts\">{\"const foo = () => ({\\n  name: 'plugin-foo',\\n});\\n\\nconst bar = () => ({\\n  name: 'plugin-bar',\\n  usePlugin: [foo()],\\n});\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"当使用者配置了 \"}<_components.code>{\"bar\"}</_components.code>{\" 插件时，\"}<_components.code>{\"foo\"}</_components.code>{\" 插件也会自动注册生效，使用者就不需要去额外注册 \"}<_components.code>{\"foo\"}</_components.code>{\" 插件了。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","ul","li","code","h2","h3","pre","components","id","className","href","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}