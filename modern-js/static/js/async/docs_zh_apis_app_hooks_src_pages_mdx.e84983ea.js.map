{"version":3,"file":"static/js/async/docs_zh_apis_app_hooks_src_pages_mdx.e84983ea.js","sources":["./docs/zh/apis/app/hooks/src/pages.mdx"],"sourcesContent":["globalThis.__RSPRESS_PAGE_META ||= {};\nglobalThis.__RSPRESS_PAGE_META[\"zh%2Fapis%2Fapp%2Fhooks%2Fsrc%2Fpages.mdx\"] = {\"toc\":[{\"text\":\"动态路由\",\"id\":\"动态路由\",\"depth\":3},{\"text\":\"全局 layout\",\"id\":\"全局-layout\",\"depth\":3},{\"text\":\"部分 layout\",\"id\":\"部分-layout\",\"depth\":3},{\"text\":\"404 路由\",\"id\":\"404-路由\",\"depth\":3}],\"title\":\"pages/\",\"frontmatter\":{\"title\":\"pages/\",\"sidebar_position\":3}};\nimport { useMDXComponents as _provideComponents } from \"@mdx-js/react\";\nfunction _createMdxContent(props) {\n    const _components = Object.assign({\n        h1: \"h1\",\n        a: \"a\",\n        p: \"p\",\n        code: \"code\",\n        div: \"div\",\n        pre: \"pre\",\n        ul: \"ul\",\n        li: \"li\",\n        h3: \"h3\"\n    }, _provideComponents(), props.components);\n    return <><_components.h1 id=\"pages\">{\"pages/\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#pages\">{\"#\"}</_components.a></_components.h1>{\"\\n\"}<_components.p>{\"应用使用 \"}<_components.a href=\"https://modernjs.dev/v1/docs/guides/usages/entries#pages-%E5%85%A5%E5%8F%A3\" target=\"_blank\" rel=\"noopener noreferrer\"><_components.code>{\"Pages\"}</_components.code>{\" 入口\"}</_components.a>{\"时的入口标识。\"}</_components.p>{\"\\n\"}<_components.div className=\"modern-directive info\"><_components.div className=\"modern-directive-title\">{\"INFO\"}</_components.div><_components.div className=\"modern-directive-content\"><_components.p>{\"兼容 Modern.js 1.0 \"}<_components.code>{\"Pages\"}</_components.code>{\" 入口，推荐使用\"}<_components.a href=\"/guides/basic-features/routes#%E7%BA%A6%E5%AE%9A%E5%BC%8F%E8%B7%AF%E7%94%B1\">{\"约定式路由\"}</_components.a>{\"。\\n\"}</_components.p></_components.div></_components.div>{\"\\n\"}<_components.p>{\"当项目结构为 \"}<_components.code>{\"Pages 入口\"}</_components.code>{\"类型时， 会分析 \"}<_components.code>{\"src/pages\"}</_components.code>{\" 目录下的文件得到客户端路由配置。\"}</_components.p>{\"\\n\"}<_components.p>{\"举例说明，例如以下目录结构：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\".\\n└── src\\n    └── pages\\n        ├── about\\n        │   └── index.jsx\\n        ├── index.jsx\\n        └── info.jsx\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"对应生成的路由配置为：\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"[\\n  { path: '/', component: 'pages/index.jsx' },\\n  { path: '/info' component: 'pages/info.jsx' },\\n  { path: '/about', component: 'pages/about/index.jsx' }\\n]\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"pages 目录下的文件满足以下条件的不会被当做路由文件\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"后缀不是 \"}<_components.code>{\".(j|t)sx?\"}</_components.code>{\" 的文件。\"}</_components.li>{\"\\n\"}<_components.li><_components.code>{\".d.ts\"}</_components.code>{\" 类型定义文件。\"}</_components.li>{\"\\n\"}<_components.li>{\"以 \"}<_components.code>{\".(test|spec|e2e).(j|t)sx?\"}</_components.code>{\" 结尾的测试文件。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"提示\"}</_components.div><_components.div className=\"modern-directive-content\">{\"\\n\"}<_components.p>{\"推荐 pages 目录下只写入口代码，把业务逻辑写到 pages 外面独立的 features 目录里。这样 pages 目录下大部分文件都会是路由文件，也就不需要额外的过滤规则。\"}</_components.p>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"动态路由\">{\"动态路由\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#动态路由\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"使用 \"}<_components.code>{\"[ ]\"}</_components.code>{\" 包裹的目录或文件会被视为动态路由\"}</_components.p>{\"\\n\"}<_components.p>{\"例如以下目录结构:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\".\\n└── src\\n    └── pages\\n        ├── [post]\\n        │   ├── detail.jsx\\n        │   └── index.js\\n        ├── users\\n        │   └── [id].jsx\\n        ├── index.jsx\\n        └── info.jsx\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"对应生成的路由配置为:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"[\\n  { path: '/', component: 'pages/index.jsx' },\\n  { path: '/info', component: 'pages/info.jsx' },\\n  { path: '/:post/', component: 'pages/[post]/index.js' },\\n  { path: '/:post/detail' components: 'pages/[post]/detail.jsx'},\\n  { path: '/users/:id', components: 'pages/users/[id].jsx'}\\n]\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"动态路由的基础上，支持添加特殊的路由后缀 \"}<_components.code>{\"(*、?、+)\"}</_components.code>{\"。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如：\"}<_components.code>{\"src/pages/users/[id]*.tsx\"}</_components.code>{\" 最终路由为 \"}<_components.code>{\"/users/:id*\"}</_components.code></_components.p>{\"\\n\"}<_components.h3 id=\"全局-layout\">{\"全局 layout\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#全局-layout\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"整个应用需要全局的 \"}<_components.code>{\"layout\"}</_components.code>{\" 时， 可以通过 \"}<_components.code>{\"pages/_app.tsx\"}</_components.code>{\" 实现，具体写法如下:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-js\">{\"import React from 'react';\\nimport UserLayout from 'xxxx';\\n\\nexport const App = ({Component, ...pageProps}:{ Component: React.ComponentType}) => {\\n  return (\\n    <UserLayout>\\n      <Component {...pageProps} />\\n    </UserLayout>\\n  );\\n}\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"上述 \"}<_components.code>{\"Component\"}</_components.code>{\" 为访问具体路由匹配到的组件。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如以下目录结构:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\".\\n└── pages\\n    ├── a\\n    │   ├── b\\n    │   │   └── index.js\\n    │   └── index.js\\n    └── index.js\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"访问 \"}<_components.code>{\"/\"}</_components.code>{\" 时，对应的 \"}<_components.code>{\"Component\"}</_components.code>{\" 组件为 \"}<_components.code>{\"pages/index.js\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li>{\"访问 \"}<_components.code>{\"/a\"}</_components.code>{\" 时，对应的 \"}<_components.code>{\"Component\"}</_components.code>{\" 组件为 \"}<_components.code>{\"pages/a/index.js\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li>{\"访问 \"}<_components.code>{\"/a/b\"}</_components.code>{\" 时，对应的 \"}<_components.code>{\"Component\"}</_components.code>{\" 组件为 \"}<_components.code>{\"pages/a/b/index.js\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.div className=\"modern-directive tip\"><_components.div className=\"modern-directive-title\">{\"全局 layout 有以下优点\"}</_components.div><_components.div className=\"modern-directive-content\">{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"页面变化时，保留全局布局的状态\"}</_components.li>{\"\\n\"}<_components.li>{\"添加全局样式\"}</_components.li>{\"\\n\"}<_components.li>{\"ComponentDidCatch 错误处理\"}</_components.li>{\"\\n\"}<_components.li>{\"使用 \"}<_components.a href=\"/apis/app/runtime/app/define-config\">{\"defineConfig\"}</_components.a>{\" 动态配置运行时配置。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}</_components.div></_components.div>{\"\\n\"}<_components.h3 id=\"部分-layout\">{\"部分 layout\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#部分-layout\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"开发应用时，存在同一路由下的子路由共用 layout 的场景。\"}</_components.p>{\"\\n\"}<_components.p>{\"针对这一场景，Modern.js 约定，当目录下存在 \"}<_components.code>{\"_layout.js\"}</_components.code>{\" ，就会有类似全局 layout 的效果。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如以下目录结构:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"└── pages\\n    ├── a\\n    │   ├── b\\n    │   │   └── index.js\\n    │   ├── _layout.js\\n    │   └── index.js\\n    └── index.js\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.pre><_components.code className=\"language-js\" meta='title=\"pages/a/_layout.js\"'>{\"import React from 'react';\\n\\nconst ALayout = ({ Component, ...pageProps }) => {\\n  return <Component {...pageProps} />;\\n};\\nexport default ALayout;\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"Component 参数为访问具体路由对应的组件，例如\"}</_components.p>{\"\\n\"}<_components.ul>{\"\\n\"}<_components.li>{\"访问 \"}<_components.code>{\"/a\"}</_components.code>{\" 时，对应的 \"}<_components.code>{\"Component\"}</_components.code>{\" 组件为 \"}<_components.code>{\"pages/a/index.js\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}<_components.li>{\"访问 \"}<_components.code>{\"/a/b\"}</_components.code>{\" 时，对应的 \"}<_components.code>{\"Component\"}</_components.code>{\" 组件为 \"}<_components.code>{\"pages/a/b/index.js\"}</_components.code>{\"。\"}</_components.li>{\"\\n\"}</_components.ul>{\"\\n\"}<_components.p>{\"这样就可以用 \"}<_components.code>{\"pages/a/_layout.js\"}</_components.code>{\" 满足 \"}<_components.code>{\"a\"}</_components.code>{\" 目录下路由共用 layout 的需求。\"}</_components.p>{\"\\n\"}<_components.h3 id=\"404-路由\">{\"404 路由\"}<_components.a className=\"header-anchor\" aria-hidden=\"true\" href=\"#404-路由\">{\"#\"}</_components.a></_components.h3>{\"\\n\"}<_components.p>{\"约定 \"}<_components.code>{\"pages/404.[tj]sx\"}</_components.code>{\" 为默认的 404 路由。\"}</_components.p>{\"\\n\"}<_components.p>{\"例如以下目录结构:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\".\\n└── src\\n    └── pages\\n        ├── user.js\\n        ├── home.js\\n        ├── 404.js\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"生成路由配置如下:\"}</_components.p>{\"\\n\"}<_components.pre><_components.code className=\"language-bash\">{\"[\\n { path: '/user', component: './pages/user.js'},\\n { path: '/home', component: './pages/home.js' },\\n { path: '*', component: './pages/404.js'}\\n]\\n\"}</_components.code></_components.pre>{\"\\n\"}<_components.p>{\"所有未匹配的路由，都将匹配到 \"}<_components.code>{\"pages/404.[tj]s\"}</_components.code>{\"。\"}</_components.p></>;\n}\nfunction MDXContent(props = {}) {\n    const { wrapper: MDXLayout } = Object.assign({}, _provideComponents(), props.components);\n    return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props}/></MDXLayout> : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","p","code","div","pre","ul","li","h3","components","id","className","href","target","rel","meta","globalThis","__RSPRESS_PAGE_META","MDXLayout","wrapper","_"],"mappings":"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"}