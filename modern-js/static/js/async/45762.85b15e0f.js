"use strict";(self.webpackChunk_modern_js_main_doc=self.webpackChunk_modern_js_main_doc||[]).push([["45762"],{74785:function(e,n,t){t.r(n),t.d(n,{default:function(){return i}});var a=t(38093),r=t(75878);function l(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",strong:"strong",code:"code",pre:"pre",p:"p"},(0,r.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"htmltemplateparameters",children:["html.templateParameters",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#htmltemplateparameters",children:"#"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Type:"})," ",(0,a.jsx)(n.code,{children:"Object | Function"})]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:"Default:"})}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"type DefaultParameters = {\n  mountId: string; // corresponding to html.mountId config\n  entryName: string; // entry name\n  assetPrefix: string; // corresponding to output.assetPrefix config\n  compilation: webpack.Compilation; // Compilation object corresponding to webpack\n  webpackConfig: config; // webpack config\n  // htmlWebpackPlugin built-in parameters\n  // See https://github.com/jantimon/html-webpack-plugin for details\n  htmlWebpackPlugin: {\n    tags: object;\n    files: object;\n    options: object;\n  };\n};\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Define the parameters in the HTML template, corresponding to the ",(0,a.jsx)(n.code,{children:"templateParameters"})," config of ",(0,a.jsx)(n.a,{href:"https://github.com/jantimon/html-webpack-plugin",target:"_blank",rel:"noopener noreferrer",children:"html-webpack-plugin"}),". You can use the config as an object or a function."]}),"\n",(0,a.jsx)(n.p,{children:"If it is an object, it will be merged with the default parameters. For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"export default {\n  html: {\n    templateParameters: {\n      title: 'My App',\n    },\n  },\n};\n"})}),"\n",(0,a.jsx)(n.p,{children:"If it is a function, the default parameters will be passed in, and you can return an object to override the default parameters. For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"export default {\n  html: {\n    templateParameters(defaultValue, { entryName }) {\n      const params = {\n        foo: {\n          ...defaultValue,\n          type: 'Foo',\n        },\n        bar: {\n          ...defaultValue,\n          type: 'Bar',\n          hello: 'world',\n        },\n      };\n      return params[entryName] || defaultValue;\n    },\n  },\n};\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For detailed usage, please refer to ",(0,a.jsx)(n.a,{href:"https://rsbuild.dev/config/html/template-parameters",target:"_blank",rel:"noopener noreferrer",children:"Rsbuild - html.templateParameters"}),"."]})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}let i=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["en%2Fconfigure%2Fapp%2Fhtml%2Ftemplate-parameters.mdx"]={toc:[],title:"templateParameters",frontmatter:{title:"templateParameters"}}}}]);