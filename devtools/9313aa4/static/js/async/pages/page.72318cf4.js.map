{"version":3,"file":"static/js/async/pages/page.72318cf4.js","sources":["./src/routes/pages/BaseRoute.tsx","./src/routes/pages/EntryRoute/ClientRouteStats/ClientRouteStats.tsx","./src/routes/pages/EntryRoute/ClientRouteStats/LegacyRouteStats.tsx","./src/routes/pages/EntryRoute/ClientRouteStats/RemixRoute.tsx","./src/routes/pages/EntryRoute/ClientRouteStats/RemixRouteStats.tsx","./src/routes/pages/EntryRoute/EntryRoute.tsx","./src/routes/pages/EntryRoute/EntryStats.tsx","./src/routes/pages/MatchUrl.tsx","./src/routes/pages/ServerRoute.tsx","./src/routes/pages/UnknownRoute.tsx","./src/routes/pages/page.tsx","./src/routes/pages/EntryRoute/MatchRemixRouteContext.ts"],"sourcesContent":["import React,{useContext,useState}from'react';import*as Collapsible from'@radix-ui/react-collapsible';import{Box,Card,Text}from'@radix-ui/themes';import{CaretSortIcon}from'@radix-ui/react-icons';import{parseURL}from'ufo';import styled from'@emotion/styled';import{MatchUrlContext}from'./MatchUrl';export const BaseRoute=({badge,route,title,children,open,onOpenChange})=>{const url=useContext(MatchUrlContext);const[_open,_setOpen]=useState(false);const isMatching=Boolean(url);const{pathname}=parseURL(url);const isMatched=pathname===route.urlPath||pathname.startsWith(`${route.urlPath}/`);const isOpen=isMatched||(open??_open);return<Container>\n      <Collapsible.Root open={isOpen}onOpenChange={onOpenChange??_setOpen}>\n        <CollapsibleTrigger>\n          {badge}\n          <UrlText data-miss-matched={isMatching&&!isMatched}>\n            {title}\n          </UrlText>\n          <Box grow=\"1\"/>\n          <CollapsedMark open={isOpen}>\n            <CaretSortIcon/>\n          </CollapsedMark>\n        </CollapsibleTrigger>\n        <CollapsibleContent>{children}</CollapsibleContent>\n      </Collapsible.Root>\n    </Container>;};const Container=styled(Card)({backgroundColor:'#181818'});const CollapsibleTrigger=styled(Collapsible.Trigger)({all:'unset',width:'100%',display:'flex',gap:'var(--space-2)',alignItems:'center'});const CollapsibleContent=styled(Collapsible.Content)({paddingTop:'var(--space-2)'});const UrlText=styled(Text)({color:'var(--gray-12)',fontSize:'var(--font-size-2)',transition:'color 200ms','&[data-miss-matched=\"true\"]':{color:'var(--gray-10)'}});const CollapsedMark=styled(Box)(props=>({backgroundColor:props.open?'var(--gray-4)':'transparent',height:'var(--font-size-5)',width:'var(--font-size-5)',borderRadius:'var(--radius-2)',display:'flex',justifyContent:'center',alignItems:'center',transition:'background-color 100ms'}));","import _ from'lodash';import React from'react';import{useSnapshot}from'valtio';import{LegacyRouteStats}from'./LegacyRouteStats';import{RemixRouteStats}from'./RemixRouteStats';import{useStore}from'@/stores';export const ClientRouteStats=({route})=>{const $store=useStore();const store=useSnapshot($store);const{entrypoints}=store.framework.context;const entrypoint=route.entryName&&_.find(entrypoints,{entryName:route.entryName});if(!entrypoint){throw new Error(`Can't found the entrypoint named ${JSON.stringify(route.entryName)}`);}const fileSystemRoute=store.framework.fileSystemRoutes[entrypoint.entryName];if(isLegacyRoutes(fileSystemRoute)){return<LegacyRouteStats/>;}else{return<RemixRouteStats remixRoutes={fileSystemRoute}route={route}/>;}};const isLegacyRoutes=routes=>routes[0]&&!('type'in routes[0]);","import React from'react';import{Text}from'@radix-ui/themes';export const LegacyRouteStats=()=>{return<Text>Unimplemented.</Text>;};","import React,{useContext,useRef}from'react';import{Box,Flex,Link,Code}from'@radix-ui/themes';import styled from'@emotion/styled';import _ from'lodash';import{withoutTrailingSlash}from'ufo';import{useHoverDirty}from'react-use';import{applyShortenAliases}from'@modern-js/devtools-kit';import{MatchRemixRouteContext}from'../MatchRemixRouteContext';import{useStoreSnapshot}from'@/stores';export const RemixRoute=({route})=>{const store=useStoreSnapshot();const routes=_.castArray(route);const curr=_.last(routes);const componentFile='_component'in curr&&_.isString(curr._component)?curr._component:null;const displayPath=routes.map(r=>r.path&&withoutTrailingSlash(r.path)).filter(_.isString).join('/');const isIndex=curr.index??false;const isRoot=displayPath==='/';const matched=useContext(MatchRemixRouteContext);const isMatching=matched.length>0;const isMatched=_.find(matched,{route:{id:curr.id}});const ref=useRef(null);const hovered=useHoverDirty(ref);return<Box ref={ref}>\n      <Flex gap=\"2\"align=\"center\"mb={curr.children&&'1'}>\n        <EndpointContainer data-miss-matched={isMatching&&!isMatched}>\n          {!isRoot&&<EndpointTag data-compose={isIndex&&'head'}>\n              {displayPath}\n            </EndpointTag>}\n          {isIndex&&<EndpointTag color=\"purple\"data-compose={!isRoot&&'tail'}>\n              /(index)\n            </EndpointTag>}\n        </EndpointContainer>\n        {hovered&&componentFile&&<ShyLink>\n            {applyShortenAliases(componentFile,store.aliases)}\n          </ShyLink>}\n      </Flex>\n      <Flex direction=\"column\"gap=\"1\">\n        {curr.children?.map(route=><RemixRoute key={route.id}route={routes.concat(route)}/>)}\n      </Flex>\n    </Box>;};const EndpointTag=styled(Code)({fontSize:'var(--font-size-2)','&[data-compose=\"head\"]':{paddingRight:'0',borderTopRightRadius:'0',borderBottomRightRadius:'0'},'&[data-compose=\"tail\"]':{paddingLeft:'0',borderTopLeftRadius:'0',borderBottomLeftRadius:'0'}});const ShyLink=styled(Link)({color:'var(--gray-9)',fontSize:'var(--font-size-1)'});const EndpointContainer=styled(Box)({display:'flex',transition:'opacity 200ms','&[data-miss-matched=\"true\"]':{opacity:'0.5'}});","import{matchRoutes as matchRemixRoutes}from'@modern-js/runtime/router';import{Flex}from'@radix-ui/themes';import React,{useContext,useMemo}from'react';import{MatchUrlContext}from'../../MatchUrl';import{MatchRemixRouteContext}from'../MatchRemixRouteContext';import{RemixRoute}from'./RemixRoute';export const RemixRouteStats=({remixRoutes,route})=>{const testingUrl=useContext(MatchUrlContext);const matchedRoutes=useMemo(()=>{if(!testingUrl||!remixRoutes)return[];const location=testingUrl.replace(route.urlPath,'');const matched=matchRemixRoutes(remixRoutes,location)??[];return matched;},[remixRoutes,testingUrl]);if(!remixRoutes.length)return null;return<MatchRemixRouteContext.Provider value={matchedRoutes}>\n      <Flex gap=\"2\"direction=\"column\">\n        {remixRoutes.map(r=><RemixRoute key={r.id}route={{...r,path:route.urlPath+(r.path??'')}}/>)}\n      </Flex>\n    </MatchRemixRouteContext.Provider>;};","import React from'react';import{Badge,Flex}from'@radix-ui/themes';import{BaseRoute}from'../BaseRoute';import{EntryStats}from'./EntryStats';import{ClientRouteStats}from'./ClientRouteStats';const EntryRoute=({route})=>{return<BaseRoute badge={badge}route={route}title={route.urlPath}>\n      <Flex direction=\"column\"gap=\"2\">\n        <EntryStats route={route}/>\n        <ClientRouteStats route={route}/>\n      </Flex>\n    </BaseRoute>;};export default EntryRoute;const badge=<Badge color=\"cyan\">Entry</Badge>;","import React from'react';import _ from'lodash';import{useSnapshot}from'valtio';import{Box,Card,Flex,Strong,Text}from'@radix-ui/themes';import styled from'@emotion/styled';import{useStore}from'@/stores';export const EntryStats=({route})=>{const $store=useStore();const store=useSnapshot($store);const{entrypoints}=store.framework.context;const entrypoint=route.entryName&&_.find(entrypoints,{entryName:route.entryName});if(!entrypoint){throw new Error(`Can't found the entrypoint named ${JSON.stringify(route.entryName)}`);}return<Stats>\n      <Box>\n        <Flex gap=\"1\">\n          <Strong>Directory: </Strong>\n          <Text>{entrypoint.absoluteEntryDir}</Text>\n        </Flex>\n        <Flex gap=\"1\">\n          <Strong>Entry:</Strong>\n          <Text>{entrypoint.entry}</Text>\n        </Flex>\n      </Box>\n    </Stats>;};const Stats=styled(Card)({fontSize:'var(--font-size-1)'});","import{createContext}from'react';export const MatchUrlContext=createContext('');","import React from'react';import _ from'lodash';import EntryRoute from'./EntryRoute/EntryRoute';import UnknownRoute from'./UnknownRoute';export const ServerRoute=({route})=>{return dispatchServerRoute(route);};const dispatchServerRoute=route=>{if(_.isString(route.entryName)){return<EntryRoute route={route}/>;}else{return<UnknownRoute route={route}/>;}};","import React from'react';import{Badge,Card}from'@radix-ui/themes';import{BaseRoute}from'./BaseRoute';const UnknownRoute=({route})=>{return<BaseRoute badge={badge}route={route}title={route.urlPath}>\n      <Card>Unknown route type.</Card>\n    </BaseRoute>;};export default UnknownRoute;const badge=<Badge color=\"gray\">Unknown</Badge>;","import styled from'@emotion/styled';import{Box,Text,TextField}from'@radix-ui/themes';import React,{useState}from'react';import{useSnapshot}from'valtio';import{MatchUrlContext}from'./MatchUrl';import{ServerRoute}from'./ServerRoute';import{useStore}from'@/stores';const Page=()=>{const $store=useStore();const store=useSnapshot($store);const{serverRoutes}=store.framework.context;const[testingUrl,setTestingUrl]=useState('');return<MatchUrlContext.Provider value={testingUrl}>\n      <Container>\n        <Box>\n          <TextField.Root>\n            <TextField.Slot>\n              <Text size=\"2\">test:</Text>\n            </TextField.Slot>\n            <TextField.Input placeholder=\"/foo?bar#baz\"onChange={e=>setTestingUrl(e.target.value)}type=\"search\"autoComplete=\"false\"autoCapitalize=\"false\"autoCorrect=\"false\"/>\n          </TextField.Root>\n        </Box>\n        <Box height=\"2\"/>\n        <RoutesContainer>\n          {serverRoutes.map(route=><ServerRoute key={route.entryPath}route={route}/>)}\n        </RoutesContainer>\n      </Container>\n    </MatchUrlContext.Provider>;};export default Page;const Container=styled(Box)({});const RoutesContainer=styled(Box)({display:'flex',flexDirection:'column',gap:'var(--space-2)',justifyContent:'space-between'});","import{createContext}from'react';export const MatchRemixRouteContext=createContext([]);"],"names":["BaseRoute","badge","route","title","children","open","onOpenChange","url","useContext","MatchUrlContext","_open","_setOpen","useState","isMatching","Boolean","pathname","parseURL","isMatched","urlPath","startsWith","isOpen","Container","CollapsibleTrigger","UrlText","Box","grow","CollapsedMark","CaretSortIcon","CollapsibleContent","Card","backgroundColor","all","width","display","gap","alignItems","paddingTop","Text","color","fontSize","transition","props","height","borderRadius","justifyContent","ClientRouteStats","$store","useStore","store","useSnapshot","entrypoints","framework","context","entrypoint","entryName","Error","JSON","stringify","fileSystemRoute","fileSystemRoutes","isLegacyRoutes","LegacyRouteStats","RemixRouteStats","remixRoutes","routes","RemixRoute","useStoreSnapshot","curr","componentFile","_component","displayPath","map","r","path","withoutTrailingSlash","filter","join","isIndex","index","isRoot","matched","MatchRemixRouteContext","length","id","ref","useRef","hovered","useHoverDirty","Flex","align","mb","EndpointContainer","EndpointTag","ShyLink","applyShortenAliases","aliases","direction","concat","Code","paddingRight","borderTopRightRadius","borderBottomRightRadius","paddingLeft","borderTopLeftRadius","borderBottomLeftRadius","Link","opacity","testingUrl","matchedRoutes","useMemo","location","replace","value","EntryStats","Badge","Stats","Strong","absoluteEntryDir","entry","createContext","ServerRoute","dispatchServerRoute","serverRoutes","setTestingUrl","TextField","size","placeholder","onChange","e","target","type","autoComplete","autoCapitalize","autoCorrect","RoutesContainer","entryPath","flexDirection"],"mappings":"+SAAsTA,EAAU,AAAC,I,GAAA,CAACC,MAAAA,CAAK,CAACC,MAAAA,CAAK,CAACC,MAAAA,CAAK,CAACC,SAAAA,CAAQ,CAACC,KAAAA,CAAI,CAACC,aAAAA,CAAY,CAAC,GAAUC,EAAI,KAAAC,UAAA,EAAW,EAAAC,eAAe,EAAO,CAACC,EAAMC,EAAS,CAAC,KAAAC,QAAA,EAAS,IAAaC,EAAWC,CAAAA,CAAQP,EAAU,CAACQ,SAAAA,CAAQ,CAAC,CAAC,KAAAC,QAAA,EAAST,GAAWU,EAAUF,IAAWb,EAAMgB,OAAO,EAAEH,EAASI,UAAU,CAAE,GAAgB,OAAdjB,EAAMgB,OAAO,CAAC,MAAUE,EAAOH,GAAYZ,CAAAA,MAAAA,EAAAA,EAAMK,CAAI,EAAG,MAAM,UAACW,EAAA,C,SACrnB,WAAC,MAAgB,EAAChB,KAAMe,EAAOd,aAAcA,MAAAA,EAAAA,EAAcK,E,UACzD,WAACW,EAAA,C,UACErB,EACD,UAACsB,EAAA,CAAQ,oBAAmBV,GAAY,CAACI,E,SACtCd,C,GAEH,UAAC,EAAAqB,GAAG,EAACC,KAAK,G,GACV,UAACC,EAAA,CAAcrB,KAAMe,E,SACnB,UAAC,EAAAO,aAAa,I,MAGlB,UAACC,EAAA,C,SAAoBxB,C,OAEZ,EAAQiB,EAAU,cAAO,EAAAQ,IAAI,EAAE,CAACC,gBAAgB,SAAS,GAASR,EAAmB,cAAO,SAAmB,EAAE,CAACS,IAAI,QAAQC,MAAM,OAAOC,QAAQ,OAAOC,IAAI,iBAAiBC,WAAW,QAAQ,GAASP,EAAmB,cAAO,SAAmB,EAAE,CAACQ,WAAW,gBAAgB,GAASb,EAAQ,cAAO,EAAAc,IAAI,EAAE,CAACC,MAAM,iBAAiBC,SAAS,qBAAqBC,WAAW,cAAc,8BAA8B,CAACF,MAAM,gBAAgB,CAAC,GAASZ,EAAc,cAAO,EAAAF,GAAG,EAAE,AAAAiB,GAAQ,EAACX,gBAAgBW,EAAMpC,IAAI,CAAC,gBAAgB,cAAcqC,OAAO,qBAAqBV,MAAM,qBAAqBW,aAAa,kBAAkBV,QAAQ,OAAOW,eAAe,SAAST,WAAW,SAASK,WAAW,wBAAwB,G,oMCdxgBK,EAAiB,AAAC,I,GAAA,CAAC3C,MAAAA,CAAK,CAAC,GAAU4C,EAAO,KAAAC,QAAA,IAAiBC,EAAM,KAAAC,WAAA,EAAYH,GAAa,CAACI,YAAAA,CAAW,CAAC,CAACF,EAAMG,SAAS,CAACC,OAAO,CAAOC,EAAWnD,EAAMoD,SAAS,EAAE,MAAM,CAACJ,EAAY,CAACI,UAAUpD,EAAMoD,SAAS,GAAG,GAAG,CAACD,EAAY,MAAM,AAAIE,MAAO,oCAAmE,OAAhCC,KAAKC,SAAS,CAACvD,EAAMoD,SAAS,IAAM,IAAMI,EAAgBV,EAAMG,SAAS,CAACQ,gBAAgB,CAACN,EAAWC,SAAS,CAAC,QAAC,AAAGM,EAAeF,GAAwB,UAAC,EAAAG,gBAAgB,KAAe,UAAC,EAAAC,eAAe,EAACC,YAAaL,EAAgBxD,MAAOA,C,EAAU,EAAQ0D,EAAe,AAAAI,GAAQA,CAAM,CAAC,EAAE,EAAE,CAAE,UAASA,CAAM,CAAC,EAAC,C,uICA/tBH,EAAiB,IAAW,UAAC,EAAAxB,IAAI,E,SAAC,gB,qOCAkS4B,EAAW,AAAC,I,IAehZ,EAf+rB,EAA/S,CAAC/D,MAAAA,CAAK,CAAC,GAAU8C,EAAM,KAAAkB,gBAAA,IAAyBF,EAAO,WAAW,CAAC9D,GAAaiE,EAAK,MAAM,CAACH,GAAcI,EAAc,eAAeD,GAAM,UAAU,CAACA,EAAKE,UAAU,EAAEF,EAAKE,UAAU,CAAC,KAAWC,EAAYN,EAAOO,GAAG,CAAC,AAAAC,GAAGA,EAAEC,IAAI,EAAE,KAAAC,oBAAA,EAAqBF,EAAEC,IAAI,GAAGE,MAAM,CAAC,UAAU,EAAEC,IAAI,CAAC,KAAWC,EAAQ,AAAU,OAAV,GAAAV,EAAKW,KAAK,AAAD,GAAT,cAAwBC,EAAOT,AAAc,MAAdA,EAAwBU,EAAQ,KAAAxE,UAAA,EAAW,EAAAyE,sBAAsB,EAAQpE,EAAWmE,EAAQE,MAAM,CAAC,EAAQjE,EAAU,MAAM,CAAC+D,EAAQ,CAAC9E,MAAM,CAACiF,GAAGhB,EAAKgB,EAAE,CAAC,GAASC,EAAI,KAAAC,MAAA,EAAO,MAAYC,EAAQ,KAAAC,aAAA,EAAcH,GAAK,MAAM,WAAC,EAAA5D,GAAG,EAAC4D,IAAKA,E,UACn8B,WAAC,EAAAI,IAAI,EAACtD,IAAI,IAAGuD,MAAM,SAAQC,GAAIvB,EAAK/D,QAAQ,EAAE,I,UAC5C,WAACuF,EAAA,CAAkB,oBAAmB9E,GAAY,CAACI,E,UAChD,CAAC8D,GAAQ,UAACa,EAAA,CAAY,eAAcf,GAAS,O,SACzCP,C,GAEJO,GAAS,UAACe,EAAA,CAAYtD,MAAM,SAAQ,eAAc,CAACyC,GAAQ,O,SAAQ,U,MAIrEO,GAASlB,GAAe,UAACyB,EAAA,C,SACrB,KAAAC,mBAAA,EAAoB1B,EAAcpB,EAAM+C,OAAO,C,MAGtD,UAAC,EAAAP,IAAI,EAACQ,UAAU,SAAQ9D,IAAI,I,SACZ,OAAb,GAAAiC,EAAK/D,QAAQ,AAAD,GAAZ,oBAAemE,GAAG,CAAC,AAAArE,GAAO,UAAC+D,EAAA,CAAyB/D,MAAO8D,EAAOiC,MAAM,CAAC/F,E,EAA9BA,EAAMiF,EAAE,E,KAEjD,EAAQS,EAAY,cAAO,EAAAM,IAAI,EAAE,CAAC3D,SAAS,qBAAqB,yBAAyB,CAAC4D,aAAa,IAAIC,qBAAqB,IAAIC,wBAAwB,GAAG,EAAE,yBAAyB,CAACC,YAAY,IAAIC,oBAAoB,IAAIC,uBAAuB,GAAG,CAAC,GAASX,EAAQ,cAAO,EAAAY,IAAI,EAAE,CAACnE,MAAM,gBAAgBC,SAAS,oBAAoB,GAASoD,EAAkB,cAAO,EAAAnE,GAAG,EAAE,CAACS,QAAQ,OAAOO,WAAW,gBAAgB,8BAA8B,CAACkE,QAAQ,KAAK,CAAC,E,kNCjBvK5C,EAAgB,AAAC,I,IAEjP,EAFiP,CAACC,YAAAA,CAAW,CAAC7D,MAAAA,CAAK,CAAC,GAAUyG,EAAW,KAAAnG,UAAA,EAAW,EAAAC,eAAe,EAAQmG,EAAc,KAAAC,OAAA,EAAQ,KAAK,GAAG,CAACF,GAAY,CAAC5C,EAAY,MAAM,EAAE,CAAC,IAAkE,EAA5D+C,EAASH,EAAWI,OAAO,CAAC7G,EAAMgB,OAAO,CAAC,IAA6D,OAA3C,AAA6B,OAA7B,qBAAiB6C,EAAY+C,EAAQ,GAArC,aAAwC,EAAE,AAAgB,EAAE,CAAC/C,EAAY4C,EAAW,SAAE,AAAI5C,EAAYmB,MAAM,CAAmB,UAAC,EAAAD,sBAAA,SAA+B,EAAC+B,MAAOJ,E,SAClrB,UAAC,EAAApB,IAAI,EAACtD,IAAI,IAAG8D,UAAU,S,SACpBjC,EAAYQ,GAAG,CAAC,AAAAC,GAAG,UAAC,EAAAP,UAAU,EAAW/D,MAAO,mBAAIsE,GAAA,CAAEC,KAAKvE,EAAMgB,OAAO,CAAE,CAAM,OAAN,GAAAsD,EAAEC,IAAI,AAAD,GAAL,aAAQ,EAAC,C,IAA/CD,EAAEW,EAAE,E,KAFolB,IAI9lB,C,oKCCpB,EAL0L,AAAC,I,GAAA,CAACjF,MAAAA,CAAK,CAAC,GAAI,MAAM,UAAC,EAAAF,SAAS,EAACC,MAAOA,EAAMC,MAAOA,EAAMC,MAAOD,EAAMgB,OAAO,C,SAClR,WAAC,EAAAsE,IAAI,EAACQ,UAAU,SAAQ9D,IAAI,I,UAC1B,UAAC,EAAA+E,UAAU,EAAC/G,MAAOA,C,GACnB,UAAC,EAAA2C,gBAAgB,EAAC3C,MAAOA,C,OAEhB,EAAkCD,EAAM,UAAC,EAAAiH,KAAK,EAAC5E,MAAM,O,SAAO,O,gMCL0I2E,EAAW,AAAC,I,GAAA,CAAC/G,MAAAA,CAAK,CAAC,GAAU4C,EAAO,KAAAC,QAAA,IAAgD,CAACG,YAAAA,CAAW,CAAC,CAACF,AAAvC,KAAAC,WAAA,EAAYH,GAAiCK,SAAS,CAACC,OAAO,CAAOC,EAAWnD,EAAMoD,SAAS,EAAE,MAAM,CAACJ,EAAY,CAACI,UAAUpD,EAAMoD,SAAS,GAAG,GAAG,CAACD,EAAY,MAAM,AAAIE,MAAO,oCAAmE,OAAhCC,KAAKC,SAAS,CAACvD,EAAMoD,SAAS,IAAM,MAAM,UAAC6D,EAAA,C,SAC5gB,WAAC,EAAA3F,GAAG,E,UACF,WAAC,EAAAgE,IAAI,EAACtD,IAAI,I,UACR,UAAC,EAAAkF,MAAM,E,SAAC,a,GACR,UAAC,EAAA/E,IAAI,E,SAAEgB,EAAWgE,gBAAgB,A,MAEpC,WAAC,EAAA7B,IAAI,EAACtD,IAAI,I,UACR,UAAC,EAAAkF,MAAM,E,SAAC,Q,GACR,UAAC,EAAA/E,IAAI,E,SAAEgB,EAAWiE,KAAK,A,UAGpB,EAAQH,EAAM,cAAO,EAAAtF,IAAI,EAAE,CAACU,SAAS,oBAAoB,E,0FCX9B,IAAM9B,EAAgB,G,WAAA8G,aAAA,EAAc,G,qKCAyEC,EAAY,AAAC,I,GAAA,CAACtH,MAAAA,CAAK,CAAC,GAAI,OAAOuH,EAAoBvH,EAAO,EAAQuH,EAAoB,AAAAvH,GAAQ,AAAG,UAAU,CAACA,EAAMoD,SAAS,EAAS,UAAC,SAAU,EAACpD,MAAOA,C,GAAqB,UAAC,SAAY,EAACA,MAAOA,C,4ICEnU,EAFqG,AAAC,I,GAAA,CAACA,MAAAA,CAAK,CAAC,GAAI,MAAM,UAAC,EAAAF,SAAS,EAACC,MAAOA,EAAMC,MAAOA,EAAMC,MAAOD,EAAMgB,OAAO,C,SAC7L,UAAC,EAAAW,IAAI,E,SAAC,qB,IACK,EAAoC5B,EAAM,UAAC,EAAAiH,KAAK,EAAC5E,MAAM,O,SAAO,S,+LCa7C,EAf+O,KAAK,IAAMQ,EAAO,KAAAC,QAAA,IAAgD,CAAC2E,aAAAA,CAAY,CAAC,CAAC1E,AAAxC,KAAAC,WAAA,EAAYH,GAAkCK,SAAS,CAACC,OAAO,CAAM,CAACuD,EAAWgB,EAAc,CAAC,KAAA/G,QAAA,EAAS,IAAI,MAAM,UAAC,EAAAH,eAAA,SAAwB,EAACuG,MAAOL,E,SACxc,WAACtF,EAAA,C,UACC,UAAC,EAAAG,GAAG,E,SACF,WAAC,EAAAoG,SAAA,KAAc,E,UACb,UAAC,EAAAA,SAAA,KAAc,E,SACb,UAAC,EAAAvF,IAAI,EAACwF,KAAK,I,SAAI,O,KAEjB,UAAC,EAAAD,SAAA,MAAe,EAACE,YAAY,eAAcC,SAAU,AAAAC,GAAGL,EAAcK,EAAEC,MAAM,CAACjB,KAAK,EAAEkB,KAAK,SAAQC,aAAa,QAAOC,eAAe,QAAOC,YAAY,O,QAG7J,UAAC,EAAA7G,GAAG,EAACkB,OAAO,G,GACZ,UAAC4F,EAAA,C,SACEZ,EAAanD,GAAG,CAAC,AAAArE,GAAO,UAAC,EAAAsH,WAAW,EAAsBtH,MAAOA,C,EAAvBA,EAAMqI,SAAS,E,OAGpC,EAA4BlH,EAAU,cAAO,EAAAG,GAAG,EAAE,CAAC,GAAS8G,EAAgB,cAAO,EAAA9G,GAAG,EAAE,CAACS,QAAQ,OAAOuG,cAAc,SAAStG,IAAI,iBAAiBU,eAAe,eAAe,E,uKCf1K,IAAMqC,EAAuB,G,WAAAsC,aAAA,EAAc,EAAE,C"}